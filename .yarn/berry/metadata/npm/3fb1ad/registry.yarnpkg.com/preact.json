{"metadata":{"dist-tags":{"legacy":"8.5.3","next":"10.0.5","experimental":"11.0.0-experimental.1","latest":"10.26.9"},"versions":{"1.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.2.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"jshint {src,tests}/**.js && mocha --compilers js:babel/register test","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build"}},"1.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.3.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node"}},"1.3.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.3.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node"}},"1.3.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.3.2.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"1.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.4.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"1.5.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.5.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"1.5.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.5.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"1.5.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.5.2.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel -f preact.js -s -o $npm_package_main < src/${npm_package_main}","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.0.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.0.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel -f preact.js -s -o $npm_package_main < src/${npm_package_main}","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.0.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel -f preact.js -s -o $npm_package_main < src/${npm_package_main}","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.1.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel -f preact.js -s -o $npm_package_main < src/${npm_package_main}","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.2.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel -f preact.js -s -o $npm_package_main < src/${npm_package_main}","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.3.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel -f preact.js -s -o $npm_package_main < src/${npm_package_main}","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.4.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.4.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.4.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.5.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.5.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.5.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.5.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.6.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.6.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.6.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.6.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.7.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.7.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.7.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.7.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.7.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.7.2.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.7.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.7.3.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.8.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.8.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm-run-all --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.8.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.8.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm-run-all --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.8.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.8.2.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm-run-all --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.0-beta1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.0-beta1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main --mangle-regex=\"/^(classCallCheck|components|normalizeName|add|clean|process|collect|create|nodes|itemsOffline)$/\" --mangle-props -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.8.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.8.3.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm-run-all --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.0-beta2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.0-beta2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main --mangle-regex=\"/^(classCallCheck|components|normalizeName|add|clean|process|collect|create|nodes|itemsOffline)$/\" --mangle-props -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.0-beta3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.0-beta3.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main --mangle-regex=\"/^(classCallCheck|components|normalizeName|add|clean|process|collect|create|nodes|itemsOffline)$/\" --mangle-props -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.0-beta4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.0-beta4.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main --mangle-regex=\"/^(classCallCheck|components|normalizeName|add|clean|process|collect|create|nodes|itemsOffline)$/\" --mangle-props -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main --mangle-regex=\"/^(classCallCheck|components|normalizeName|add|clean|process|collect|create|nodes|itemsOffline)$/\" --mangle-props -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.1.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.2.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.3.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.4.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.0.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.0.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.0.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.1.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.1.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.1.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.1.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.1.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.1.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.1.3.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.2.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.3.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.3.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.3.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.3.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.3.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.4.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.5.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.5.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.5.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.5.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.6.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.6.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.6.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.6.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.6.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.6.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.6.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.6.3.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.7.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.7.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.7.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.7.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.7.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.7.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.8.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.8.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta3.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta4.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta5.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta6.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta7":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta7.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta8":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta8.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta9":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta9.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta10":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta10.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta11":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta11.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.1-beta.12":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.1-beta.12.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.1-beta.14":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.1-beta.14.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.1-beta.15":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.1-beta.15.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.16":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.16.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.17":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.17.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.18":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.18.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.19":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.19.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.20":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.20.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.21":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.21.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.22":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.22.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.1.0-beta.23":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.23.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.1.0-beta.24":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.24.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.1.0-beta.25":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.25.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.1.0-beta.26":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.26.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.2.0-beta.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.2.0-beta.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.3.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.3.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.3.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.3.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.3.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.4.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.4.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.4.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.5.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.5.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.6.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.6.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.7.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.7.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.0.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.0.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.0.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.0.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.0.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.1.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.2.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.2.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.2.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.3.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.4.0.tgz"},"scripts":{"lint":"eslint devtools src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"7.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-7.0.1.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ aliases.js aliases.js.map  devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -f umd -n preact src/preact.js -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m aliases.js.map -f umd -n preact src/preact.js -o aliases.js","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"copyfiles src/preact.d.ts dist/preact.d.ts"}},"7.0.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-7.0.2.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ aliases.js aliases.js.map  devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -f umd -n preact src/preact.js -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m aliases.js.map -f umd -n preact src/preact.js -o aliases.js","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"copyfiles src/preact.d.ts dist/preact.d.ts"}},"7.0.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-7.0.3.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ aliases.js aliases.js.map  devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -f umd -n preact src/preact.js -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m aliases.js.map -f umd -n preact src/preact.js -o aliases.js","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"copyfiles src/preact.d.ts dist/preact.d.ts"}},"7.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-7.1.0.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ aliases.js aliases.js.map  devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -f umd -n preact src/preact.js -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m aliases.js.map -f umd -n preact src/preact.js -o aliases.js","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"7.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-7.2.0.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ aliases.js aliases.js.map  devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -f umd -n preact src/preact.js -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m aliases.js.map -f umd -n preact src/preact.js -o aliases.js","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"7.2.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-7.2.1.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ aliases.js aliases.js.map  devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -f umd -n preact src/preact.js -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m aliases.js.map -f umd -n preact src/preact.js -o aliases.js","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.0.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.0.0.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -n preact -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.0.1.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -n preact -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.1.0.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -n preact -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.0.tgz"},"scripts":{"lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","donate":"echo \"\u001b[35m\u001b[1mLove Preact? You can now donate to our open collective:\u001b[22m\u001b[39m\n > \u001b[34mhttps://opencollective.com/preact/donate\u001b[39m\"","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"npm run -s donate","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js -m dist/preact.esm.js.map -o dist/preact.esm.js","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -n preact -o dist/preact.dev.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.1.tgz"},"scripts":{"lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","donate":"echo \"\u001b[35m\u001b[1mLove Preact? You can now donate to our open collective:\u001b[22m\u001b[39m\n > \u001b[34mhttps://opencollective.com/preact/donate\u001b[39m\"","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"npm run -s donate","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js -m dist/preact.esm.js.map -o dist/preact.esm.js","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -n preact -o dist/preact.dev.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.2.tgz"},"scripts":{"lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node ./config/donation-message.js","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","prepublishOnly":"cp package.json .package.json; node config/prepublish.js","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.3.tgz"},"scripts":{"lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","prepublishOnly":"cp package.json .package.json; node config/prepublish.js","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.4.tgz"},"scripts":{"lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","prepublishOnly":"cp package.json .package.json; node config/prepublish.js","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.5.tgz"},"scripts":{"lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.6.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.7":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.7.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.8":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.8.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js  --source-map \"base='dist/preact.js',content='dist/preact.js.map',filename='dist/preact.min.js.map'\"","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js --source-map \"base='dist/preact.dev.js',content='dist/preact.dev.js.map',filename='dist/preact.js.map'\"","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.9":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.9.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.3.0.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.3.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.3.1.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.4.0.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.4.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.4.1.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.4.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.4.2.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"10.0.0-alpha.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-alpha.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"},"dependencies":{"prop-types":"^15.6.2"}},"10.0.0-alpha.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-alpha.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"},"dependencies":{"prop-types":"^15.6.2"}},"10.0.0-alpha.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-alpha.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"},"dependencies":{"prop-types":"^15.6.2"}},"10.0.0-alpha.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-alpha.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"},"dependencies":{"prop-types":"^15.6.2"}},"10.0.0-alpha.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-alpha.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"},"dependencies":{"prop-types":"^15.6.2"}},"10.0.0-beta.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-beta.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.0-beta.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-beta.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.0-beta.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-beta.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.0-beta.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-beta.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.0-rc.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-rc.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"8.5.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.5.0.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:umd transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","transpile:umd":"rollup -c config/rollup.config.umd.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"10.0.0-rc.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-rc.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"8.5.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.5.1.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:umd transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","transpile:umd":"rollup -c config/rollup.config.umd.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.5.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.5.2.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:umd transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","transpile:umd":"rollup -c config/rollup.config.umd.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"10.0.0-rc.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-rc.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.0-rc.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-rc.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw && cp dist/preact.js dist/preact.min.js","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw && cp dist/preact.js dist/preact.min.js","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw && cp dist/preact.js dist/preact.min.js","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"8.5.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.5.3.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:umd transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","transpile:umd":"rollup -c config/rollup.config.umd.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"10.0.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.5.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.1.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.1.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.1.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.2.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.2.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.2.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.3.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.3.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.3.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.3.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.3.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.3.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.3.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.3.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.3.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.5.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.6.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.7":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.7.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.8":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.8.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && node ./config/check-export-map.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.5.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.6.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/copy-csstype.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.7":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.7.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/copy-csstype.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.8":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.8.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.9":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.9.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.10":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.10.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.11":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.11.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.12":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.12.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.13":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.13.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.14":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.14.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.15":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.15.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.5.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.6.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"11.0.0-experimental.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-11.0.0-experimental.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs --no-generateTypes","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","_bundle":"microbundle build --raw -f modern,cjs,umd --no-generateTypes","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"npm run -s _bundle -- --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks --no-generateTypes","postbuild":"node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"npm run -s _bundle","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks' --no-generateTypes","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"npm run -s _bundle -- --cwd debug","build:hooks":"npm run -s _bundle -- --cwd hooks","build:compat":"npm run -s _bundle -- --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js --no-generateTypes","build:devtools":"npm run -s _bundle -- --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"npm run -s _bundle -- --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"11.0.0-experimental.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-11.0.0-experimental.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs --no-generateTypes","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","_bundle":"microbundle build --raw -f modern,cjs,umd --no-generateTypes","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"npm run -s _bundle -- --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks --no-generateTypes","postbuild":"node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"npm run -s _bundle","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks' --no-generateTypes","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"npm run -s _bundle -- --cwd debug","build:hooks":"npm run -s _bundle -- --cwd hooks","build:compat":"npm run -s _bundle -- --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js --no-generateTypes","build:devtools":"npm run -s _bundle -- --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"npm run -s _bundle -- --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.7.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.7.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.7.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.7.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.7.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.7.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.7.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.7.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.8.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.8.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.8.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.8.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.8.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.8.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.9.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.9.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.5.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.6.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.11.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.11.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.11.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.11.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.11.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.11.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.11.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.11.3.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.12.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.12.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.12.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.12.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.13.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.13.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.13.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.13.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.13.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.13.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.14.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.14.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.14.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.14.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.15.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.15.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.15.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.15.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.16.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.16.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.17.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.17.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.17.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.17.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.18.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.18.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.18.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.18.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.18.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.18.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.3.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.4.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.5.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.6.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.7":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.7.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.20.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.20.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.20.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.20.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.20.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.20.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.21.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.21.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.22.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.22.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.22.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.22.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint src test debug compat hooks test-utils -c oxlint.json","prepare":"husky && run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.23.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.23.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint src test debug compat hooks test-utils -c oxlint.json","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.23.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.23.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint src test debug compat hooks test-utils -c oxlint.json","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.23.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.23.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.24.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.24.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.24.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.24.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.24.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.24.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.24.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.24.3.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.25.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.25.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.25.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.25.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.25.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.25.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.25.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.25.3.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.25.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.25.4.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.3.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.4.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.5.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.6.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:vitest:min test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","test:vitest":"cross-env COVERAGE=true vitest run","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","test:vitest:min":"cross-env MINIFY=true vitest run","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:mocha:watch":"npm run test:mocha -- --watch","test:vitest:watch":"vitest"}},"10.26.7":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.7.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel 'build:*'","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p 'test:ts:*'","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:vitest:min test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","test:vitest":"cross-env COVERAGE=true vitest run","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","test:vitest:min":"cross-env MINIFY=true vitest run","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:mocha:watch":"npm run test:mocha -- --watch","test:vitest:watch":"vitest"}},"10.26.8":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.8.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel 'build:*'","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p 'test:ts:*'","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:vitest:min test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","test:vitest":"cross-env COVERAGE=true vitest run","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","test:vitest:min":"cross-env MINIFY=true vitest run","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:mocha:watch":"npm run test:mocha -- --watch","test:vitest:watch":"vitest"}},"10.26.9":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.9.tgz"},"scripts":{"prepare":"husky && run-s build","build":"npm-run-all --parallel 'build:*'","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","dev":"microbundle watch --raw --no-generateTypes --format cjs","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test":"npm-run-all build lint test:unit","test:unit":"run-p test:mocha test:vitest:min test:ts","test:vitest":"cross-env COVERAGE=true vitest run","test:vitest:min":"cross-env MINIFY=true vitest run","test:vitest:watch":"vitest","test:ts":"run-p 'test:ts:*'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","test:mocha:watch":"npm run test:mocha -- --watch","lint":"run-s oxlint tsc","tsc":"tsc -p jsconfig-lint.json","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","format":"biome format --write .","format:check":"biome format ."}}}},"etag":"W/\"b6ddfa00c8653f516448351c7543962d\"","lastModified":"Wed, 11 Jun 2025 12:21:05 GMT"}
