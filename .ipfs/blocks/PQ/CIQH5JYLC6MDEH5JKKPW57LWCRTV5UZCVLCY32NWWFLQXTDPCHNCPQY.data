LavaPack.loadBundle([[1920,{"../errors":1917,"./_stream_duplex":1918,"./internal/streams/async_iterator":1923,"./internal/streams/buffer_list":1924,"./internal/streams/destroy":1925,"./internal/streams/from":1927,"./internal/streams/state":1929,"./internal/streams/stream":1930,_process:4214,buffer:2913,events:3331,inherits:3835,"string_decoder/":4630,util:2864},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){(function(n){(function(){var s;t.exports=T,T.ReadableState=k;e("events").EventEmitter;var r=function(e,t){return e.listeners(t).length},i=e("./internal/streams/stream"),o=e("buffer").Buffer,a=("undefined"!=typeof global?global:"undefined"!=typeof window?window:"undefined"!=typeof self?self:{}).Uint8Array||function(){};var c,u=e("util");c=u&&u.debuglog?u.debuglog("stream"):function(){};var l,d,p,f=e("./internal/streams/buffer_list"),h=e("./internal/streams/destroy"),m=e("./internal/streams/state").getHighWaterMark,g=e("../errors").codes,y=g.ERR_INVALID_ARG_TYPE,b=g.ERR_STREAM_PUSH_AFTER_EOF,w=g.ERR_METHOD_NOT_IMPLEMENTED,_=g.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;e("inherits")(T,i);var v=h.errorOrDestroy,S=["error","close","destroy","pause","resume"];function k(t,n,r){s=s||e("./_stream_duplex"),t=t||{},"boolean"!=typeof r&&(r=n instanceof s),this.objectMode=!!t.objectMode,r&&(this.objectMode=this.objectMode||!!t.readableObjectMode),this.highWaterMark=m(this,t,"readableHighWaterMark",r),this.buffer=new f,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==t.emitClose,this.autoDestroy=!!t.autoDestroy,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(l||(l=e("string_decoder/").StringDecoder),this.decoder=new l(t.encoding),this.encoding=t.encoding)}function T(t){if(s=s||e("./_stream_duplex"),!(this instanceof T))return new T(t);var n=this instanceof s;this._readableState=new k(t,this,n),this.readable=!0,t&&("function"==typeof t.read&&(this._read=t.read),"function"==typeof t.destroy&&(this._destroy=t.destroy)),i.call(this)}function E(e,t,n,s,r){c("readableAddChunk",t);var i,u=e._readableState;if(null===t)u.reading=!1,function(e,t){if(c("onEofChunk"),t.ended)return;if(t.decoder){var n=t.decoder.end();n&&n.length&&(t.buffer.push(n),t.length+=t.objectMode?1:n.length)}t.ended=!0,t.sync?P(e):(t.needReadable=!1,t.emittedReadable||(t.emittedReadable=!0,R(e)))}(e,u);else if(r||(i=function(e,t){var n;s=t,o.isBuffer(s)||s instanceof a||"string"==typeof t||t===undefined||e.objectMode||(n=new y("chunk",["string","Buffer","Uint8Array"],t));var s;return n}(u,t)),i)v(e,i);else if(u.objectMode||t&&t.length>0)if("string"==typeof t||u.objectMode||Object.getPrototypeOf(t)===o.prototype||(t=function(e){return o.from(e)}(t)),s)u.endEmitted?v(e,new _):x(e,u,t,!0);else if(u.ended)v(e,new b);else{if(u.destroyed)return!1;u.reading=!1,u.decoder&&!n?(t=u.decoder.write(t),u.objectMode||0!==t.length?x(e,u,t,!1):A(e,u)):x(e,u,t,!1)}else s||(u.reading=!1,A(e,u));return!u.ended&&(u.length<u.highWaterMark||0===u.length)}function x(e,t,n,s){t.flowing&&0===t.length&&!t.sync?(t.awaitDrain=0,e.emit("data",n)):(t.length+=t.objectMode?1:n.length,s?t.buffer.unshift(n):t.buffer.push(n),t.needReadable&&P(e)),A(e,t)}Object.defineProperty(T.prototype,"destroyed",{enumerable:!1,get:function(){return this._readableState!==undefined&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),T.prototype.destroy=h.destroy,T.prototype._undestroy=h.undestroy,T.prototype._destroy=function(e,t){t(e)},T.prototype.push=function(e,t){var n,s=this._readableState;return s.objectMode?n=!0:"string"==typeof e&&((t=t||s.defaultEncoding)!==s.encoding&&(e=o.from(e,t),t=""),n=!0),E(this,e,t,!1,n)},T.prototype.unshift=function(e){return E(this,e,null,!0,!1)},T.prototype.isPaused=function(){return!1===this._readableState.flowing},T.prototype.setEncoding=function(t){l||(l=e("string_decoder/").StringDecoder);var n=new l(t);this._readableState.decoder=n,this._readableState.encoding=this._readableState.decoder.encoding;for(var s=this._readableState.buffer.head,r="";null!==s;)r+=n.write(s.data),s=s.next;return this._readableState.buffer.clear(),""!==r&&this._readableState.buffer.push(r),this._readableState.length=r.length,this};var j=1073741824;function I(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=j?e=j:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function P(e){var t=e._readableState;c("emitReadable",t.needReadable,t.emittedReadable),t.needReadable=!1,t.emittedReadable||(c("emitReadable",t.flowing),t.emittedReadable=!0,n.nextTick(R,e))}function R(e){var t=e._readableState;c("emitReadable_",t.destroyed,t.length,t.ended),t.destroyed||!t.length&&!t.ended||(e.emit("readable"),t.emittedReadable=!1),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,D(e)}function A(e,t){t.readingMore||(t.readingMore=!0,n.nextTick(N,e,t))}function N(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){var n=t.length;if(c("maybeReadMore read 0"),e.read(0),n===t.length)break}t.readingMore=!1}function O(e){var t=e._readableState;t.readableListening=e.listenerCount("readable")>0,t.resumeScheduled&&!t.paused?t.flowing=!0:e.listenerCount("data")>0&&e.resume()}function C(e){c("readable nexttick read 0"),e.read(0)}function B(e,t){c("resume",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit("resume"),D(e),t.flowing&&!t.reading&&e.read(0)}function D(e){var t=e._readableState;for(c("flow",t.flowing);t.flowing&&null!==e.read(););}function M(e,t){return 0===t.length?null:(t.objectMode?n=t.buffer.shift():!e||e>=t.length?(n=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):n=t.buffer.consume(e,t.decoder),n);var n}function $(e){var t=e._readableState;c("endReadable",t.endEmitted),t.endEmitted||(t.ended=!0,n.nextTick(U,t,e))}function U(e,t){if(c("endReadableNT",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,t.readable=!1,t.emit("end"),e.autoDestroy)){var n=t._writableState;(!n||n.autoDestroy&&n.finished)&&t.destroy()}}function L(e,t){for(var n=0,s=e.length;n<s;n++)if(e[n]===t)return n;return-1}T.prototype.read=function(e){c("read",e),e=parseInt(e,10);var t=this._readableState,n=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0!==t.highWaterMark?t.length>=t.highWaterMark:t.length>0)||t.ended))return c("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?$(this):P(this),null;if(0===(e=I(e,t))&&t.ended)return 0===t.length&&$(this),null;var s,r=t.needReadable;return c("need readable",r),(0===t.length||t.length-e<t.highWaterMark)&&c("length less than watermark",r=!0),t.ended||t.reading?c("reading or ended",r=!1):r&&(c("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=I(n,t))),null===(s=e>0?M(e,t):null)?(t.needReadable=t.length<=t.highWaterMark,e=0):(t.length-=e,t.awaitDrain=0),0===t.length&&(t.ended||(t.needReadable=!0),n!==e&&t.ended&&$(this)),null!==s&&this.emit("data",s),s},T.prototype._read=function(e){v(this,new w("_read()"))},T.prototype.pipe=function(e,t){var s=this,i=this._readableState;switch(i.pipesCount){case 0:i.pipes=e;break;case 1:i.pipes=[i.pipes,e];break;default:i.pipes.push(e)}i.pipesCount+=1,c("pipe count=%d opts=%j",i.pipesCount,t);var o=(!t||!1!==t.end)&&e!==n.stdout&&e!==n.stderr?u:g;function a(t,n){c("onunpipe"),t===s&&n&&!1===n.hasUnpiped&&(n.hasUnpiped=!0,c("cleanup"),e.removeListener("close",h),e.removeListener("finish",m),e.removeListener("drain",l),e.removeListener("error",f),e.removeListener("unpipe",a),s.removeListener("end",u),s.removeListener("end",g),s.removeListener("data",p),d=!0,!i.awaitDrain||e._writableState&&!e._writableState.needDrain||l())}function u(){c("onend"),e.end()}i.endEmitted?n.nextTick(o):s.once("end",o),e.on("unpipe",a);var l=function(e){return function(){var t=e._readableState;c("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&r(e,"data")&&(t.flowing=!0,D(e))}}(s);e.on("drain",l);var d=!1;function p(t){c("ondata");var n=e.write(t);c("dest.write",n),!1===n&&((1===i.pipesCount&&i.pipes===e||i.pipesCount>1&&-1!==L(i.pipes,e))&&!d&&(c("false write response, pause",i.awaitDrain),i.awaitDrain++),s.pause())}function f(t){c("onerror",t),g(),e.removeListener("error",f),0===r(e,"error")&&v(e,t)}function h(){e.removeListener("finish",m),g()}function m(){c("onfinish"),e.removeListener("close",h),g()}function g(){c("unpipe"),s.unpipe(e)}return s.on("data",p),function(e,t,n){if("function"==typeof e.prependListener)return e.prependListener(t,n);e._events&&e._events[t]?Array.isArray(e._events[t])?e._events[t].unshift(n):e._events[t]=[n,e._events[t]]:e.on(t,n)}(e,"error",f),e.once("close",h),e.once("finish",m),e.emit("pipe",s),i.flowing||(c("pipe resume"),s.resume()),e},T.prototype.unpipe=function(e){var t=this._readableState,n={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes||(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this,n)),this;if(!e){var s=t.pipes,r=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var i=0;i<r;i++)s[i].emit("unpipe",this,{hasUnpiped:!1});return this}var o=L(t.pipes,e);return-1===o||(t.pipes.splice(o,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this,n)),this},T.prototype.on=function(e,t){var s=i.prototype.on.call(this,e,t),r=this._readableState;return"data"===e?(r.readableListening=this.listenerCount("readable")>0,!1!==r.flowing&&this.resume()):"readable"===e&&(r.endEmitted||r.readableListening||(r.readableListening=r.needReadable=!0,r.flowing=!1,r.emittedReadable=!1,c("on readable",r.length,r.reading),r.length?P(this):r.reading||n.nextTick(C,this))),s},T.prototype.addListener=T.prototype.on,T.prototype.removeListener=function(e,t){var s=i.prototype.removeListener.call(this,e,t);return"readable"===e&&n.nextTick(O,this),s},T.prototype.removeAllListeners=function(e){var t=i.prototype.removeAllListeners.apply(this,arguments);return"readable"!==e&&e!==undefined||n.nextTick(O,this),t},T.prototype.resume=function(){var e=this._readableState;return e.flowing||(c("resume"),e.flowing=!e.readableListening,function(e,t){t.resumeScheduled||(t.resumeScheduled=!0,n.nextTick(B,e,t))}(this,e)),e.paused=!1,this},T.prototype.pause=function(){return c("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(c("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this},T.prototype.wrap=function(e){var t=this,n=this._readableState,s=!1;for(var r in e.on("end",(function(){if(c("wrapped end"),n.decoder&&!n.ended){var e=n.decoder.end();e&&e.length&&t.push(e)}t.push(null)})),e.on("data",(function(r){(c("wrapped data"),n.decoder&&(r=n.decoder.write(r)),!n.objectMode||null!==r&&r!==undefined)&&((n.objectMode||r&&r.length)&&(t.push(r)||(s=!0,e.pause())))})),e)this[r]===undefined&&"function"==typeof e[r]&&(this[r]=function(t){return function(){return e[t].apply(e,arguments)}}(r));for(var i=0;i<S.length;i++)e.on(S[i],this.emit.bind(this,S[i]));return this._read=function(t){c("wrapped _read",t),s&&(s=!1,e.resume())},this},"function"==typeof Symbol&&(T.prototype[Symbol.asyncIterator]=function(){return d===undefined&&(d=e("./internal/streams/async_iterator")),d(this)}),Object.defineProperty(T.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(T.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(T.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),T._fromList=M,Object.defineProperty(T.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}}),"function"==typeof Symbol&&(T.from=function(t,n){return p===undefined&&(p=e("./internal/streams/from")),p(T,t,n)})}).call(this)}).call(this,e("_process"))}}},{package:"@metamask/snaps-controllers>concat-stream>readable-stream",file:"node_modules/@metamask/snaps-controllers/node_modules/readable-stream/lib/_stream_readable.js"}],[1921,{"../errors":1917,"./_stream_duplex":1918,inherits:3835},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){t.exports=l;var s=e("../errors").codes,r=s.ERR_METHOD_NOT_IMPLEMENTED,i=s.ERR_MULTIPLE_CALLBACK,o=s.ERR_TRANSFORM_ALREADY_TRANSFORMING,a=s.ERR_TRANSFORM_WITH_LENGTH_0,c=e("./_stream_duplex");function u(e,t){var n=this._transformState;n.transforming=!1;var s=n.writecb;if(null===s)return this.emit("error",new i);n.writechunk=null,n.writecb=null,null!=t&&this.push(t),s(e);var r=this._readableState;r.reading=!1,(r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}function l(e){if(!(this instanceof l))return new l(e);c.call(this,e),this._transformState={afterTransform:u.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",d)}function d(){var e=this;"function"!=typeof this._flush||this._readableState.destroyed?p(this,null,null):this._flush((function(t,n){p(e,t,n)}))}function p(e,t,n){if(t)return e.emit("error",t);if(null!=n&&e.push(n),e._writableState.length)throw new a;if(e._transformState.transforming)throw new o;return e.push(null)}e("inherits")(l,c),l.prototype.push=function(e,t){return this._transformState.needTransform=!1,c.prototype.push.call(this,e,t)},l.prototype._transform=function(e,t,n){n(new r("_transform()"))},l.prototype._write=function(e,t,n){var s=this._transformState;if(s.writecb=n,s.writechunk=e,s.writeencoding=t,!s.transforming){var r=this._readableState;(s.needTransform||r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}},l.prototype._read=function(e){var t=this._transformState;null===t.writechunk||t.transforming?t.needTransform=!0:(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform))},l.prototype._destroy=function(e,t){c.prototype._destroy.call(this,e,(function(e){t(e)}))}}}},{package:"@metamask/snaps-controllers>concat-stream>readable-stream",file:"node_modules/@metamask/snaps-controllers/node_modules/readable-stream/lib/_stream_transform.js"}],[1922,{"../errors":1917,"./_stream_duplex":1918,"./internal/streams/destroy":1925,"./internal/streams/state":1929,"./internal/streams/stream":1930,_process:4214,buffer:2913,inherits:3835,"util-deprecate":4691},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){(function(n){(function(){function s(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,n){var s=e.entry;e.entry=null;for(;s;){var r=s.callback;t.pendingcb--,r(n),s=s.next}t.corkedRequestsFree.next=e}(t,e)}}var r;t.exports=T,T.WritableState=k;var i={deprecate:e("util-deprecate")},o=e("./internal/streams/stream"),a=e("buffer").Buffer,c=("undefined"!=typeof global?global:"undefined"!=typeof window?window:"undefined"!=typeof self?self:{}).Uint8Array||function(){};var u,l=e("./internal/streams/destroy"),d=e("./internal/streams/state").getHighWaterMark,p=e("../errors").codes,f=p.ERR_INVALID_ARG_TYPE,h=p.ERR_METHOD_NOT_IMPLEMENTED,m=p.ERR_MULTIPLE_CALLBACK,g=p.ERR_STREAM_CANNOT_PIPE,y=p.ERR_STREAM_DESTROYED,b=p.ERR_STREAM_NULL_VALUES,w=p.ERR_STREAM_WRITE_AFTER_END,_=p.ERR_UNKNOWN_ENCODING,v=l.errorOrDestroy;function S(){}function k(t,i,o){r=r||e("./_stream_duplex"),t=t||{},"boolean"!=typeof o&&(o=i instanceof r),this.objectMode=!!t.objectMode,o&&(this.objectMode=this.objectMode||!!t.writableObjectMode),this.highWaterMark=d(this,t,"writableHighWaterMark",o),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var a=!1===t.decodeStrings;this.decodeStrings=!a,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,t){var s=e._writableState,r=s.sync,i=s.writecb;if("function"!=typeof i)throw new m;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(s),t)!function(e,t,s,r,i){--t.pendingcb,s?(n.nextTick(i,r),n.nextTick(R,e,t),e._writableState.errorEmitted=!0,v(e,r)):(i(r),e._writableState.errorEmitted=!0,v(e,r),R(e,t))}(e,s,r,t,i);else{var o=I(s)||e.destroyed;o||s.corked||s.bufferProcessing||!s.bufferedRequest||j(e,s),r?n.nextTick(x,e,s,o,i):x(e,s,o,i)}}(i,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==t.emitClose,this.autoDestroy=!!t.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new s(this)}function T(t){var n=this instanceof(r=r||e("./_stream_duplex"));if(!n&&!u.call(T,this))return new T(t);this._writableState=new k(t,this,n),this.writable=!0,t&&("function"==typeof t.write&&(this._write=t.write),"function"==typeof t.writev&&(this._writev=t.writev),"function"==typeof t.destroy&&(this._destroy=t.destroy),"function"==typeof t.final&&(this._final=t.final)),o.call(this)}function E(e,t,n,s,r,i,o){t.writelen=s,t.writecb=o,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new y("write")):n?e._writev(r,t.onwrite):e._write(r,i,t.onwrite),t.sync=!1}function x(e,t,n,s){n||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}(e,t),t.pendingcb--,s(),R(e,t)}function j(e,t){t.bufferProcessing=!0;var n=t.bufferedRequest;if(e._writev&&n&&n.next){var r=t.bufferedRequestCount,i=new Array(r),o=t.corkedRequestsFree;o.entry=n;for(var a=0,c=!0;n;)i[a]=n,n.isBuf||(c=!1),n=n.next,a+=1;i.allBuffers=c,E(e,t,!0,t.length,i,"",o.finish),t.pendingcb++,t.lastBufferedRequest=null,o.next?(t.corkedRequestsFree=o.next,o.next=null):t.corkedRequestsFree=new s(t),t.bufferedRequestCount=0}else{for(;n;){var u=n.chunk,l=n.encoding,d=n.callback;if(E(e,t,!1,t.objectMode?1:u.length,u,l,d),n=n.next,t.bufferedRequestCount--,t.writing)break}null===n&&(t.lastBufferedRequest=null)}t.bufferedRequest=n,t.bufferProcessing=!1}function I(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function P(e,t){e._final((function(n){t.pendingcb--,n&&v(e,n),t.prefinished=!0,e.emit("prefinish"),R(e,t)}))}function R(e,t){var s=I(t);if(s&&(function(e,t){t.prefinished||t.finalCalled||("function"!=typeof e._final||t.destroyed?(t.prefinished=!0,e.emit("prefinish")):(t.pendingcb++,t.finalCalled=!0,n.nextTick(P,e,t)))}(e,t),0===t.pendingcb&&(t.finished=!0,e.emit("finish"),t.autoDestroy))){var r=e._readableState;(!r||r.autoDestroy&&r.endEmitted)&&e.destroy()}return s}e("inherits")(T,o),k.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(k.prototype,"buffer",{get:i.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer "+"instead.","DEP0003")})}catch(e){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(u=Function.prototype[Symbol.hasInstance],Object.defineProperty(T,Symbol.hasInstance,{value:function(e){return!!u.call(this,e)||this===T&&(e&&e._writableState instanceof k)}})):u=function(e){return e instanceof this},T.prototype.pipe=function(){v(this,new g)},T.prototype.write=function(e,t,s){var r,i=this._writableState,o=!1,u=!i.objectMode&&(r=e,a.isBuffer(r)||r instanceof c);return u&&!a.isBuffer(e)&&(e=function(e){return a.from(e)}(e)),"function"==typeof t&&(s=t,t=null),u?t="buffer":t||(t=i.defaultEncoding),"function"!=typeof s&&(s=S),i.ending?function(e,t){var s=new w;v(e,s),n.nextTick(t,s)}(this,s):(u||function(e,t,s,r){var i;return null===s?i=new b:"string"==typeof s||t.objectMode||(i=new f("chunk",["string","Buffer"],s)),!i||(v(e,i),n.nextTick(r,i),!1)}(this,i,e,s))&&(i.pendingcb++,o=function(e,t,n,s,r,i){if(!n){var o=function(e,t,n){e.objectMode||!1===e.decodeStrings||"string"!=typeof t||(t=a.from(t,n));return t}(t,s,r);s!==o&&(n=!0,r="buffer",s=o)}var c=t.objectMode?1:s.length;t.length+=c;var u=t.length<t.highWaterMark;u||(t.needDrain=!0);if(t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:s,encoding:r,isBuf:n,callback:i,next:null},l?l.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else E(e,t,!1,c,s,r,i);return u}(this,i,u,e,t,s)),o},T.prototype.cork=function(){this._writableState.corked++},T.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||j(this,e))},T.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new _(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(T.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(T.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),T.prototype._write=function(e,t,n){n(new h("_write()"))},T.prototype._writev=null,T.prototype.end=function(e,t,s){var r=this._writableState;return"function"==typeof e?(s=e,e=null,t=null):"function"==typeof t&&(s=t,t=null),null!==e&&e!==undefined&&this.write(e,t),r.corked&&(r.corked=1,this.uncork()),r.ending||function(e,t,s){t.ending=!0,R(e,t),s&&(t.finished?n.nextTick(s):e.once("finish",s));t.ended=!0,e.writable=!1}(this,r,s),this},Object.defineProperty(T.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(T.prototype,"destroyed",{enumerable:!1,get:function(){return this._writableState!==undefined&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),T.prototype.destroy=l.destroy,T.prototype._undestroy=l.undestroy,T.prototype._destroy=function(e,t){t(e)}}).call(this)}).call(this,e("_process"))}}},{package:"@metamask/snaps-controllers>concat-stream>readable-stream",file:"node_modules/@metamask/snaps-controllers/node_modules/readable-stream/lib/_stream_writable.js"}],[1923,{"./end-of-stream":1926,_process:4214},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){(function(n){(function(){var s;function r(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(n!==undefined){var s=n.call(e,t||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var i=e("./end-of-stream"),o=Symbol("lastResolve"),a=Symbol("lastReject"),c=Symbol("error"),u=Symbol("ended"),l=Symbol("lastPromise"),d=Symbol("handlePromise"),p=Symbol("stream");function f(e,t){return{value:e,done:t}}function h(e){var t=e[o];if(null!==t){var n=e[p].read();null!==n&&(e[l]=null,e[o]=null,e[a]=null,t(f(n,!1)))}}function m(e){n.nextTick(h,e)}var g=Object.getPrototypeOf((function(){})),y=Object.setPrototypeOf((r(s={get stream(){return this[p]},next:function(){var e=this,t=this[c];if(null!==t)return Promise.reject(t);if(this[u])return Promise.resolve(f(undefined,!0));if(this[p].destroyed)return new Promise((function(t,s){n.nextTick((function(){e[c]?s(e[c]):t(f(undefined,!0))}))}));var s,r=this[l];if(r)s=new Promise(function(e,t){return function(n,s){e.then((function(){t[u]?n(f(undefined,!0)):t[d](n,s)}),s)}}(r,this));else{var i=this[p].read();if(null!==i)return Promise.resolve(f(i,!1));s=new Promise(this[d])}return this[l]=s,s}},Symbol.asyncIterator,(function(){return this})),r(s,"return",(function(){var e=this;return new Promise((function(t,n){e[p].destroy(null,(function(e){e?n(e):t(f(undefined,!0))}))}))})),s),g);t.exports=function(e){var t,n=Object.create(y,(r(t={},p,{value:e,writable:!0}),r(t,o,{value:null,writable:!0}),r(t,a,{value:null,writable:!0}),r(t,c,{value:null,writable:!0}),r(t,u,{value:e._readableState.endEmitted,writable:!0}),r(t,d,{value:function(e,t){var s=n[p].read();s?(n[l]=null,n[o]=null,n[a]=null,e(f(s,!1))):(n[o]=e,n[a]=t)},writable:!0}),t));return n[l]=null,i(e,(function(e){if(e&&"ERR_STREAM_PREMATURE_CLOSE"!==e.code){var t=n[a];return null!==t&&(n[l]=null,n[o]=null,n[a]=null,t(e)),void(n[c]=e)}var s=n[o];null!==s&&(n[l]=null,n[o]=null,n[a]=null,s(f(undefined,!0))),n[u]=!0})),e.on("readable",m.bind(null,n)),n}}).call(this)}).call(this,e("_process"))}}},{package:"@metamask/snaps-controllers>concat-stream>readable-stream",file:"node_modules/@metamask/snaps-controllers/node_modules/readable-stream/lib/internal/streams/async_iterator.js"}],[1924,{buffer:2913,util:2864},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t,n){return(t=a(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,a(s.key),s)}}function a(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(n!==undefined){var s=n.call(e,t||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}var c=e("buffer").Buffer,u=e("util").inspect,l=u&&u.custom||"inspect";t.exports=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}var t,n,s;return t=e,(n=[{key:"push",value:function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length}},{key:"unshift",value:function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length}},{key:"shift",value:function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}}},{key:"clear",value:function(){this.head=this.tail=null,this.length=0}},{key:"join",value:function(e){if(0===this.length)return"";for(var t=this.head,n=""+t.data;t=t.next;)n+=e+t.data;return n}},{key:"concat",value:function(e){if(0===this.length)return c.alloc(0);for(var t,n,s,r=c.allocUnsafe(e>>>0),i=this.head,o=0;i;)t=i.data,n=r,s=o,c.prototype.copy.call(t,n,s),o+=i.data.length,i=i.next;return r}},{key:"consume",value:function(e,t){var n;return e<this.head.data.length?(n=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):n=e===this.head.data.length?this.shift():t?this._getString(e):this._getBuffer(e),n}},{key:"first",value:function(){return this.head.data}},{key:"_getString",value:function(e){var t=this.head,n=1,s=t.data;for(e-=s.length;t=t.next;){var r=t.data,i=e>r.length?r.length:e;if(i===r.length?s+=r:s+=r.slice(0,e),0==(e-=i)){i===r.length?(++n,t.next?this.head=t.next:this.head=this.tail=null):(this.head=t,t.data=r.slice(i));break}++n}return this.length-=n,s}},{key:"_getBuffer",value:function(e){var t=c.allocUnsafe(e),n=this.head,s=1;for(n.data.copy(t),e-=n.data.length;n=n.next;){var r=n.data,i=e>r.length?r.length:e;if(r.copy(t,t.length-e,0,i),0==(e-=i)){i===r.length?(++s,n.next?this.head=n.next:this.head=this.tail=null):(this.head=n,n.data=r.slice(i));break}++s}return this.length-=s,t}},{key:l,value:function(e,t){return u(this,r(r({},t),{},{depth:0,customInspect:!1}))}}])&&o(t.prototype,n),s&&o(t,s),Object.defineProperty(t,"prototype",{writable:!1}),e}()}}},{package:"@metamask/snaps-controllers>concat-stream>readable-stream",file:"node_modules/@metamask/snaps-controllers/node_modules/readable-stream/lib/internal/streams/buffer_list.js"}],[1925,{_process:4214},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){(function(e){(function(){function n(e,t){r(e,t),s(e)}function s(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit("close")}function r(e,t){e.emit("error",t)}t.exports={destroy:function(t,i){var o=this,a=this._readableState&&this._readableState.destroyed,c=this._writableState&&this._writableState.destroyed;return a||c?(i?i(t):t&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,e.nextTick(r,this,t)):e.nextTick(r,this,t)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(t||null,(function(t){!i&&t?o._writableState?o._writableState.errorEmitted?e.nextTick(s,o):(o._writableState.errorEmitted=!0,e.nextTick(n,o,t)):e.nextTick(n,o,t):i?(e.nextTick(s,o),i(t)):e.nextTick(s,o)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,t){var n=e._readableState,s=e._writableState;n&&n.autoDestroy||s&&s.autoDestroy?e.destroy(t):e.emit("error",t)}}}).call(this)}).call(this,e("_process"))}}},{package:"@metamask/snaps-controllers>concat-stream>readable-stream",file:"node_modules/@metamask/snaps-controllers/node_modules/readable-stream/lib/internal/streams/destroy.js"}],[1926,{"../../../errors":1917},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){var s=e("../../../errors").codes.ERR_STREAM_PREMATURE_CLOSE;function r(){}t.exports=function e(t,n,i){if("function"==typeof n)return e(t,null,n);n||(n={}),i=function(e){var t=!1;return function(){if(!t){t=!0;for(var n=arguments.length,s=new Array(n),r=0;r<n;r++)s[r]=arguments[r];e.apply(this,s)}}}(i||r);var o=n.readable||!1!==n.readable&&t.readable,a=n.writable||!1!==n.writable&&t.writable,c=function(){t.writable||l()},u=t._writableState&&t._writableState.finished,l=function(){a=!1,u=!0,o||i.call(t)},d=t._readableState&&t._readableState.endEmitted,p=function(){o=!1,d=!0,a||i.call(t)},f=function(e){i.call(t,e)},h=function(){var e;return o&&!d?(t._readableState&&t._readableState.ended||(e=new s),i.call(t,e)):a&&!u?(t._writableState&&t._writableState.ended||(e=new s),i.call(t,e)):void 0},m=function(){t.req.on("finish",l)};return!function(e){return e.setHeader&&"function"==typeof e.abort}(t)?a&&!t._writableState&&(t.on("end",c),t.on("close",c)):(t.on("complete",l),t.on("abort",h),t.req?m():t.on("request",m)),t.on("end",p),t.on("finish",l),!1!==n.error&&t.on("error",f),t.on("close",h),function(){t.removeListener("complete",l),t.removeListener("abort",h),t.removeListener("request",m),t.req&&t.req.removeListener("finish",l),t.removeListener("end",c),t.removeListener("close",c),t.removeListener("finish",l),t.removeListener("end",p),t.removeListener("error",f),t.removeListener("close",h)}}}}},{package:"@metamask/snaps-controllers>concat-stream>readable-stream",file:"node_modules/@metamask/snaps-controllers/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"}],[1927,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){t.exports=function(){throw new Error("Readable.from is not available in the browser")}}}},{package:"@metamask/snaps-controllers>concat-stream>readable-stream",file:"node_modules/@metamask/snaps-controllers/node_modules/readable-stream/lib/internal/streams/from-browser.js"}],[1928,{"../../../errors":1917,"./end-of-stream":1926},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){var s;var r=e("../../../errors").codes,i=r.ERR_MISSING_ARGS,o=r.ERR_STREAM_DESTROYED;function a(e){if(e)throw e}function c(e){e()}function u(e,t){return e.pipe(t)}t.exports=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];var l,d=function(e){return e.length?"function"!=typeof e[e.length-1]?a:e.pop():a}(n);if(Array.isArray(n[0])&&(n=n[0]),n.length<2)throw new i("streams");var p=n.map((function(t,r){var i=r<n.length-1;return function(t,n,r,i){i=function(e){var t=!1;return function(){t||(t=!0,e.apply(void 0,arguments))}}(i);var a=!1;t.on("close",(function(){a=!0})),s===undefined&&(s=e("./end-of-stream")),s(t,{readable:n,writable:r},(function(e){if(e)return i(e);a=!0,i()}));var c=!1;return function(e){if(!a&&!c)return c=!0,function(e){return e.setHeader&&"function"==typeof e.abort}(t)?t.abort():"function"==typeof t.destroy?t.destroy():void i(e||new o("pipe"))}}(t,i,r>0,(function(e){l||(l=e),e&&p.forEach(c),i||(p.forEach(c),d(l))}))}));return n.reduce(u)}}}},{package:"@metamask/snaps-controllers>concat-stream>readable-stream",file:"node_modules/@metamask/snaps-controllers/node_modules/readable-stream/lib/internal/streams/pipeline.js"}],[1929,{"../../../errors":1917},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){var s=e("../../../errors").codes.ERR_INVALID_OPT_VALUE;t.exports={getHighWaterMark:function(e,t,n,r){var i=function(e,t,n){return null!=e.highWaterMark?e.highWaterMark:t?e[n]:null}(t,r,n);if(null!=i){if(!isFinite(i)||Math.floor(i)!==i||i<0)throw new s(r?n:"highWaterMark",i);return Math.floor(i)}return e.objectMode?16:16384}}}}},{package:"@metamask/snaps-controllers>concat-stream>readable-stream",file:"node_modules/@metamask/snaps-controllers/node_modules/readable-stream/lib/internal/streams/state.js"}],[1930,{events:3331},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){t.exports=e("events").EventEmitter}}},{package:"@metamask/snaps-controllers>concat-stream>readable-stream",file:"node_modules/@metamask/snaps-controllers/node_modules/readable-stream/lib/internal/streams/stream-browser.js"}],[1931,{"./lib/_stream_duplex.js":1918,"./lib/_stream_passthrough.js":1919,"./lib/_stream_readable.js":1920,"./lib/_stream_transform.js":1921,"./lib/_stream_writable.js":1922,"./lib/internal/streams/end-of-stream.js":1926,"./lib/internal/streams/pipeline.js":1928},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){(n=t.exports=e("./lib/_stream_readable.js")).Stream=n,n.Readable=n,n.Writable=e("./lib/_stream_writable.js"),n.Duplex=e("./lib/_stream_duplex.js"),n.Transform=e("./lib/_stream_transform.js"),n.PassThrough=e("./lib/_stream_passthrough.js"),n.finished=e("./lib/internal/streams/end-of-stream.js"),n.pipeline=e("./lib/internal/streams/pipeline.js")}}},{package:"@metamask/snaps-controllers>concat-stream>readable-stream",file:"node_modules/@metamask/snaps-controllers/node_modules/readable-stream/readable-browser.js"}],[1932,{"./verify":1933,"@metamask/utils":1943,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){s===undefined&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){s===undefined&&(s=n),e[s]=t[n]}),r=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||s(t,e,n)};Object.defineProperty(n,"__esModule",{value:!0}),n.SnapsRegistryDatabaseStruct=n.BlockedSnapStruct=n.BlockReasonStruct=n.VerifiedSnapStruct=n.SupportStruct=n.AuditStruct=n.AuthorStruct=void 0;const i=e("@metamask/utils"),o=e("superstruct"),a=(0,o.refine)((0,o.string)(),"Npm ID",(e=>e.startsWith("npm:"))),c=(0,o.object)({checksum:i.ChecksumStruct});n.AuthorStruct=(0,o.object)({name:(0,o.string)(),website:(0,o.string)()}),n.AuditStruct=(0,o.object)({auditor:(0,o.string)(),report:(0,o.string)()}),n.SupportStruct=(0,o.object)({knowledgeBase:(0,o.optional)((0,o.string)()),faq:(0,o.optional)((0,o.string)()),contact:(0,o.optional)((0,o.string)())}),n.VerifiedSnapStruct=(0,o.object)({id:a,metadata:(0,o.object)({name:(0,o.string)(),type:(0,o.optional)((0,o.enums)(["account"])),author:(0,o.optional)(n.AuthorStruct),website:(0,o.optional)((0,o.string)()),onboard:(0,o.optional)((0,o.boolean)()),summary:(0,o.optional)((0,o.string)()),description:(0,o.optional)((0,o.string)()),audits:(0,o.optional)((0,o.array)(n.AuditStruct)),category:(0,o.optional)((0,o.enums)(["interoperability","notifications","transaction insights"])),tags:(0,o.optional)((0,o.array)((0,o.string)())),support:(0,o.optional)(n.SupportStruct),sourceCode:(0,o.optional)((0,o.string)()),hidden:(0,o.optional)((0,o.boolean)())}),versions:(0,o.record)(i.VersionStruct,c)}),n.BlockReasonStruct=(0,o.object)({explanation:(0,o.optional)((0,o.string)()),url:(0,o.optional)((0,o.string)())}),n.BlockedSnapStruct=(0,o.union)([(0,o.object)({id:a,versionRange:i.VersionRangeStruct,reason:(0,o.optional)(n.BlockReasonStruct)}),(0,o.object)({checksum:i.ChecksumStruct,reason:(0,o.optional)(n.BlockReasonStruct)})]),n.SnapsRegistryDatabaseStruct=(0,o.object)({verifiedSnaps:(0,o.record)(a,n.VerifiedSnapStruct),blockedSnaps:(0,o.array)(n.BlockedSnapStruct)}),r(e("./verify"),n)}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry",file:"node_modules/@metamask/snaps-registry/dist/index.js"}],[1933,{"@metamask/utils":1943,"@noble/secp256k1":2129,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),n.verify=n.SignatureStruct=void 0;const s=e("@metamask/utils"),r=e("@noble/secp256k1"),i=e("superstruct");n.SignatureStruct=(0,i.object)({signature:(0,i.pattern)((0,i.string)(),/0x[0-9a-f]{140}/u),curve:(0,i.literal)("secp256k1"),format:(0,i.literal)("DER")}),n.verify=async function({registry:e,signature:t,publicKey:i}){(0,s.assertStruct)(t,n.SignatureStruct,"Invalid signature object");const o=(0,s.hexToBytes)(i);return(0,r.verify)(r.Signature.fromHex((0,s.remove0x)(t.signature)),await r.utils.sha256((0,s.stringToBytes)(e)),o)}}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry",file:"node_modules/@metamask/snaps-registry/dist/verify.js"}],[1934,{superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{AssertionError:function(){return i},assert:function(){return o},assertStruct:function(){return a},assertExhaustive:function(){return c}});const s=e("superstruct");function r(e,t){return n=e,Boolean("string"==typeof n?.prototype?.constructor?.name)?new e({message:t}):e({message:t});var n}class i extends Error{constructor(e){var t,n,s;super(e.message),s="ERR_ASSERTION",(n="code")in(t=this)?Object.defineProperty(t,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[n]=s}}function o(e,t="Assertion failed.",n=i){if(!e){if(t instanceof Error)throw t;throw r(n,t)}}function a(e,t,n="Assertion failed",o=i){try{(0,s.assert)(e,t)}catch(e){throw r(o,`${n}: ${function(e){const t=function(e){return"object"==typeof e&&null!==e&&"message"in e}(e)?e.message:String(e);return t.endsWith(".")?t.slice(0,-1):t}(e)}.`)}}function c(e){throw new Error("Invalid branch reached. Should be detected during compilation.")}}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/assert.js"}],[1935,{"./assert":1934,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"base64",{enumerable:!0,get:function(){return i}});const s=e("superstruct"),r=e("./assert"),i=(e,t={})=>{const n=t.paddingRequired??!1,i=t.characterSet??"base64";let o,a;return"base64"===i?o=String.raw`[A-Za-z0-9+\/]`:((0,r.assert)("base64url"===i),o=String.raw`[-_A-Za-z0-9]`),a=n?new RegExp(`^(?:${o}{4})*(?:${o}{3}=|${o}{2}==)?$`,"u"):new RegExp(`^(?:${o}{4})*(?:${o}{2,3}|${o}{3}=|${o}{2}==)?$`,"u"),(0,s.pattern)(e,a)}}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/base64.js"}],[1936,{"./assert":1934,"./hex":1942,buffer:2913},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){(function(t){(function(){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{isBytes:function(){return u},assertIsBytes:function(){return l},bytesToHex:function(){return d},bytesToBigInt:function(){return p},bytesToSignedBigInt:function(){return f},bytesToNumber:function(){return h},bytesToString:function(){return m},hexToBytes:function(){return g},bigIntToBytes:function(){return y},signedBigIntToBytes:function(){return b},numberToBytes:function(){return w},stringToBytes:function(){return _},valueToBytes:function(){return v},concatBytes:function(){return S},createDataView:function(){return k}});const s=e("./assert"),r=e("./hex"),i=48,o=58,a=87;const c=function(){const e=[];return()=>{if(0===e.length)for(let t=0;t<256;t++)e.push(t.toString(16).padStart(2,"0"));return e}}();function u(e){return e instanceof Uint8Array}function l(e){(0,s.assert)(u(e),"Value must be a Uint8Array.")}function d(e){if(l(e),0===e.length)return"0x";const t=c(),n=new Array(e.length);for(let s=0;s<e.length;s++)n[s]=t[e[s]];return(0,r.add0x)(n.join(""))}function p(e){l(e);const t=d(e);return BigInt(t)}function f(e){l(e);let t=BigInt(0);for(const n of e)t=(t<<BigInt(8))+BigInt(n);return BigInt.asIntN(8*e.length,t)}function h(e){l(e);const t=p(e);return(0,s.assert)(t<=BigInt(Number.MAX_SAFE_INTEGER),"Number is not a safe integer. Use `bytesToBigInt` instead."),Number(t)}function m(e){return l(e),(new TextDecoder).decode(e)}function g(e){if("0x"===e?.toLowerCase?.())return new Uint8Array;(0,r.assertIsHexString)(e);const t=(0,r.remove0x)(e).toLowerCase(),n=t.length%2==0?t:`0${t}`,s=new Uint8Array(n.length/2);for(let e=0;e<s.length;e++){const t=n.charCodeAt(2*e),r=n.charCodeAt(2*e+1),c=t-(t<o?i:a),u=r-(r<o?i:a);s[e]=16*c+u}return s}function y(e){(0,s.assert)("bigint"==typeof e,"Value must be a bigint."),(0,s.assert)(e>=BigInt(0),"Value must be a non-negative bigint.");return g(e.toString(16))}function b(e,t){(0,s.assert)("bigint"==typeof e,"Value must be a bigint."),(0,s.assert)("number"==typeof t,"Byte length must be a number."),(0,s.assert)(t>0,"Byte length must be greater than 0."),(0,s.assert)(function(e,t){(0,s.assert)(t>0);const n=e>>BigInt(31);return!((~e&n)+(e&~n)>>BigInt(8*t-1))}(e,t),"Byte length is too small to represent the given value.");let n=e;const r=new Uint8Array(t);for(let e=0;e<r.length;e++)r[e]=Number(BigInt.asUintN(8,n)),n>>=BigInt(8);return r.reverse()}function w(e){(0,s.assert)("number"==typeof e,"Value must be a number."),(0,s.assert)(e>=0,"Value must be a non-negative number."),(0,s.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToBytes` instead.");return g(e.toString(16))}function _(e){return(0,s.assert)("string"==typeof e,"Value must be a string."),(new TextEncoder).encode(e)}function v(e){if("bigint"==typeof e)return y(e);if("number"==typeof e)return w(e);if("string"==typeof e)return e.startsWith("0x")?g(e):_(e);if(u(e))return e;throw new TypeError(`Unsupported value type: "${typeof e}".`)}function S(e){const t=new Array(e.length);let n=0;for(let s=0;s<e.length;s++){const r=v(e[s]);t[s]=r,n+=r.length}const s=new Uint8Array(n);for(let e=0,n=0;e<t.length;e++)s.set(t[e],n),n+=t[e].length;return s}function k(e){if(void 0!==t&&e instanceof t){const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return new DataView(t)}return new DataView(e.buffer,e.byteOffset,e.byteLength)}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/bytes.js"}],[1937,{superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{CAIP_CHAIN_ID_REGEX:function(){return r},CAIP_NAMESPACE_REGEX:function(){return i},CAIP_REFERENCE_REGEX:function(){return o},CAIP_ACCOUNT_ID_REGEX:function(){return a},CAIP_ACCOUNT_ADDRESS_REGEX:function(){return c},CaipChainIdStruct:function(){return u},CaipNamespaceStruct:function(){return l},CaipReferenceStruct:function(){return d},CaipAccountIdStruct:function(){return p},CaipAccountAddressStruct:function(){return f},isCaipChainId:function(){return h},isCaipNamespace:function(){return m},isCaipReference:function(){return g},isCaipAccountId:function(){return y},isCaipAccountAddress:function(){return b},parseCaipChainId:function(){return w},parseCaipAccountId:function(){return _}});const s=e("superstruct"),r=RegExp("^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$","u"),i=/^[-a-z0-9]{3,8}$/u,o=/^[-_a-zA-Z0-9]{1,32}$/u,a=RegExp("^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$","u"),c=/^[-.%a-zA-Z0-9]{1,128}$/u,u=(0,s.pattern)((0,s.string)(),r),l=(0,s.pattern)((0,s.string)(),i),d=(0,s.pattern)((0,s.string)(),o),p=(0,s.pattern)((0,s.string)(),a),f=(0,s.pattern)((0,s.string)(),c);function h(e){return(0,s.is)(e,u)}function m(e){return(0,s.is)(e,l)}function g(e){return(0,s.is)(e,d)}function y(e){return(0,s.is)(e,p)}function b(e){return(0,s.is)(e,f)}function w(e){const t=r.exec(e);if(!t?.groups)throw new Error("Invalid CAIP chain ID.");return{namespace:t.groups.namespace,reference:t.groups.reference}}function _(e){const t=a.exec(e);if(!t?.groups)throw new Error("Invalid CAIP account ID.");return{address:t.groups.accountAddress,chainId:t.groups.chainId,chain:{namespace:t.groups.namespace,reference:t.groups.reference}}}}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/caip-types.js"}],[1938,{"./base64":1935,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"ChecksumStruct",{enumerable:!0,get:function(){return i}});const s=e("superstruct"),r=e("./base64"),i=(0,s.size)((0,r.base64)((0,s.string)(),{paddingRequired:!0}),44,44)}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/checksum.js"}],[1939,{"./assert":1934,"./bytes":1936,"./hex":1942,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{createNumber:function(){return p},createBigInt:function(){return f},createBytes:function(){return h},createHex:function(){return m}});const s=e("superstruct"),r=e("./assert"),i=e("./bytes"),o=e("./hex"),a=(0,s.union)([(0,s.number)(),(0,s.bigint)(),(0,s.string)(),o.StrictHexStruct]),c=(0,s.coerce)((0,s.number)(),a,Number),u=(0,s.coerce)((0,s.bigint)(),a,BigInt),l=((0,s.union)([o.StrictHexStruct,(0,s.instance)(Uint8Array)]),(0,s.coerce)((0,s.instance)(Uint8Array),(0,s.union)([o.StrictHexStruct]),i.hexToBytes)),d=(0,s.coerce)(o.StrictHexStruct,(0,s.instance)(Uint8Array),i.bytesToHex);function p(e){try{const t=(0,s.create)(e,c);return(0,r.assert)(Number.isFinite(t),`Expected a number-like value, got "${e}".`),t}catch(t){if(t instanceof s.StructError)throw new Error(`Expected a number-like value, got "${e}".`);throw t}}function f(e){try{return(0,s.create)(e,u)}catch(e){if(e instanceof s.StructError)throw new Error(`Expected a number-like value, got "${String(e.value)}".`);throw e}}function h(e){if("string"==typeof e&&"0x"===e.toLowerCase())return new Uint8Array;try{return(0,s.create)(e,l)}catch(e){if(e instanceof s.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}}function m(e){if(e instanceof Uint8Array&&0===e.length||"string"==typeof e&&"0x"===e.toLowerCase())return"0x";try{return(0,s.create)(e,d)}catch(e){if(e instanceof s.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}}}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/coercers.js"}],[1940,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){function s(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function r(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,s(e,t,"get"))}function i(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function o(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,s(e,t,"set"),n),n}Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{FrozenMap:function(){return u},FrozenSet:function(){return p}});var a=new WeakMap;let c=Symbol.iterator;class u{get size(){return r(this,a).size}[c](){return r(this,a)[Symbol.iterator]()}entries(){return r(this,a).entries()}forEach(e,t){return r(this,a).forEach(((n,s,r)=>e.call(t,n,s,this)))}get(e){return r(this,a).get(e)}has(e){return r(this,a).has(e)}keys(){return r(this,a).keys()}values(){return r(this,a).values()}toString(){return`FrozenMap(${this.size}) {${this.size>0?` ${[...this.entries()].map((([e,t])=>`${String(e)} => ${String(t)}`)).join(", ")} `:""}}`}constructor(e){i(this,a,{writable:!0,value:void 0}),o(this,a,new Map(e)),Object.freeze(this)}}var l=new WeakMap;let d=Symbol.iterator;class p{get size(){return r(this,l).size}[d](){return r(this,l)[Symbol.iterator]()}entries(){return r(this,l).entries()}forEach(e,t){return r(this,l).forEach(((n,s,r)=>e.call(t,n,s,this)))}has(e){return r(this,l).has(e)}keys(){return r(this,l).keys()}values(){return r(this,l).values()}toString(){return`FrozenSet(${this.size}) {${this.size>0?` ${[...this.values()].map((e=>String(e))).join(", ")} `:""}}`}constructor(e){i(this,l,{writable:!0,value:void 0}),o(this,l,new Set(e)),Object.freeze(this)}}Object.freeze(u),Object.freeze(u.prototype),Object.freeze(p),Object.freeze(p.prototype)}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/collections.js"}],[1941,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0})}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/encryption-types.js"}],[1942,{"./assert":1934,"./bytes":1936,"@noble/hashes/sha3":2126,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{HexStruct:function(){return a},StrictHexStruct:function(){return c},HexAddressStruct:function(){return u},HexChecksumAddressStruct:function(){return l},isHexString:function(){return d},isStrictHexString:function(){return p},assertIsHexString:function(){return f},assertIsStrictHexString:function(){return h},isValidHexAddress:function(){return m},getChecksumAddress:function(){return g},isValidChecksumAddress:function(){return y},add0x:function(){return b},remove0x:function(){return w}});const s=e("@noble/hashes/sha3"),r=e("superstruct"),i=e("./assert"),o=e("./bytes"),a=(0,r.pattern)((0,r.string)(),/^(?:0x)?[0-9a-f]+$/iu),c=(0,r.pattern)((0,r.string)(),/^0x[0-9a-f]+$/iu),u=(0,r.pattern)((0,r.string)(),/^0x[0-9a-f]{40}$/u),l=(0,r.pattern)((0,r.string)(),/^0x[0-9a-fA-F]{40}$/u);function d(e){return(0,r.is)(e,a)}function p(e){return(0,r.is)(e,c)}function f(e){(0,i.assert)(d(e),"Value must be a hexadecimal string.")}function h(e){(0,i.assert)(p(e),'Value must be a hexadecimal string, starting with "0x".')}function m(e){return(0,r.is)(e,u)||y(e)}function g(e){(0,i.assert)((0,r.is)(e,l),"Invalid hex address.");const t=w(e.toLowerCase()),n=w((0,o.bytesToHex)((0,s.keccak_256)(t)));return`0x${t.split("").map(((e,t)=>{const s=n[t];return(0,i.assert)((0,r.is)(s,(0,r.string)()),"Hash shorter than address."),parseInt(s,16)>7?e.toUpperCase():e})).join("")}`}function y(e){return!!(0,r.is)(e,l)&&g(e)===e}function b(e){return e.startsWith("0x")?e:e.startsWith("0X")?`0x${e.substring(2)}`:`0x${e}`}function w(e){return e.startsWith("0x")||e.startsWith("0X")?e.substring(2):e}}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/hex.js"}],[1943,{"./assert":1934,"./base64":1935,"./bytes":1936,"./caip-types":1937,"./checksum":1938,"./coercers":1939,"./collections":1940,"./encryption-types":1941,"./hex":1942,"./json":1944,"./keyring":1945,"./logging":1946,"./misc":1947,"./number":1948,"./opaque":1949,"./time":1950,"./transaction-types":1951,"./versions":1952},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){function s(e,t){return Object.keys(e).forEach((function(n){"default"===n||Object.prototype.hasOwnProperty.call(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[n]}})})),e}Object.defineProperty(n,"__esModule",{value:!0}),s(e("./assert"),n),s(e("./base64"),n),s(e("./bytes"),n),s(e("./caip-types"),n),s(e("./checksum"),n),s(e("./coercers"),n),s(e("./collections"),n),s(e("./encryption-types"),n),s(e("./hex"),n),s(e("./json"),n),s(e("./keyring"),n),s(e("./logging"),n),s(e("./misc"),n),s(e("./number"),n),s(e("./opaque"),n),s(e("./time"),n),s(e("./transaction-types"),n),s(e("./versions"),n)}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/index.js"}],[1944,{"./assert":1934,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{UnsafeJsonStruct:function(){return i},JsonStruct:function(){return o},isValidJson:function(){return a},getSafeJson:function(){return c},getJsonSize:function(){return u},jsonrpc2:function(){return l},JsonRpcVersionStruct:function(){return d},JsonRpcIdStruct:function(){return p},JsonRpcErrorStruct:function(){return f},JsonRpcParamsStruct:function(){return h},JsonRpcRequestStruct:function(){return m},JsonRpcNotificationStruct:function(){return g},isJsonRpcNotification:function(){return y},assertIsJsonRpcNotification:function(){return b},isJsonRpcRequest:function(){return w},assertIsJsonRpcRequest:function(){return _},PendingJsonRpcResponseStruct:function(){return v},JsonRpcSuccessStruct:function(){return S},JsonRpcFailureStruct:function(){return k},JsonRpcResponseStruct:function(){return T},isPendingJsonRpcResponse:function(){return E},assertIsPendingJsonRpcResponse:function(){return x},isJsonRpcResponse:function(){return j},assertIsJsonRpcResponse:function(){return I},isJsonRpcSuccess:function(){return P},assertIsJsonRpcSuccess:function(){return R},isJsonRpcFailure:function(){return A},assertIsJsonRpcFailure:function(){return N},isJsonRpcError:function(){return O},assertIsJsonRpcError:function(){return C},getJsonRpcIdValidator:function(){return B}});const s=e("superstruct"),r=e("./assert"),i=(0,s.union)([(0,s.literal)(null),(0,s.boolean)(),(0,s.define)("finite number",(e=>(0,s.is)(e,(0,s.number)())&&Number.isFinite(e))),(0,s.string)(),(0,s.array)((0,s.lazy)((()=>i))),(0,s.record)((0,s.string)(),(0,s.lazy)((()=>i)))]),o=(0,s.coerce)(i,(0,s.any)(),(e=>((0,r.assertStruct)(e,i),JSON.parse(JSON.stringify(e,((e,t)=>"__proto__"===e||"constructor"===e?undefined:t))))));function a(e){try{return c(e),!0}catch{return!1}}function c(e){return(0,s.create)(e,o)}function u(e){(0,r.assertStruct)(e,o,"Invalid JSON value");const t=JSON.stringify(e);return(new TextEncoder).encode(t).byteLength}const l="2.0",d=(0,s.literal)(l),p=(0,s.nullable)((0,s.union)([(0,s.number)(),(0,s.string)()])),f=(0,s.object)({code:(0,s.integer)(),message:(0,s.string)(),data:(0,s.optional)(o),stack:(0,s.optional)((0,s.string)())}),h=(0,s.union)([(0,s.record)((0,s.string)(),o),(0,s.array)(o)]),m=(0,s.object)({id:p,jsonrpc:d,method:(0,s.string)(),params:(0,s.optional)(h)}),g=(0,s.object)({jsonrpc:d,method:(0,s.string)(),params:(0,s.optional)(h)});function y(e){return(0,s.is)(e,g)}function b(e,t){(0,r.assertStruct)(e,g,"Invalid JSON-RPC notification",t)}function w(e){return(0,s.is)(e,m)}function _(e,t){(0,r.assertStruct)(e,m,"Invalid JSON-RPC request",t)}const v=(0,s.object)({id:p,jsonrpc:d,result:(0,s.optional)((0,s.unknown)()),error:(0,s.optional)(f)}),S=(0,s.object)({id:p,jsonrpc:d,result:o}),k=(0,s.object)({id:p,jsonrpc:d,error:f}),T=(0,s.union)([S,k]);function E(e){return(0,s.is)(e,v)}function x(e,t){(0,r.assertStruct)(e,v,"Invalid pending JSON-RPC response",t)}function j(e){return(0,s.is)(e,T)}function I(e,t){(0,r.assertStruct)(e,T,"Invalid JSON-RPC response",t)}function P(e){return(0,s.is)(e,S)}function R(e,t){(0,r.assertStruct)(e,S,"Invalid JSON-RPC success response",t)}function A(e){return(0,s.is)(e,k)}function N(e,t){(0,r.assertStruct)(e,k,"Invalid JSON-RPC failure response",t)}function O(e){return(0,s.is)(e,f)}function C(e,t){(0,r.assertStruct)(e,f,"Invalid JSON-RPC error",t)}function B(e){const{permitEmptyString:t,permitFractions:n,permitNull:s}={permitEmptyString:!0,permitFractions:!1,permitNull:!0,...e};return e=>Boolean("number"==typeof e&&(n||Number.isInteger(e))||"string"==typeof e&&(t||e.length>0)||s&&null===e)}}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/json.js"}],[1945,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0})}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/keyring.js"}],[1946,{debug:3132},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{createProjectLogger:function(){return i},createModuleLogger:function(){return o}});function s(e){return e&&e.__esModule?e:{default:e}}const r=(0,s(e("debug")).default)("metamask");function i(e){return r.extend(e)}function o(e,t){return e.extend(t)}}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/logging.js"}],[1947,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){function s(e){return Array.isArray(e)&&e.length>0}function r(e){return null===e||e===undefined}function i(e){return Boolean(e)&&"object"==typeof e&&!Array.isArray(e)}Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{JsonSize:function(){return c},isNonEmptyArray:function(){return s},isNullOrUndefined:function(){return r},isObject:function(){return i},hasProperty:function(){return o},getKnownPropertyNames:function(){return a},ESCAPE_CHARACTERS_REGEXP:function(){return u},isPlainObject:function(){return l},isASCII:function(){return d},calculateStringSize:function(){return p},calculateNumberSize:function(){return f}});const o=(e,t)=>Object.hasOwnProperty.call(e,t);function a(e){return Object.getOwnPropertyNames(e)}var c;!function(e){e[e.Null=4]="Null",e[e.Comma=1]="Comma",e[e.Wrapper=1]="Wrapper",e[e.True=4]="True",e[e.False=5]="False",e[e.Quote=1]="Quote",e[e.Colon=1]="Colon",e[e.Date=24]="Date"}(c||(c={}));const u=/"|\\|\n|\r|\t/gu;function l(e){if("object"!=typeof e||null===e)return!1;try{let t=e;for(;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}catch(e){return!1}}function d(e){return e.charCodeAt(0)<=127}function p(e){return e.split("").reduce(((e,t)=>d(t)?e+1:e+2),0)+(e.match(u)??[]).length}function f(e){return e.toString().length}}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/misc.js"}],[1948,{"./assert":1934,"./hex":1942},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{numberToHex:function(){return i},bigIntToHex:function(){return o},hexToNumber:function(){return a},hexToBigInt:function(){return c}});const s=e("./assert"),r=e("./hex"),i=e=>((0,s.assert)("number"==typeof e,"Value must be a number."),(0,s.assert)(e>=0,"Value must be a non-negative number."),(0,s.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToHex` instead."),(0,r.add0x)(e.toString(16))),o=e=>((0,s.assert)("bigint"==typeof e,"Value must be a bigint."),(0,s.assert)(e>=0,"Value must be a non-negative bigint."),(0,r.add0x)(e.toString(16))),a=e=>{(0,r.assertIsHexString)(e);const t=parseInt(e,16);return(0,s.assert)(Number.isSafeInteger(t),"Value is not a safe integer. Use `hexToBigInt` instead."),t},c=e=>((0,r.assertIsHexString)(e),BigInt((0,r.add0x)(e)))}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/number.js"}],[1949,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0})}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/opaque.js"}],[1950,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){var s;Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{Duration:function(){return s},inMilliseconds:function(){return i},timeSince:function(){return o}}),function(e){e[e.Millisecond=1]="Millisecond",e[e.Second=1e3]="Second",e[e.Minute=6e4]="Minute",e[e.Hour=36e5]="Hour",e[e.Day=864e5]="Day",e[e.Week=6048e5]="Week",e[e.Year=31536e6]="Year"}(s||(s={}));const r=(e,t)=>{if(!(e=>Number.isInteger(e)&&e>=0)(e))throw new Error(`"${t}" must be a non-negative integer. Received: "${e}".`)};function i(e,t){return r(e,"count"),e*t}function o(e){return r(e,"timestamp"),Date.now()-e}}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/time.js"}],[1951,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0})}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/transaction-types.js"}],[1952,{"./assert":1934,semver:4561,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{VersionStruct:function(){return o},VersionRangeStruct:function(){return a},isValidSemVerVersion:function(){return c},isValidSemVerRange:function(){return u},assertIsSemVerVersion:function(){return l},assertIsSemVerRange:function(){return d},gtVersion:function(){return p},gtRange:function(){return f},satisfiesVersionRange:function(){return h}});const s=e("semver"),r=e("superstruct"),i=e("./assert"),o=(0,r.refine)((0,r.string)(),"Version",(e=>null!==(0,s.valid)(e)||`Expected SemVer version, got "${e}"`)),a=(0,r.refine)((0,r.string)(),"Version range",(e=>null!==(0,s.validRange)(e)||`Expected SemVer range, got "${e}"`));function c(e){return(0,r.is)(e,o)}function u(e){return(0,r.is)(e,a)}function l(e){(0,i.assertStruct)(e,o)}function d(e){(0,i.assertStruct)(e,a)}function p(e,t){return(0,s.gt)(e,t)}function f(e,t){return(0,s.gtr)(e,t)}function h(e,t){return(0,s.satisfies)(e,t,{includePrerelease:!0})}}}},{package:"@metamask/snaps-utils>@metamask/snaps-registry>@metamask/utils",file:"node_modules/@metamask/snaps-registry/node_modules/@metamask/utils/dist/cjs/versions.js"}],[1953,{"./permitted":1958,"./restricted":1973,"./utils":1978,"@metamask/snaps-utils":2034},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{permittedMethods:function(){return s.handlers},createSnapsMethodMiddleware:function(){return s.createSnapsMethodMiddleware},SnapCaveatType:function(){return o.SnapCaveatType},selectHooks:function(){return a.selectHooks}});const s=e("./permitted");var r,i;r=e("./restricted"),i=n,Object.keys(r).forEach((function(e){"default"===e||Object.prototype.hasOwnProperty.call(i,e)||Object.defineProperty(i,e,{enumerable:!0,get:function(){return r[e]}})}));const o=e("@metamask/snaps-utils"),a=e("./utils")}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/index.js"}],[1954,{"@metamask/rpc-errors":1756,"@metamask/utils":1988},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"handleInstallSnaps",{enumerable:!0,get:function(){return i}});const s=e("@metamask/rpc-errors"),r=e("@metamask/utils");async function i(e,t){if(!(0,r.isObject)(e))throw s.rpcErrors.invalidParams({message:"Invalid snap installation params.",data:{requestedSnaps:e}});if(0===Object.keys(e).length)throw s.rpcErrors.invalidParams({message:"Must specify at least one snap to install.",data:{requestedSnaps:e}});return await t(e)}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/permitted/common/snapInstallation.js"}],[1955,{"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034,"@metamask/utils":1988,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{GetFileArgsStruct:function(){return a},getFileHandler:function(){return c}});const s=e("@metamask/rpc-errors"),r=e("@metamask/snaps-utils"),i=e("@metamask/utils"),o=e("superstruct"),a=(0,o.object)({path:(0,o.string)(),encoding:(0,o.optional)((0,o.union)([(0,r.enumValue)(r.AuxiliaryFileEncoding.Base64),(0,r.enumValue)(r.AuxiliaryFileEncoding.Hex),(0,r.enumValue)(r.AuxiliaryFileEncoding.Utf8)]))}),c={methodNames:["snap_getFile"],implementation:async function(e,t,n,o,{getSnapFile:c}){const{params:u}=e;(0,i.assertStruct)(u,a,'Invalid "snap_getFile" parameters',s.rpcErrors.invalidParams);try{t.result=await c(u.path,u.encoding??r.AuxiliaryFileEncoding.Base64)}catch(e){return o(e)}return o()},hookNames:{getSnapFile:!0}}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/permitted/getFile.js"}],[1956,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"getSnapsHandler",{enumerable:!0,get:function(){return s}});const s={methodNames:["wallet_getSnaps"],implementation:async function(e,t,n,s,{getSnaps:r}){return t.result=await r(),s()},hookNames:{getSnaps:!0}}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/permitted/getSnaps.js"}],[1957,{"./getFile":1955,"./getSnaps":1956,"./invokeKeyring":1959,"./invokeSnapSugar":1960,"./requestSnaps":1962},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{methodHandlers:function(){return c},handlers:function(){return u}});const s=e("./getFile"),r=e("./getSnaps"),i=e("./invokeKeyring"),o=e("./invokeSnapSugar"),a=e("./requestSnaps"),c={wallet_getSnaps:r.getSnapsHandler,wallet_requestSnaps:a.requestSnapsHandler,wallet_invokeSnap:o.invokeSnapSugarHandler,wallet_invokeKeyring:i.invokeKeyringHandler,snap_getFile:s.getFileHandler},u=Object.values(c)}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/permitted/handlers.js"}],[1958,{"./handlers":1957,"./middleware":1961},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){function s(e,t){return Object.keys(e).forEach((function(n){"default"===n||Object.prototype.hasOwnProperty.call(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[n]}})})),e}Object.defineProperty(n,"__esModule",{value:!0}),s(e("./handlers"),n),s(e("./middleware"),n)}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/permitted/index.js"}],[1959,{"./invokeSnapSugar":1960,"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034,"@metamask/utils":1988},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"invokeKeyringHandler",{enumerable:!0,get:function(){return a}});const s=e("@metamask/rpc-errors"),r=e("@metamask/snaps-utils"),i=e("@metamask/utils"),o=e("./invokeSnapSugar"),a={methodNames:["wallet_invokeKeyring"],implementation:async function(e,t,n,a,{handleSnapRpcRequest:c,hasPermission:u,getSnap:l,getAllowedKeyringMethods:d}){let p;try{p=(0,o.getValidatedParams)(e.params)}catch(e){return a(e)}const{origin:f}=e,{snapId:h,request:m}=p;if(!f||!u(f,r.WALLET_SNAP_PERMISSION_KEY))return a(s.rpcErrors.invalidRequest({message:`The snap "${h}" is not connected to "${f}". Please connect before invoking the snap.`}));if(!l(h))return a(s.rpcErrors.invalidRequest({message:`The snap "${h}" is not installed. Please install it first, before invoking the snap.`}));if(!(0,i.hasProperty)(m,"method")||"string"!=typeof m.method)return a(s.rpcErrors.invalidRequest({message:"The request must have a method."}));if(!d(f).includes(m.method))return a(s.rpcErrors.invalidRequest({message:`The origin "${f}" is not allowed to invoke the method "${m.method}".`}));try{t.result=await c({snapId:h,origin:f,request:m,handler:r.HandlerType.OnKeyringRequest})}catch(e){return a(e)}return a()},hookNames:{hasPermission:!0,handleSnapRpcRequest:!0,getSnap:!0,getAllowedKeyringMethods:!0}}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/permitted/invokeKeyring.js"}],[1960,{"@metamask/rpc-errors":1756,"@metamask/utils":1988},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{invokeSnapSugarHandler:function(){return i},invokeSnapSugar:function(){return o},getValidatedParams:function(){return a}});const s=e("@metamask/rpc-errors"),r=e("@metamask/utils"),i={methodNames:["wallet_invokeSnap"],implementation:o,hookNames:undefined};function o(e,t,n,s){let r;try{r=a(e.params)}catch(e){return s(e)}return e.method="wallet_snap",e.params=r,n()}function a(e){if(!(0,r.isObject)(e))throw s.rpcErrors.invalidParams({message:"Expected params to be a single object."});const{snapId:t,request:n}=e;if(!t||"string"!=typeof t||""===t)throw s.rpcErrors.invalidParams({message:"Must specify a valid snap ID."});if(!(0,r.isObject)(n))throw s.rpcErrors.invalidParams({message:"Expected request to be a single object."});return e}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/permitted/invokeSnapSugar.js"}],[1961,{"../utils":1978,"./handlers":1957,"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"createSnapsMethodMiddleware",{enumerable:!0,get:function(){return a}});const s=e("@metamask/rpc-errors"),r=e("@metamask/snaps-utils"),i=e("../utils"),o=e("./handlers");function a(e,t){return async function(n,a,c,u){const l=o.methodHandlers[n.method];if(l){if(n.method.startsWith("snap_")&&!e)return u(s.rpcErrors.methodNotFound());const{implementation:o,hookNames:d}=l;try{return await o(n,a,c,u,(0,i.selectHooks)(t,d))}catch(e){return(0,r.logError)(e),u(e)}}return c()}}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/permitted/middleware.js"}],[1962,{"../restricted/invokeSnap":1974,"./common/snapInstallation":1954,"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034,"@metamask/utils":1988},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{requestSnapsHandler:function(){return c},hasRequestedSnaps:function(){return u},getSnapPermissionsRequest:function(){return l}});const s=e("@metamask/rpc-errors"),r=e("@metamask/snaps-utils"),i=e("@metamask/utils"),o=e("../restricted/invokeSnap"),a=e("./common/snapInstallation"),c={methodNames:["wallet_requestSnaps"],implementation:async function(e,t,n,c,{installSnaps:d,requestPermissions:p,getPermissions:f}){const h=e.params;if(!(0,i.isObject)(h))return c(s.rpcErrors.invalidParams({message:'"params" must be an object.'}));try{if(!Object.keys(h).length)throw new Error("Request must have at least one requested snap.");const e={[o.WALLET_SNAP_PERMISSION_KEY]:{caveats:[{type:r.SnapCaveatType.SnapIds,value:h}]}},n=await f();if(n)if(u(n,h))t.result=await(0,a.handleInstallSnaps)(h,d);else{const s=l(n,e),[,r]=await p(s);t.result=r.data[o.WALLET_SNAP_PERMISSION_KEY]}else{const[,n]=await p(e);t.result=n.data[o.WALLET_SNAP_PERMISSION_KEY]}}catch(e){t.error=e}return c()},hookNames:{installSnaps:!0,requestPermissions:!0,getPermissions:!0}};function u(e,t){const n=e[o.WALLET_SNAP_PERMISSION_KEY]?.caveats?.find((e=>e.type===r.SnapCaveatType.SnapIds)),s=n?.value;return!!(0,i.isObject)(s)&&Object.keys(t).every((e=>(0,i.hasProperty)(s,e)))}function l(e,t){if((0,r.verifyRequestedSnapPermissions)(t),!e[o.WALLET_SNAP_PERMISSION_KEY])return t;const n=e[o.WALLET_SNAP_PERMISSION_KEY].caveats?.find((e=>e.type===r.SnapCaveatType.SnapIds)),s=n?.value??{},i=t[o.WALLET_SNAP_PERMISSION_KEY].caveats[0].value,a=[...new Set([...Object.keys(s),...Object.keys(i)])].reduce(((e,t)=>(e[t]=i[t]??s[t],e)),{});return t[o.WALLET_SNAP_PERMISSION_KEY].caveats[0].value=a,t}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/permitted/requestSnaps.js"}],[1963,{"../getBip32Entropy":1968,"../getBip32PublicKey":1969,"../getBip44Entropy":1970,"../invokeSnap":1974,"./permittedCoinTypes":1964,"./permittedDerivationPaths":1965,"./snapIds":1966},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{caveatSpecifications:function(){return l},caveatMappers:function(){return d}});const s=e("../getBip32Entropy"),r=e("../getBip32PublicKey"),i=e("../getBip44Entropy"),o=e("../invokeSnap"),a=e("./permittedCoinTypes"),c=e("./permittedDerivationPaths"),u=e("./snapIds"),l={...c.PermittedDerivationPathsCaveatSpecification,...a.PermittedCoinTypesCaveatSpecification,...u.SnapIdsCaveatSpecification},d={[s.getBip32EntropyBuilder.targetName]:c.permittedDerivationPathsCaveatMapper,[r.getBip32PublicKeyBuilder.targetName]:c.permittedDerivationPathsCaveatMapper,[i.getBip44EntropyBuilder.targetName]:a.permittedCoinTypesCaveatMapper,[o.invokeSnapBuilder.targetName]:u.snapIdsCaveatMapper}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/caveats/index.js"}],[1964,{"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034,"@metamask/utils":1988},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{permittedCoinTypesCaveatMapper:function(){return o},validateBIP44Params:function(){return a},validateBIP44Caveat:function(){return c},PermittedCoinTypesCaveatSpecification:function(){return u}});const s=e("@metamask/rpc-errors"),r=e("@metamask/snaps-utils"),i=e("@metamask/utils");function o(e){return{caveats:[{type:r.SnapCaveatType.PermittedCoinTypes,value:e}]}}function a(e){if(!(0,i.isPlainObject)(e)||!(0,i.hasProperty)(e,"coinType"))throw s.rpcErrors.invalidParams({message:"Expected a plain object containing a coin type."});if("number"!=typeof e.coinType||!Number.isInteger(e.coinType)||e.coinType<0||e.coinType>2147483647)throw s.rpcErrors.invalidParams({message:'Invalid "coinType" parameter. Coin type must be a non-negative integer.'});if(r.FORBIDDEN_COIN_TYPES.includes(e.coinType))throw s.rpcErrors.invalidParams({message:`Coin type ${e.coinType} is forbidden.`})}function c(e){if(!(0,i.hasProperty)(e,"value")||!Array.isArray(e.value)||0===e.value.length)throw s.rpcErrors.invalidParams({message:"Expected non-empty array of coin types."});e.value.forEach(a)}const u={[r.SnapCaveatType.PermittedCoinTypes]:Object.freeze({type:r.SnapCaveatType.PermittedCoinTypes,decorator:(e,t)=>async n=>{const{params:r}=n;a(r);if(!t.value.find((e=>e.coinType===r.coinType)))throw s.providerErrors.unauthorized({message:"The requested coin type is not permitted. Allowed coin types must be specified in the snap manifest."});return await e(n)},validator:e=>c(e)})}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/caveats/permittedCoinTypes.js"}],[1965,{"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034,"@metamask/utils":1988,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{permittedDerivationPathsCaveatMapper:function(){return a},validateBIP32Path:function(){return c},validateBIP32CaveatPaths:function(){return u},PermittedDerivationPathsCaveatSpecification:function(){return l}});const s=e("@metamask/rpc-errors"),r=e("@metamask/snaps-utils"),i=e("@metamask/utils"),o=e("superstruct");function a(e){return{caveats:[{type:r.SnapCaveatType.PermittedDerivationPaths,value:e}]}}function c(e){(0,i.assertStruct)(e,r.Bip32EntropyStruct,"Invalid BIP-32 entropy path definition",s.rpcErrors.invalidParams)}function u(e){(0,i.assertStruct)(e,(0,o.type)({value:(0,o.size)((0,o.array)(r.Bip32EntropyStruct),1,Infinity)}),"Invalid BIP-32 entropy caveat",s.rpcErrors.internal)}const l={[r.SnapCaveatType.PermittedDerivationPaths]:Object.freeze({type:r.SnapCaveatType.PermittedDerivationPaths,decorator:(e,t)=>async n=>{const{params:i}=n;c(i);if(!t.value.find((e=>(0,r.isEqual)(i.path.slice(0,e.path.length),e.path)&&e.curve===i.curve)))throw s.providerErrors.unauthorized({message:"The requested path is not permitted. Allowed paths must be specified in the snap manifest."});return await e(n)},validator:e=>u(e)})}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/caveats/permittedDerivationPaths.js"}],[1966,{"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034,"@metamask/utils":1988,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{snapIdsCaveatMapper:function(){return a},validateSnapIdsCaveat:function(){return c},SnapIdsCaveatSpecification:function(){return u}});const s=e("@metamask/rpc-errors"),r=e("@metamask/snaps-utils"),i=e("@metamask/utils"),o=e("superstruct");function a(e){return{caveats:[{type:r.SnapCaveatType.SnapIds,value:e}]}}function c(e){(0,i.assertStruct)(e,(0,o.type)({value:r.SnapIdsStruct}),"Expected caveat to have a value property of a non-empty object of snap IDs.",s.rpcErrors.invalidParams)}const u={[r.SnapCaveatType.SnapIds]:Object.freeze({type:r.SnapCaveatType.SnapIds,validator:e=>c(e),decorator:(e,t)=>async n=>{const{params:s,context:{origin:r}}=n,o=t.value,{snapId:a}=s;if(!(0,i.hasProperty)(o,a))throw new Error(`${r} does not have permission to invoke ${a} snap.`);return await e(n)}})}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/caveats/snapIds.js"}],[1967,{"@metamask/permission-controller":1667,"@metamask/rpc-errors":1756,"@metamask/snaps-ui":1999,"@metamask/snaps-utils":2034,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{DialogType:function(){return u},dialogBuilder:function(){return d},getDialogImplementation:function(){return y}});const s=e("@metamask/permission-controller"),r=e("@metamask/rpc-errors"),i=e("@metamask/snaps-ui"),o=e("@metamask/snaps-utils"),a=e("superstruct"),c="snap_dialog";var u;!function(e){e.Alert="alert",e.Confirmation="confirmation",e.Prompt="prompt"}(u||(u={}));const l=(0,a.optional)((0,a.size)((0,a.string)(),1,40)),d=Object.freeze({targetName:c,specificationBuilder:({allowedCaveats:e=null,methodHooks:t})=>({permissionType:s.PermissionType.RestrictedMethod,targetName:c,allowedCaveats:e,methodImplementation:y(t),subjectTypes:[s.SubjectType.Snap]}),methodHooks:{showDialog:!0}}),p=(0,a.type)({type:(0,a.enums)([u.Alert,u.Confirmation,u.Prompt])}),f=(0,a.object)({type:(0,o.enumValue)(u.Alert),content:i.ComponentStruct}),h=(0,a.object)({type:(0,o.enumValue)(u.Confirmation),content:i.ComponentStruct}),m=(0,a.object)({type:(0,o.enumValue)(u.Prompt),content:i.ComponentStruct,placeholder:l}),g=((0,a.union)([f,h,m]),{[u.Alert]:f,[u.Confirmation]:h,[u.Prompt]:m});function y({showDialog:e}){return async function(t){const{params:n,context:{origin:s}}=t,i=function(e){try{return(0,a.create)(e,p).type}catch(e){throw r.rpcErrors.invalidParams({message:`The "type" property must be one of: ${Object.values(u).join(", ")}.`})}}(n),o=function(e,t){try{return(0,a.create)(e,t)}catch(e){if(e instanceof a.StructError){const{key:t,type:n}=e;if("placeholder"===t&&"never"===n)throw r.rpcErrors.invalidParams({message:'Invalid params: Alerts or confirmations may not specify a "placeholder" field.'});throw r.rpcErrors.invalidParams({message:`Invalid params: ${e.message}.`})}throw r.rpcErrors.internal()}}(n,g[i]),{content:c}=o,l=o.type===u.Prompt?o.placeholder:undefined;return e(s,i,c,l)}}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/dialog.js"}],[1968,{"../utils":1978,"@metamask/permission-controller":1667,"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034,"@metamask/utils":1988},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{getBip32EntropyBuilder:function(){return u},getBip32EntropyImplementation:function(){return l}});const s=e("@metamask/permission-controller"),r=e("@metamask/rpc-errors"),i=e("@metamask/snaps-utils"),o=e("@metamask/utils"),a=e("../utils"),c="snap_getBip32Entropy",u=Object.freeze({targetName:c,specificationBuilder:({methodHooks:e})=>({permissionType:s.PermissionType.RestrictedMethod,targetName:c,allowedCaveats:[i.SnapCaveatType.PermittedDerivationPaths],methodImplementation:l(e),validator:({caveats:e})=>{if(1!==e?.length||e[0].type!==i.SnapCaveatType.PermittedDerivationPaths)throw r.rpcErrors.invalidParams({message:`Expected a single "${i.SnapCaveatType.PermittedDerivationPaths}" caveat.`})},subjectTypes:[s.SubjectType.Snap]}),methodHooks:{getMnemonic:!0,getUnlockPromise:!0}});function l({getMnemonic:e,getUnlockPromise:t}){return async function(n){await t(!0);const{params:s}=n;(0,o.assert)(s);return(await(0,a.getNode)({curve:s.curve,path:s.path,secretRecoveryPhrase:await e()})).toJSON()}}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/getBip32Entropy.js"}],[1969,{"../utils":1978,"@metamask/permission-controller":1667,"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034,"@metamask/utils":1988,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{Bip32PublicKeyArgsStruct:function(){return l},getBip32PublicKeyBuilder:function(){return d},getBip32PublicKeyImplementation:function(){return p}});const s=e("@metamask/permission-controller"),r=e("@metamask/rpc-errors"),i=e("@metamask/snaps-utils"),o=e("@metamask/utils"),a=e("superstruct"),c=e("../utils"),u="snap_getBip32PublicKey",l=(0,i.bip32entropy)((0,a.object)({path:i.Bip32PathStruct,curve:(0,a.enums)(["ed25519","secp256k1"]),compressed:(0,a.optional)((0,a.boolean)())})),d=Object.freeze({targetName:u,specificationBuilder:({methodHooks:e})=>({permissionType:s.PermissionType.RestrictedMethod,targetName:u,allowedCaveats:[i.SnapCaveatType.PermittedDerivationPaths],methodImplementation:p(e),validator:({caveats:e})=>{if(1!==e?.length||e[0].type!==i.SnapCaveatType.PermittedDerivationPaths)throw r.rpcErrors.invalidParams({message:`Expected a single "${i.SnapCaveatType.PermittedDerivationPaths}" caveat.`})},subjectTypes:[s.SubjectType.Snap]}),methodHooks:{getMnemonic:!0,getUnlockPromise:!0}});function p({getMnemonic:e,getUnlockPromise:t}){return async function(n){await t(!0),(0,o.assertStruct)(n.params,l,"Invalid BIP-32 public key params",r.rpcErrors.invalidParams);const{params:s}=n,i=await(0,c.getNode)({curve:s.curve,path:s.path,secretRecoveryPhrase:await e()});return s.compressed?i.compressedPublicKey:i.publicKey}}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/getBip32PublicKey.js"}],[1970,{"@metamask/key-tree":1453,"@metamask/permission-controller":1667,"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{getBip44EntropyBuilder:function(){return c},getBip44EntropyImplementation:function(){return u}});const s=e("@metamask/key-tree"),r=e("@metamask/permission-controller"),i=e("@metamask/rpc-errors"),o=e("@metamask/snaps-utils"),a="snap_getBip44Entropy",c=Object.freeze({targetName:a,specificationBuilder:({methodHooks:e})=>({permissionType:r.PermissionType.RestrictedMethod,targetName:a,allowedCaveats:[o.SnapCaveatType.PermittedCoinTypes],methodImplementation:u(e),validator:({caveats:e})=>{if(1!==e?.length||e[0].type!==o.SnapCaveatType.PermittedCoinTypes)throw i.rpcErrors.invalidParams({message:`Expected a single "${o.SnapCaveatType.PermittedCoinTypes}" caveat.`})},subjectTypes:[r.SubjectType.Snap]}),methodHooks:{getMnemonic:!0,getUnlockPromise:!0}});function u({getMnemonic:e,getUnlockPromise:t}){return async function(n){await t(!0);const r=n.params;return(await s.BIP44CoinTypeNode.fromDerivationPath([await e(),"bip32:44'",`bip32:${r.coinType}'`])).toJSON()}}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/getBip44Entropy.js"}],[1971,{"../utils":1978,"@metamask/permission-controller":1667,"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034,"@metamask/utils":1988,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{GetEntropyArgsStruct:function(){return l},getEntropyBuilder:function(){return d}});const s=e("@metamask/permission-controller"),r=e("@metamask/rpc-errors"),i=e("@metamask/snaps-utils"),o=e("@metamask/utils"),a=e("superstruct"),c=e("../utils"),u="snap_getEntropy",l=(0,a.object)({version:(0,a.literal)(1),salt:(0,a.optional)((0,a.string)())}),d=Object.freeze({targetName:u,specificationBuilder:({allowedCaveats:e=null,methodHooks:t})=>({permissionType:s.PermissionType.RestrictedMethod,targetName:u,allowedCaveats:e,methodImplementation:p(t),subjectTypes:[s.SubjectType.Snap]}),methodHooks:{getMnemonic:!0,getUnlockPromise:!0}});function p({getMnemonic:e,getUnlockPromise:t}){return async function(n){const{params:s,context:{origin:a}}=n;(0,o.assertStruct)(s,l,'Invalid "snap_getEntropy" parameters',r.rpcErrors.invalidParams),await t(!0);const u=await e();return(0,c.deriveEntropy)({input:a,salt:s.salt,mnemonicPhrase:u,magic:i.SIP_6_MAGIC_VALUE})}}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/getEntropy.js"}],[1972,{"@metamask/permission-controller":1667},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{specificationBuilder:function(){return i},getLocaleBuilder:function(){return o},getImplementation:function(){return a}});const s=e("@metamask/permission-controller"),r="snap_getLocale",i=({allowedCaveats:e=null,methodHooks:t})=>({permissionType:s.PermissionType.RestrictedMethod,targetName:r,allowedCaveats:e,methodImplementation:a(t),subjectTypes:[s.SubjectType.Snap]}),o=Object.freeze({targetName:r,specificationBuilder:i,methodHooks:{getLocale:!0}});function a({getLocale:e}){return async function(t){return e()}}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/getLocale.js"}],[1973,{"./caveats":1963,"./dialog":1967,"./getBip32Entropy":1968,"./getBip32PublicKey":1969,"./getBip44Entropy":1970,"./getEntropy":1971,"./getLocale":1972,"./invokeSnap":1974,"./manageAccounts":1975,"./manageState":1976,"./notify":1977},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{DialogType:function(){return s.DialogType},ManageStateOperation:function(){return d.ManageStateOperation},WALLET_SNAP_PERMISSION_KEY:function(){return u.WALLET_SNAP_PERMISSION_KEY},NotificationType:function(){return p.NotificationType},restrictedMethodPermissionBuilders:function(){return m}});const s=e("./dialog"),r=e("./getBip32Entropy"),i=e("./getBip32PublicKey"),o=e("./getBip44Entropy"),a=e("./getEntropy"),c=e("./getLocale"),u=e("./invokeSnap"),l=e("./manageAccounts"),d=e("./manageState"),p=e("./notify");var f,h;f=e("./caveats"),h=n,Object.keys(f).forEach((function(e){"default"===e||Object.prototype.hasOwnProperty.call(h,e)||Object.defineProperty(h,e,{enumerable:!0,get:function(){return f[e]}})}));const m={[s.dialogBuilder.targetName]:s.dialogBuilder,[r.getBip32EntropyBuilder.targetName]:r.getBip32EntropyBuilder,[i.getBip32PublicKeyBuilder.targetName]:i.getBip32PublicKeyBuilder,[o.getBip44EntropyBuilder.targetName]:o.getBip44EntropyBuilder,[a.getEntropyBuilder.targetName]:a.getEntropyBuilder,[u.invokeSnapBuilder.targetName]:u.invokeSnapBuilder,[d.manageStateBuilder.targetName]:d.manageStateBuilder,[p.notifyBuilder.targetName]:p.notifyBuilder,[l.manageAccountsBuilder.targetName]:l.manageAccountsBuilder,[c.getLocaleBuilder.targetName]:c.getLocaleBuilder}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/index.js"}],[1974,{"@metamask/permission-controller":1667,"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{WALLET_SNAP_PERMISSION_KEY:function(){return o},handleSnapInstall:function(){return a},invokeSnapBuilder:function(){return c},getInvokeSnapImplementation:function(){return u}});const s=e("@metamask/permission-controller"),r=e("@metamask/rpc-errors"),i=e("@metamask/snaps-utils"),o="wallet_snap",a=async({requestData:e,messagingSystem:t})=>{const n=e.permissions[o].caveats?.[0].value,s=t.call("SnapController:getPermitted",e.metadata.origin),r=Object.keys(n).reduce(((e,t)=>(s[t]||(e[t]=n[t]),e)),{});return t.call("SnapController:install",e.metadata.origin,r)},c=Object.freeze({targetName:o,specificationBuilder:({methodHooks:e})=>({permissionType:s.PermissionType.RestrictedMethod,targetName:o,allowedCaveats:[i.SnapCaveatType.SnapIds],methodImplementation:u(e),validator:({caveats:e})=>{if(1!==e?.length||e[0].type!==i.SnapCaveatType.SnapIds)throw r.rpcErrors.invalidParams({message:`Expected a single "${i.SnapCaveatType.SnapIds}" caveat.`})},sideEffect:{onPermitted:a}}),methodHooks:{getSnap:!0,handleSnapRpcRequest:!0}});function u({getSnap:e,handleSnapRpcRequest:t}){return async function(n){const{params:s={},context:o}=n,{snapId:a,request:c}=s;if(!e(a))throw r.rpcErrors.invalidRequest({message:`The snap "${a}" is not installed. Please install it first, before invoking the snap.`});const{origin:u}=o;return await t({snapId:a,origin:u,request:c,handler:i.HandlerType.OnRpcRequest})}}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/invokeSnap.js"}],[1975,{"@metamask/permission-controller":1667,"@metamask/utils":1988,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{methodName:function(){return a},specificationBuilder:function(){return c},manageAccountsImplementation:function(){return u},manageAccountsBuilder:function(){return l}});const s=e("@metamask/permission-controller"),r=e("@metamask/utils"),i=e("superstruct"),o=(0,i.union)([(0,i.object)({method:(0,i.string)()}),(0,i.object)({method:(0,i.string)(),params:(0,i.union)([(0,i.array)(r.JsonStruct),(0,i.record)((0,i.string)(),r.JsonStruct)])})]),a="snap_manageAccounts",c=({allowedCaveats:e=null,methodHooks:t})=>({permissionType:s.PermissionType.RestrictedMethod,targetName:a,allowedCaveats:e,methodImplementation:u(t),subjectTypes:[s.SubjectType.Snap]});function u({getSnapKeyring:e}){return async function(t){const{context:{origin:n},params:s}=t;(0,i.assert)(s,o);const r=await e(n);return await r.handleKeyringSnapMessage(n,s)}}const l=Object.freeze({targetName:a,specificationBuilder:c,methodHooks:{getSnapKeyring:!0}})}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/manageAccounts.js"}],[1976,{"../utils":1978,"@metamask/permission-controller":1667,"@metamask/rpc-errors":1756,"@metamask/snaps-utils":2034,"@metamask/utils":1988},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{ManageStateOperation:function(){return p},STATE_ENCRYPTION_SALT:function(){return c},specificationBuilder:function(){return l},manageStateBuilder:function(){return d},STORAGE_SIZE_LIMIT:function(){return f},getManageStateImplementation:function(){return m},getValidatedParams:function(){return g}});const s=e("@metamask/permission-controller"),r=e("@metamask/rpc-errors"),i=e("@metamask/snaps-utils"),o=e("@metamask/utils"),a=e("../utils"),c="snap_manageState encryption",u="snap_manageState",l=({allowedCaveats:e=null,methodHooks:t})=>({permissionType:s.PermissionType.RestrictedMethod,targetName:u,allowedCaveats:e,methodImplementation:m(t),subjectTypes:[s.SubjectType.Snap]}),d=Object.freeze({targetName:u,specificationBuilder:l,methodHooks:{getMnemonic:!0,getUnlockPromise:!0,clearSnapState:!0,getSnapState:!0,updateSnapState:!0,encrypt:!0,decrypt:!0}});var p;!function(e){e.ClearState="clear",e.GetState="get",e.UpdateState="update"}(p||(p={}));const f=104857600;async function h({mnemonicPhrase:e,snapId:t}){return await(0,a.deriveEntropy)({mnemonicPhrase:e,input:t,salt:c,magic:i.STATE_ENCRYPTION_MAGIC_VALUE})}function m({getMnemonic:e,getUnlockPromise:t,clearSnapState:n,getSnapState:s,updateSnapState:i,encrypt:a,decrypt:c}){return async function(u){const{params:l={},method:d,context:{origin:f}}=u,{operation:m,newState:y}=g(l,d);await t(!0);const b=await e();switch(m){case p.ClearState:return await n(f),null;case p.GetState:{const e=await s(f);return null===e?e:await async function({state:e,decryptFunction:t,...n}){try{const s=await h(n),r=await t(s,e);return(0,o.assert)((0,o.isValidJson)(r)),r}catch{throw r.rpcErrors.internal({message:"Failed to decrypt snap state, the state must be corrupted."})}}({state:e,decryptFunction:c,mnemonicPhrase:b,snapId:f})}case p.UpdateState:{(0,o.assert)(y);const e=await async function({state:e,encryptFunction:t,...n}){const s=await h(n);return await t(s,e)}({state:y,encryptFunction:a,mnemonicPhrase:b,snapId:f});return await i(f,e),null}default:throw r.rpcErrors.invalidParams(`Invalid ${d} operation: "${m}"`)}}}function g(e,t,n=f){if(!(0,o.isObject)(e))throw r.rpcErrors.invalidParams({message:"Expected params to be a single object."});const{operation:s,newState:i}=e;if(!s||"string"!=typeof s||!Object.values(p).includes(s))throw r.rpcErrors.invalidParams({message:'Must specify a valid manage state "operation".'});if(s===p.UpdateState){if(!(0,o.isObject)(i))throw r.rpcErrors.invalidParams({message:`Invalid ${t} "updateState" parameter: The new state must be a plain object.`,data:{receivedNewState:void 0===i?"undefined":i}});let e;try{e=(0,o.getJsonSize)(i)}catch{throw r.rpcErrors.invalidParams({message:`Invalid ${t} "updateState" parameter: The new state must be JSON serializable.`,data:{receivedNewState:void 0===i?"undefined":i}})}if(e>n)throw r.rpcErrors.invalidParams({message:`Invalid ${t} "updateState" parameter: The new state must not exceed ${n} bytes in size.`,data:{receivedNewState:void 0===i?"undefined":i}})}return e}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/manageState.js"}],[1977,{"@metamask/permission-controller":1667,"@metamask/rpc-errors":1756,"@metamask/utils":1988},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{NotificationType:function(){return a},specificationBuilder:function(){return c},notifyBuilder:function(){return u},getImplementation:function(){return l},getValidatedParams:function(){return d}});const s=e("@metamask/permission-controller"),r=e("@metamask/rpc-errors"),i=e("@metamask/utils"),o="snap_notify";var a;!function(e){e.InApp="inApp",e.Native="native"}(a||(a={}));const c=({allowedCaveats:e=null,methodHooks:t})=>({permissionType:s.PermissionType.RestrictedMethod,targetName:o,allowedCaveats:e,methodImplementation:l(t),subjectTypes:[s.SubjectType.Snap]}),u=Object.freeze({targetName:o,specificationBuilder:c,methodHooks:{showNativeNotification:!0,showInAppNotification:!0}});function l({showNativeNotification:e,showInAppNotification:t}){return async function(n){const{params:s,context:{origin:i}}=n,o=d(s);switch(o.type){case a.Native:return await e(i,o);case a.InApp:return await t(i,o);default:throw r.rpcErrors.invalidParams({message:'Must specify a valid notification "type".'})}}}function d(e){if(!(0,i.isObject)(e))throw r.rpcErrors.invalidParams({message:"Expected params to be a single object."});const{type:t,message:n}=e;if(!t||"string"!=typeof t||!Object.values(a).includes(t))throw r.rpcErrors.invalidParams({message:'Must specify a valid notification "type".'});if(!n||"string"!=typeof n||n.length>=50)throw r.rpcErrors.invalidParams({message:'Must specify a non-empty string "message" less than 50 characters long.'});return e}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/restricted/notify.js"}],[1978,{"@metamask/key-tree":1453,"@metamask/utils":1988,"@noble/hashes/sha3":2126},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{selectHooks:function(){return a},deriveEntropy:function(){return c},getPathPrefix:function(){return u},getNode:function(){return l}});const s=e("@metamask/key-tree"),r=e("@metamask/utils"),i=e("@noble/hashes/sha3"),o=2147483648;function a(e,t){return t?Object.keys(t).reduce(((t,n)=>{const s=n;return t[s]=e[s],t}),{}):undefined}async function c({input:e,salt:t="",mnemonicPhrase:n,magic:a}){const c=(0,r.stringToBytes)(e),u=(0,r.stringToBytes)(t),l=function(e){const t=[],n=(0,r.createDataView)(e);for(let e=0;e<8;e++){const s=(n.getUint32(4*e)|o)>>>0;t.push(`bip32:${s-o}'`)}return t}((0,i.keccak_256)((0,r.concatBytes)([c,(0,i.keccak_256)(u)]))),{privateKey:d}=await s.SLIP10Node.fromDerivationPath({derivationPath:[n,`bip32:${a}`,...l],curve:"secp256k1"});return(0,r.assert)(d,"Failed to derive the entropy."),(0,r.add0x)(d)}function u(e){return"secp256k1"===e?"bip32":"slip10"}async function l({curve:e,secretRecoveryPhrase:t,path:n}){const r=u(e);return await s.SLIP10Node.fromDerivationPath({curve:e,derivationPath:[t,...n.slice(1).map((e=>`${r}:${e}`))]})}}}},{package:"@metamask/snaps-rpc-methods",file:"node_modules/@metamask/snaps-rpc-methods/dist/cjs/utils.js"}],[1979,{superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{AssertionError:function(){return i},assert:function(){return o},assertStruct:function(){return a},assertExhaustive:function(){return c}});const s=e("superstruct");function r(e,t){return n=e,Boolean("string"==typeof n?.prototype?.constructor?.name)?new e({message:t}):e({message:t});var n}class i extends Error{constructor(e){var t,n,s;super(e.message),s="ERR_ASSERTION",(n="code")in(t=this)?Object.defineProperty(t,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[n]=s}}function o(e,t="Assertion failed.",n=i){if(!e){if(t instanceof Error)throw t;throw r(n,t)}}function a(e,t,n="Assertion failed",o=i){try{(0,s.assert)(e,t)}catch(e){throw r(o,`${n}: ${function(e){const t=function(e){return"object"==typeof e&&null!==e&&"message"in e}(e)?e.message:String(e);return t.endsWith(".")?t.slice(0,-1):t}(e)}.`)}}function c(e){throw new Error("Invalid branch reached. Should be detected during compilation.")}}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/assert.js"}],[1980,{"./assert":1979,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"base64",{enumerable:!0,get:function(){return i}});const s=e("superstruct"),r=e("./assert"),i=(e,t={})=>{const n=t.paddingRequired??!1,i=t.characterSet??"base64";let o,a;return"base64"===i?o=String.raw`[A-Za-z0-9+\/]`:((0,r.assert)("base64url"===i),o=String.raw`[-_A-Za-z0-9]`),a=n?new RegExp(`^(?:${o}{4})*(?:${o}{3}=|${o}{2}==)?$`,"u"):new RegExp(`^(?:${o}{4})*(?:${o}{2,3}|${o}{3}=|${o}{2}==)?$`,"u"),(0,s.pattern)(e,a)}}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/base64.js"}],[1981,{"./assert":1979,"./hex":1987,buffer:2913},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){(function(t){(function(){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{isBytes:function(){return u},assertIsBytes:function(){return l},bytesToHex:function(){return d},bytesToBigInt:function(){return p},bytesToSignedBigInt:function(){return f},bytesToNumber:function(){return h},bytesToString:function(){return m},hexToBytes:function(){return g},bigIntToBytes:function(){return y},signedBigIntToBytes:function(){return b},numberToBytes:function(){return w},stringToBytes:function(){return _},valueToBytes:function(){return v},concatBytes:function(){return S},createDataView:function(){return k}});const s=e("./assert"),r=e("./hex"),i=48,o=58,a=87;const c=function(){const e=[];return()=>{if(0===e.length)for(let t=0;t<256;t++)e.push(t.toString(16).padStart(2,"0"));return e}}();function u(e){return e instanceof Uint8Array}function l(e){(0,s.assert)(u(e),"Value must be a Uint8Array.")}function d(e){if(l(e),0===e.length)return"0x";const t=c(),n=new Array(e.length);for(let s=0;s<e.length;s++)n[s]=t[e[s]];return(0,r.add0x)(n.join(""))}function p(e){l(e);const t=d(e);return BigInt(t)}function f(e){l(e);let t=BigInt(0);for(const n of e)t=(t<<BigInt(8))+BigInt(n);return BigInt.asIntN(8*e.length,t)}function h(e){l(e);const t=p(e);return(0,s.assert)(t<=BigInt(Number.MAX_SAFE_INTEGER),"Number is not a safe integer. Use `bytesToBigInt` instead."),Number(t)}function m(e){return l(e),(new TextDecoder).decode(e)}function g(e){if("0x"===e?.toLowerCase?.())return new Uint8Array;(0,r.assertIsHexString)(e);const t=(0,r.remove0x)(e).toLowerCase(),n=t.length%2==0?t:`0${t}`,s=new Uint8Array(n.length/2);for(let e=0;e<s.length;e++){const t=n.charCodeAt(2*e),r=n.charCodeAt(2*e+1),c=t-(t<o?i:a),u=r-(r<o?i:a);s[e]=16*c+u}return s}function y(e){(0,s.assert)("bigint"==typeof e,"Value must be a bigint."),(0,s.assert)(e>=BigInt(0),"Value must be a non-negative bigint.");return g(e.toString(16))}function b(e,t){(0,s.assert)("bigint"==typeof e,"Value must be a bigint."),(0,s.assert)("number"==typeof t,"Byte length must be a number."),(0,s.assert)(t>0,"Byte length must be greater than 0."),(0,s.assert)(function(e,t){(0,s.assert)(t>0);const n=e>>BigInt(31);return!((~e&n)+(e&~n)>>BigInt(8*t-1))}(e,t),"Byte length is too small to represent the given value.");let n=e;const r=new Uint8Array(t);for(let e=0;e<r.length;e++)r[e]=Number(BigInt.asUintN(8,n)),n>>=BigInt(8);return r.reverse()}function w(e){(0,s.assert)("number"==typeof e,"Value must be a number."),(0,s.assert)(e>=0,"Value must be a non-negative number."),(0,s.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToBytes` instead.");return g(e.toString(16))}function _(e){return(0,s.assert)("string"==typeof e,"Value must be a string."),(new TextEncoder).encode(e)}function v(e){if("bigint"==typeof e)return y(e);if("number"==typeof e)return w(e);if("string"==typeof e)return e.startsWith("0x")?g(e):_(e);if(u(e))return e;throw new TypeError(`Unsupported value type: "${typeof e}".`)}function S(e){const t=new Array(e.length);let n=0;for(let s=0;s<e.length;s++){const r=v(e[s]);t[s]=r,n+=r.length}const s=new Uint8Array(n);for(let e=0,n=0;e<t.length;e++)s.set(t[e],n),n+=t[e].length;return s}function k(e){if(void 0!==t&&e instanceof t){const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return new DataView(t)}return new DataView(e.buffer,e.byteOffset,e.byteLength)}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/bytes.js"}],[1982,{superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{CAIP_CHAIN_ID_REGEX:function(){return r},CAIP_NAMESPACE_REGEX:function(){return i},CAIP_REFERENCE_REGEX:function(){return o},CAIP_ACCOUNT_ID_REGEX:function(){return a},CAIP_ACCOUNT_ADDRESS_REGEX:function(){return c},CaipChainIdStruct:function(){return u},CaipNamespaceStruct:function(){return l},CaipReferenceStruct:function(){return d},CaipAccountIdStruct:function(){return p},CaipAccountAddressStruct:function(){return f},isCaipChainId:function(){return h},isCaipNamespace:function(){return m},isCaipReference:function(){return g},isCaipAccountId:function(){return y},isCaipAccountAddress:function(){return b},parseCaipChainId:function(){return w},parseCaipAccountId:function(){return _}});const s=e("superstruct"),r=RegExp("^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$","u"),i=/^[-a-z0-9]{3,8}$/u,o=/^[-_a-zA-Z0-9]{1,32}$/u,a=RegExp("^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$","u"),c=/^[-.%a-zA-Z0-9]{1,128}$/u,u=(0,s.pattern)((0,s.string)(),r),l=(0,s.pattern)((0,s.string)(),i),d=(0,s.pattern)((0,s.string)(),o),p=(0,s.pattern)((0,s.string)(),a),f=(0,s.pattern)((0,s.string)(),c);function h(e){return(0,s.is)(e,u)}function m(e){return(0,s.is)(e,l)}function g(e){return(0,s.is)(e,d)}function y(e){return(0,s.is)(e,p)}function b(e){return(0,s.is)(e,f)}function w(e){const t=r.exec(e);if(!t?.groups)throw new Error("Invalid CAIP chain ID.");return{namespace:t.groups.namespace,reference:t.groups.reference}}function _(e){const t=a.exec(e);if(!t?.groups)throw new Error("Invalid CAIP account ID.");return{address:t.groups.accountAddress,chainId:t.groups.chainId,chain:{namespace:t.groups.namespace,reference:t.groups.reference}}}}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/caip-types.js"}],[1983,{"./base64":1980,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"ChecksumStruct",{enumerable:!0,get:function(){return i}});const s=e("superstruct"),r=e("./base64"),i=(0,s.size)((0,r.base64)((0,s.string)(),{paddingRequired:!0}),44,44)}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/checksum.js"}],[1984,{"./assert":1979,"./bytes":1981,"./hex":1987,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{createNumber:function(){return p},createBigInt:function(){return f},createBytes:function(){return h},createHex:function(){return m}});const s=e("superstruct"),r=e("./assert"),i=e("./bytes"),o=e("./hex"),a=(0,s.union)([(0,s.number)(),(0,s.bigint)(),(0,s.string)(),o.StrictHexStruct]),c=(0,s.coerce)((0,s.number)(),a,Number),u=(0,s.coerce)((0,s.bigint)(),a,BigInt),l=((0,s.union)([o.StrictHexStruct,(0,s.instance)(Uint8Array)]),(0,s.coerce)((0,s.instance)(Uint8Array),(0,s.union)([o.StrictHexStruct]),i.hexToBytes)),d=(0,s.coerce)(o.StrictHexStruct,(0,s.instance)(Uint8Array),i.bytesToHex);function p(e){try{const t=(0,s.create)(e,c);return(0,r.assert)(Number.isFinite(t),`Expected a number-like value, got "${e}".`),t}catch(t){if(t instanceof s.StructError)throw new Error(`Expected a number-like value, got "${e}".`);throw t}}function f(e){try{return(0,s.create)(e,u)}catch(e){if(e instanceof s.StructError)throw new Error(`Expected a number-like value, got "${String(e.value)}".`);throw e}}function h(e){if("string"==typeof e&&"0x"===e.toLowerCase())return new Uint8Array;try{return(0,s.create)(e,l)}catch(e){if(e instanceof s.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}}function m(e){if(e instanceof Uint8Array&&0===e.length||"string"==typeof e&&"0x"===e.toLowerCase())return"0x";try{return(0,s.create)(e,d)}catch(e){if(e instanceof s.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}}}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/coercers.js"}],[1985,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){function s(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function r(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,s(e,t,"get"))}function i(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function o(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,s(e,t,"set"),n),n}Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{FrozenMap:function(){return u},FrozenSet:function(){return p}});var a=new WeakMap;let c=Symbol.iterator;class u{get size(){return r(this,a).size}[c](){return r(this,a)[Symbol.iterator]()}entries(){return r(this,a).entries()}forEach(e,t){return r(this,a).forEach(((n,s,r)=>e.call(t,n,s,this)))}get(e){return r(this,a).get(e)}has(e){return r(this,a).has(e)}keys(){return r(this,a).keys()}values(){return r(this,a).values()}toString(){return`FrozenMap(${this.size}) {${this.size>0?` ${[...this.entries()].map((([e,t])=>`${String(e)} => ${String(t)}`)).join(", ")} `:""}}`}constructor(e){i(this,a,{writable:!0,value:void 0}),o(this,a,new Map(e)),Object.freeze(this)}}var l=new WeakMap;let d=Symbol.iterator;class p{get size(){return r(this,l).size}[d](){return r(this,l)[Symbol.iterator]()}entries(){return r(this,l).entries()}forEach(e,t){return r(this,l).forEach(((n,s,r)=>e.call(t,n,s,this)))}has(e){return r(this,l).has(e)}keys(){return r(this,l).keys()}values(){return r(this,l).values()}toString(){return`FrozenSet(${this.size}) {${this.size>0?` ${[...this.values()].map((e=>String(e))).join(", ")} `:""}}`}constructor(e){i(this,l,{writable:!0,value:void 0}),o(this,l,new Set(e)),Object.freeze(this)}}Object.freeze(u),Object.freeze(u.prototype),Object.freeze(p),Object.freeze(p.prototype)}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/collections.js"}],[1986,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0})}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/encryption-types.js"}],[1987,{"./assert":1979,"./bytes":1981,"@noble/hashes/sha3":2126,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{HexStruct:function(){return a},StrictHexStruct:function(){return c},HexAddressStruct:function(){return u},HexChecksumAddressStruct:function(){return l},isHexString:function(){return d},isStrictHexString:function(){return p},assertIsHexString:function(){return f},assertIsStrictHexString:function(){return h},isValidHexAddress:function(){return m},getChecksumAddress:function(){return g},isValidChecksumAddress:function(){return y},add0x:function(){return b},remove0x:function(){return w}});const s=e("@noble/hashes/sha3"),r=e("superstruct"),i=e("./assert"),o=e("./bytes"),a=(0,r.pattern)((0,r.string)(),/^(?:0x)?[0-9a-f]+$/iu),c=(0,r.pattern)((0,r.string)(),/^0x[0-9a-f]+$/iu),u=(0,r.pattern)((0,r.string)(),/^0x[0-9a-f]{40}$/u),l=(0,r.pattern)((0,r.string)(),/^0x[0-9a-fA-F]{40}$/u);function d(e){return(0,r.is)(e,a)}function p(e){return(0,r.is)(e,c)}function f(e){(0,i.assert)(d(e),"Value must be a hexadecimal string.")}function h(e){(0,i.assert)(p(e),'Value must be a hexadecimal string, starting with "0x".')}function m(e){return(0,r.is)(e,u)||y(e)}function g(e){(0,i.assert)((0,r.is)(e,l),"Invalid hex address.");const t=w(e.toLowerCase()),n=w((0,o.bytesToHex)((0,s.keccak_256)(t)));return`0x${t.split("").map(((e,t)=>{const s=n[t];return(0,i.assert)((0,r.is)(s,(0,r.string)()),"Hash shorter than address."),parseInt(s,16)>7?e.toUpperCase():e})).join("")}`}function y(e){return!!(0,r.is)(e,l)&&g(e)===e}function b(e){return e.startsWith("0x")?e:e.startsWith("0X")?`0x${e.substring(2)}`:`0x${e}`}function w(e){return e.startsWith("0x")||e.startsWith("0X")?e.substring(2):e}}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/hex.js"}],[1988,{"./assert":1979,"./base64":1980,"./bytes":1981,"./caip-types":1982,"./checksum":1983,"./coercers":1984,"./collections":1985,"./encryption-types":1986,"./hex":1987,"./json":1989,"./keyring":1990,"./logging":1991,"./misc":1992,"./number":1993,"./opaque":1994,"./time":1995,"./transaction-types":1996,"./versions":1997},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){function s(e,t){return Object.keys(e).forEach((function(n){"default"===n||Object.prototype.hasOwnProperty.call(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[n]}})})),e}Object.defineProperty(n,"__esModule",{value:!0}),s(e("./assert"),n),s(e("./base64"),n),s(e("./bytes"),n),s(e("./caip-types"),n),s(e("./checksum"),n),s(e("./coercers"),n),s(e("./collections"),n),s(e("./encryption-types"),n),s(e("./hex"),n),s(e("./json"),n),s(e("./keyring"),n),s(e("./logging"),n),s(e("./misc"),n),s(e("./number"),n),s(e("./opaque"),n),s(e("./time"),n),s(e("./transaction-types"),n),s(e("./versions"),n)}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/index.js"}],[1989,{"./assert":1979,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{UnsafeJsonStruct:function(){return i},JsonStruct:function(){return o},isValidJson:function(){return a},getSafeJson:function(){return c},getJsonSize:function(){return u},jsonrpc2:function(){return l},JsonRpcVersionStruct:function(){return d},JsonRpcIdStruct:function(){return p},JsonRpcErrorStruct:function(){return f},JsonRpcParamsStruct:function(){return h},JsonRpcRequestStruct:function(){return m},JsonRpcNotificationStruct:function(){return g},isJsonRpcNotification:function(){return y},assertIsJsonRpcNotification:function(){return b},isJsonRpcRequest:function(){return w},assertIsJsonRpcRequest:function(){return _},PendingJsonRpcResponseStruct:function(){return v},JsonRpcSuccessStruct:function(){return S},JsonRpcFailureStruct:function(){return k},JsonRpcResponseStruct:function(){return T},isPendingJsonRpcResponse:function(){return E},assertIsPendingJsonRpcResponse:function(){return x},isJsonRpcResponse:function(){return j},assertIsJsonRpcResponse:function(){return I},isJsonRpcSuccess:function(){return P},assertIsJsonRpcSuccess:function(){return R},isJsonRpcFailure:function(){return A},assertIsJsonRpcFailure:function(){return N},isJsonRpcError:function(){return O},assertIsJsonRpcError:function(){return C},getJsonRpcIdValidator:function(){return B}});const s=e("superstruct"),r=e("./assert"),i=(0,s.union)([(0,s.literal)(null),(0,s.boolean)(),(0,s.define)("finite number",(e=>(0,s.is)(e,(0,s.number)())&&Number.isFinite(e))),(0,s.string)(),(0,s.array)((0,s.lazy)((()=>i))),(0,s.record)((0,s.string)(),(0,s.lazy)((()=>i)))]),o=(0,s.coerce)(i,(0,s.any)(),(e=>((0,r.assertStruct)(e,i),JSON.parse(JSON.stringify(e,((e,t)=>"__proto__"===e||"constructor"===e?undefined:t))))));function a(e){try{return c(e),!0}catch{return!1}}function c(e){return(0,s.create)(e,o)}function u(e){(0,r.assertStruct)(e,o,"Invalid JSON value");const t=JSON.stringify(e);return(new TextEncoder).encode(t).byteLength}const l="2.0",d=(0,s.literal)(l),p=(0,s.nullable)((0,s.union)([(0,s.number)(),(0,s.string)()])),f=(0,s.object)({code:(0,s.integer)(),message:(0,s.string)(),data:(0,s.optional)(o),stack:(0,s.optional)((0,s.string)())}),h=(0,s.union)([(0,s.record)((0,s.string)(),o),(0,s.array)(o)]),m=(0,s.object)({id:p,jsonrpc:d,method:(0,s.string)(),params:(0,s.optional)(h)}),g=(0,s.object)({jsonrpc:d,method:(0,s.string)(),params:(0,s.optional)(h)});function y(e){return(0,s.is)(e,g)}function b(e,t){(0,r.assertStruct)(e,g,"Invalid JSON-RPC notification",t)}function w(e){return(0,s.is)(e,m)}function _(e,t){(0,r.assertStruct)(e,m,"Invalid JSON-RPC request",t)}const v=(0,s.object)({id:p,jsonrpc:d,result:(0,s.optional)((0,s.unknown)()),error:(0,s.optional)(f)}),S=(0,s.object)({id:p,jsonrpc:d,result:o}),k=(0,s.object)({id:p,jsonrpc:d,error:f}),T=(0,s.union)([S,k]);function E(e){return(0,s.is)(e,v)}function x(e,t){(0,r.assertStruct)(e,v,"Invalid pending JSON-RPC response",t)}function j(e){return(0,s.is)(e,T)}function I(e,t){(0,r.assertStruct)(e,T,"Invalid JSON-RPC response",t)}function P(e){return(0,s.is)(e,S)}function R(e,t){(0,r.assertStruct)(e,S,"Invalid JSON-RPC success response",t)}function A(e){return(0,s.is)(e,k)}function N(e,t){(0,r.assertStruct)(e,k,"Invalid JSON-RPC failure response",t)}function O(e){return(0,s.is)(e,f)}function C(e,t){(0,r.assertStruct)(e,f,"Invalid JSON-RPC error",t)}function B(e){const{permitEmptyString:t,permitFractions:n,permitNull:s}={permitEmptyString:!0,permitFractions:!1,permitNull:!0,...e};return e=>Boolean("number"==typeof e&&(n||Number.isInteger(e))||"string"==typeof e&&(t||e.length>0)||s&&null===e)}}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/json.js"}],[1990,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0})}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/keyring.js"}],[1991,{debug:3132},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{createProjectLogger:function(){return i},createModuleLogger:function(){return o}});function s(e){return e&&e.__esModule?e:{default:e}}const r=(0,s(e("debug")).default)("metamask");function i(e){return r.extend(e)}function o(e,t){return e.extend(t)}}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/logging.js"}],[1992,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){function s(e){return Array.isArray(e)&&e.length>0}function r(e){return null===e||e===undefined}function i(e){return Boolean(e)&&"object"==typeof e&&!Array.isArray(e)}Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{JsonSize:function(){return c},isNonEmptyArray:function(){return s},isNullOrUndefined:function(){return r},isObject:function(){return i},hasProperty:function(){return o},getKnownPropertyNames:function(){return a},ESCAPE_CHARACTERS_REGEXP:function(){return u},isPlainObject:function(){return l},isASCII:function(){return d},calculateStringSize:function(){return p},calculateNumberSize:function(){return f}});const o=(e,t)=>Object.hasOwnProperty.call(e,t);function a(e){return Object.getOwnPropertyNames(e)}var c;!function(e){e[e.Null=4]="Null",e[e.Comma=1]="Comma",e[e.Wrapper=1]="Wrapper",e[e.True=4]="True",e[e.False=5]="False",e[e.Quote=1]="Quote",e[e.Colon=1]="Colon",e[e.Date=24]="Date"}(c||(c={}));const u=/"|\\|\n|\r|\t/gu;function l(e){if("object"!=typeof e||null===e)return!1;try{let t=e;for(;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}catch(e){return!1}}function d(e){return e.charCodeAt(0)<=127}function p(e){return e.split("").reduce(((e,t)=>d(t)?e+1:e+2),0)+(e.match(u)??[]).length}function f(e){return e.toString().length}}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/misc.js"}],[1993,{"./assert":1979,"./hex":1987},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{numberToHex:function(){return i},bigIntToHex:function(){return o},hexToNumber:function(){return a},hexToBigInt:function(){return c}});const s=e("./assert"),r=e("./hex"),i=e=>((0,s.assert)("number"==typeof e,"Value must be a number."),(0,s.assert)(e>=0,"Value must be a non-negative number."),(0,s.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToHex` instead."),(0,r.add0x)(e.toString(16))),o=e=>((0,s.assert)("bigint"==typeof e,"Value must be a bigint."),(0,s.assert)(e>=0,"Value must be a non-negative bigint."),(0,r.add0x)(e.toString(16))),a=e=>{(0,r.assertIsHexString)(e);const t=parseInt(e,16);return(0,s.assert)(Number.isSafeInteger(t),"Value is not a safe integer. Use `hexToBigInt` instead."),t},c=e=>((0,r.assertIsHexString)(e),BigInt((0,r.add0x)(e)))}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/number.js"}],[1994,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0})}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/opaque.js"}],[1995,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){var s;Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{Duration:function(){return s},inMilliseconds:function(){return i},timeSince:function(){return o}}),function(e){e[e.Millisecond=1]="Millisecond",e[e.Second=1e3]="Second",e[e.Minute=6e4]="Minute",e[e.Hour=36e5]="Hour",e[e.Day=864e5]="Day",e[e.Week=6048e5]="Week",e[e.Year=31536e6]="Year"}(s||(s={}));const r=(e,t)=>{if(!(e=>Number.isInteger(e)&&e>=0)(e))throw new Error(`"${t}" must be a non-negative integer. Received: "${e}".`)};function i(e,t){return r(e,"count"),e*t}function o(e){return r(e,"timestamp"),Date.now()-e}}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/time.js"}],[1996,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0})}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/transaction-types.js"}],[1997,{"./assert":1979,semver:4561,superstruct:4634},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{VersionStruct:function(){return o},VersionRangeStruct:function(){return a},isValidSemVerVersion:function(){return c},isValidSemVerRange:function(){return u},assertIsSemVerVersion:function(){return l},assertIsSemVerRange:function(){return d},gtVersion:function(){return p},gtRange:function(){return f},satisfiesVersionRange:function(){return h}});const s=e("semver"),r=e("superstruct"),i=e("./assert"),o=(0,r.refine)((0,r.string)(),"Version",(e=>null!==(0,s.valid)(e)||`Expected SemVer version, got "${e}"`)),a=(0,r.refine)((0,r.string)(),"Version range",(e=>null!==(0,s.validRange)(e)||`Expected SemVer range, got "${e}"`));function c(e){return(0,r.is)(e,o)}function u(e){return(0,r.is)(e,a)}function l(e){(0,i.assertStruct)(e,o)}function d(e){(0,i.assertStruct)(e,a)}function p(e,t){return(0,s.gt)(e,t)}function f(e,t){return(0,s.gtr)(e,t)}function h(e,t){return(0,s.satisfies)(e,t,{includePrerelease:!0})}}}},{package:"@metamask/snaps-rpc-methods>@metamask/utils",file:"node_modules/@metamask/snaps-rpc-methods/node_modules/@metamask/utils/dist/cjs/versions.js"}],[1998,{"./nodes":2e3,"@metamask/utils":2011},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),function(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}(n,{copyable:function(){return o},divider:function(){return a},heading:function(){return c},panel:function(){return u},spinner:function(){return l},text:function(){return d},image:function(){return p}});const s=e("@metamask/utils"),r=e("./nodes");function i(e,t,n=[]){return(...r)=>{if(1===r.length&&(0,s.isPlainObject)(r[0])){const n={...r[0],type:e};return(0,s.assertStruct)(n,t,`Invalid ${e} component`),n}const i=n.reduce(((e,t,n)=>r[n]!==undefined?{...e,[t]:r[n]}:e),{type:e});return(0,s.assertStruct)(i,t,`Invalid ${e} component`),i}}const o=i(r.NodeType.Copyable,r.CopyableStruct,["value"]),a=i(r.NodeType.Divider,r.DividerStruct),c=i(r.NodeType.Heading,r.HeadingStruct,["value"]),u=i(r.NodeType.Panel,r.PanelStruct,["children"]),l=i(r.NodeType.Spinner,r.SpinnerStruct),d=i(r.NodeType.Text,r.TextStruct,["value","markdown"]),p=i(r.NodeType.Image,r.ImageStruct,["value"])}}},{package:"@metamask/snaps-ui",file:"node_modules/@metamask/snaps-ui/dist/cjs/builder.js"}],[1999,{"./builder":1998,"./nodes":2e3,"./validation":2001},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){function s(e,t){return Object.keys(e).forEach((function(n){"default"===n||Object.prototype.hasOwnProperty.call(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[n]}})})),e}Object.defineProperty(n,"__esModule",{value:!0}),s(e("./builder"),n),s(e("./nodes"),n),s(e("./validation"),n)}}},{package:"@metamask/snaps-ui",file:"node_modules/@metamask/snaps-ui/dist/cjs/index.js"}],[2,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){t.exports={QRHardwareInvalidTransactionTitle:{message:"Error"},QRHardwareMismatchedSignId:{message:"Incongruent transaction data. Please check the transaction details."},QRHardwarePubkeyAccountOutOfRange:{message:"No more accounts. If you would like to access another account unlisted below, please reconnect your hardware wallet and select it."},QRHardwareScanInstructions:{message:"Place the QR code in front of your camera. The screen is blurred, but it will not affect the reading."},QRHardwareSignRequestCancel:{message:"Reject"},QRHardwareSignRequestDescription:{message:"After you’ve signed with your wallet, click on 'Get Signature' to receive the signature"},QRHardwareSignRequestGetSignature:{message:"Get signature"},QRHardwareSignRequestSubtitle:{message:"Scan the QR code with your wallet"},QRHardwareSignRequestTitle:{message:"Request signature"},QRHardwareUnknownQRCodeTitle:{message:"Error"},QRHardwareUnknownWalletQRCode:{message:"Invalid QR code. Please scan the sync QR code of the hardware wallet."},QRHardwareWalletImporterTitle:{message:"Scan QR code"},QRHardwareWalletSteps1Description:{message:"You can choose from a list of official QR-code supporting partners below."},QRHardwareWalletSteps1Title:{message:"Connect your QR hardware wallet"},QRHardwareWalletSteps2Description:{message:"Ngrave (coming soon)"},SIWEAddressInvalid:{message:"The address in the sign-in request does not match the address of the account you are using to sign in."},SIWEDomainInvalidText:{message:"The site you're attempting to sign into doesn't match the domain in the request. Proceed with caution."},SIWEDomainInvalidTitle:{message:"Deceptive site request."},SIWEDomainWarningBody:{message:"The website ($1) is asking you to sign in to the wrong domain. This may be a phishing attack.",description:"$1 represents the website domain"},SIWEDomainWarningLabel:{message:"Unsafe"},SIWELabelChainID:{message:"Chain ID:"},SIWELabelExpirationTime:{message:"Expires At:"},SIWELabelIssuedAt:{message:"Issued At:"},SIWELabelMessage:{message:"Message:"},SIWELabelNonce:{message:"Nonce:"},SIWELabelNotBefore:{message:"Not Before:"},SIWELabelRequestID:{message:"Request ID:"},SIWELabelResources:{message:"Resources: $1",description:"$1 represents the number of resources"},SIWELabelURI:{message:"URI:"},SIWELabelVersion:{message:"Version:"},SIWESiteRequestSubtitle:{message:"This site is requesting to sign in with"},SIWESiteRequestTitle:{message:"Sign-in request"},SIWEWarningSubtitle:{message:"To confirm you understand, check:"},SIWEWarningTitle:{message:"Are you sure?"},about:{message:"About"},accept:{message:"Accept"},acceptTermsOfUse:{message:"I have read and agree to the $1",description:"$1 is the `terms` message"},accessAndSpendNoticeNFT:{message:"$1 may access and spend this asset",description:"$1 is the url of the site requesting ability to spend"},accessYourWalletWithSRP:{message:"Access your wallet with your Secret Recovery Phrase"},accessYourWalletWithSRPDescription:{message:"MetaMask cannot recover your password. We will use your Secret Recovery Phrase to validate your ownership, restore your wallet and set up a new password. First, enter the Secret Recovery Phrase that you were given when you created your wallet. $1",description:"$1 is the words 'Learn More' from key 'learnMore', separated here so that it can be added as a link"},accessingYourCamera:{message:"Accessing your camera..."},account:{message:"Account"},accountDetails:{message:"Account details"},accountIdenticon:{message:"Account identicon"},accountName:{message:"Account name"},accountNameDuplicate:{message:"This account name already exists",description:"This is an error message shown when the user enters a new account name that matches an existing account name"},accountNameReserved:{message:"This account name is reserved",description:"This is an error message shown when the user enters a new account name that is reserved for future use"},accountOptions:{message:"Account options"},accountSelectionRequired:{message:"You need to select an account!"},accountSnapsFeedback:{message:"Submit feedback on this feature"},accountsConnected:{message:"Accounts connected"},active:{message:"Active"},activity:{message:"Activity"},activityLog:{message:"Activity log"},add:{message:"Add"},addANetwork:{message:"Add a network"},addANetworkManually:{message:"Add a network manually"},addANickname:{message:"Add a nickname"},addAccount:{message:"Add account"},addAccountSnapModalHeader:{message:"Add Account Snap"},addAcquiredTokens:{message:"Add the tokens you've acquired using MetaMask"},addAlias:{message:"Add alias"},addBlockExplorer:{message:"Add a block explorer"},addContact:{message:"Add contact"},addCustomNetwork:{message:"Add custom network"},addEthereumChainConfirmationDescription:{message:"This will allow this network to be used within MetaMask."},addEthereumChainConfirmationRisks:{message:"MetaMask does not verify custom networks."},addEthereumChainConfirmationRisksLearnMore:{message:"Learn about $1.",description:"$1 is a link with text that is provided by the 'addEthereumChainConfirmationRisksLearnMoreLink' key"},addEthereumChainConfirmationRisksLearnMoreLink:{message:"scams and network security risks",description:"Link text for the 'addEthereumChainConfirmationRisksLearnMore' translation key"},addEthereumChainConfirmationTitle:{message:"Allow this site to add a network?"},addEthereumChainWarningModalHeader:{message:"Only add this RPC provider if you’re sure you can trust it. $1",description:"$1 is addEthereumChainWarningModalHeaderPartTwo passed separately so that it can be bolded"},addEthereumChainWarningModalHeaderPartTwo:{message:"Malicious providers may lie about the state of the blockchain and record your network activity."},addEthereumChainWarningModalListHeader:{message:"It's important that your provider is reliable, as it has the power to:"},addEthereumChainWarningModalListPointOne:{message:"See your accounts and IP address, and associate them together"},addEthereumChainWarningModalListPointThree:{message:"Show account balances and other on-chain states"},addEthereumChainWarningModalListPointTwo:{message:"Broadcast your transactions"},addEthereumChainWarningModalTitle:{message:"You are adding a new RPC provider for Ethereum Mainnet"},addFriendsAndAddresses:{message:"Add friends and addresses you trust"},addFromAListOfPopularNetworks:{message:"Add from a list of popular networks or add a network manually. Only interact with the entities you trust."},addHardwareWallet:{message:"Add hardware wallet"},addIPFSGateway:{message:"Add your preferred IPFS gateway"},addImportAccount:{message:"Add account or hardware wallet"},addMemo:{message:"Add memo"},addMoreNetworks:{message:"add more networks manually"},addNetwork:{message:"Add network"},addNetworkTooltipWarning:{message:"This network connection relies on third parties. This connection may be less reliable or enable third-parties to track activity. $1",description:"$1 is Learn more link"},addNewAccount:{message:"Add a new account"},addNewToken:{message:"Add new token"},addNft:{message:"Add NFT"},addNfts:{message:"Add NFTs"},addSnapAccountModalDescription:{message:"Discover options to keep your account secure with MetaMask Snaps"},addSnapAccountToggle:{message:'Enable "Add account Snap (Beta)"'},addSnapAccountsDescription:{message:"Turning on this feature will give you the option to add the new Beta account Snaps right from your account list. If you install an account Snap, remember that it is a third-party service."},addSuggestedNFTs:{message:"Add suggested NFTs"},addSuggestedTokens:{message:"Add suggested tokens"},addToken:{message:"Add token"},addTokenByContractAddress:{message:"Can’t find a token? You can manually add any token by pasting its address. Token contract addresses can be found on $1",description:"$1 is a blockchain explorer for a specific network, e.g. Etherscan for Ethereum"},addingCustomNetwork:{message:"Adding Network"},address:{message:"Address"},addressCopied:{message:"Address copied!"},advanced:{message:"Advanced"},advancedBaseGasFeeToolTip:{message:"When your transaction gets included in the block, any difference between your max base fee and the actual base fee will be refunded. Total amount is calculated as max base fee (in GWEI) * gas limit."},advancedConfiguration:{message:"Advanced configuration"},advancedGasFeeDefaultOptIn:{message:"Save these values as my default for the $1 network.",description:"$1 is the current network name."},advancedGasFeeModalTitle:{message:"Advanced gas fee"},advancedGasPriceTitle:{message:"Gas price"},advancedPriorityFeeToolTip:{message:"Priority fee (aka “miner tip”) goes directly to miners and incentivizes them to prioritize your transaction."},agreeTermsOfUse:{message:"I agree to MetaMask's $1",description:"$1 is the `terms` link"},airgapVault:{message:"AirGap Vault"},alertDisableTooltip:{message:'This can be changed in "Settings > Alerts"'},alertSettingsUnconnectedAccount:{message:"Browsing a website with an unconnected account selected"},alertSettingsUnconnectedAccountDescription:{message:"This alert is shown in the popup when you are browsing a connected web3 site, but the currently selected account is not connected."},alertSettingsWeb3ShimUsage:{message:"When a website tries to use the removed window.web3 API"},alertSettingsWeb3ShimUsageDescription:{message:"This alert is shown in the popup when you are browsing a site that tries to use the removed window.web3 API, and may be broken as a result."},alerts:{message:"Alerts"},allCustodianAccountsConnectedSubtitle:{message:"You have either already connected all your custodian accounts or don’t have any account to connect to MetaMask Institutional."},allCustodianAccountsConnectedTitle:{message:"No accounts available to connect"},allOfYour:{message:"All of your $1",description:"$1 is the symbol or name of the token that the user is approving spending"},allYourNFTsOf:{message:"All of your NFTs from $1",description:"$1 is a link to contract on the block explorer when we're not able to retrieve a erc721 or erc1155 name"},allow:{message:"Allow"},allowExternalExtensionTo:{message:"Allow this external extension to:"},allowMmiToConnectToCustodian:{message:"This will allow MMI to connect to $1 to import your accounts."},allowSpendToken:{message:"Give permission to access your $1?",description:"$1 is the symbol of the token that are requesting to spend"},allowThisSiteTo:{message:"Allow this site to:"},allowThisSnapTo:{message:"Allow this snap to:"},allowWithdrawAndSpend:{message:"Allow $1 to withdraw and spend up to the following amount:",description:"The url of the site that requested permission to 'withdraw and spend'"},amount:{message:"Amount"},appDescription:{message:"An Ethereum Wallet in your Browser",description:"The description of the application"},appName:{message:"MetaMask",description:"The name of the application"},appNameBeta:{message:"MetaMask Beta",description:"The name of the application (Beta)"},appNameFlask:{message:"MetaMask Flask",description:"The name of the application (Flask)"},appNameMmi:{message:"MetaMask Institutional",description:"The name of the application (MMI)"},approve:{message:"Approve spend limit"},approveAllTokensTitle:{message:"Allow access to and transfer of all your $1?",description:"$1 is the symbol of the token for which the user is granting approval"},approveAllTokensTitleWithoutSymbol:{message:"Allow access to and transfer all of your NFTs from $1?",description:"$1 a link to contract on the block explorer when we're not able to retrieve a erc721 or erc1155 name"},approveButtonText:{message:"Approve"},approveSpendingCap:{message:"Approve $1 spending cap",description:"The token symbol that is being approved"},approveTokenDescription:{message:"This allows a third party to access and transfer the following NFTs without further notice until you revoke its access."},approveTokenDescriptionWithoutSymbol:{message:"This allows a third party to access and transfer all of your NFTs from $1 without further notice until you revoke its access.",description:"$1 is a link to contract on the block explorer when we're not able to retrieve a erc721 or erc1155 name"},approveTokenTitle:{message:"Allow access to and transfer of your $1?",description:"$1 is the symbol of the token for which the user is granting approval"},approved:{message:"Approved"},approvedAsset:{message:"Approved asset"},approvedOn:{message:"Approved on $1",description:"$1 is the approval date for a permission"},areYouSure:{message:"Are you sure?"},asset:{message:"Asset"},assetOptions:{message:"Asset options"},attemptSendingAssets:{message:"If you attempt to send assets directly from one network to another, this may result in permanent asset loss. Make sure to use a bridge."},attemptToCancelSwap:{message:"Attempt to cancel swap for ~$1",description:"$1 could be e.g. $2.98, it is a cost for cancelling a Smart Swap"},attemptingConnect:{message:"Attempting to connect to blockchain."},attributions:{message:"Attributions"},authorizedPermissions:{message:"You have authorized the following permissions"},autoDetectTokens:{message:"Autodetect tokens"},autoDetectTokensDescription:{message:"We use third-party APIs to detect and display new tokens sent to your wallet. Turn off if you don’t want the app to automatically pull data from those services. $1",description:"$1 is a link to a support article"},autoLockTimeLimit:{message:"Auto-lock timer (minutes)"},autoLockTimeLimitDescription:{message:"Set the idle time in minutes before MetaMask will become locked."},average:{message:"Average"},awaitingApproval:{message:"Awaiting approval..."},back:{message:"Back"},backup:{message:"Backup"},backupApprovalInfo:{message:"This secret code is required to recover your wallet in case you lose your device, forget your password, have to re-install MetaMask, or want to access your wallet on another device."},backupApprovalNotice:{message:"Backup your Secret Recovery Phrase to keep your wallet and funds secure."},backupKeyringSnapReminder:{message:"Be sure you can access any accounts created by this Snap on your own before removing it"},backupNow:{message:"Backup now"},backupUserData:{message:"Backup your data"},backupUserDataDescription:{message:"You can backup user settings containing preferences and account addresses into a JSON file."},balance:{message:"Balance"},balanceOutdated:{message:"Balance may be outdated"},baseFee:{message:"Base fee"},basic:{message:"Basic"},beCareful:{message:"Be careful"},beta:{message:"Beta"},betaHeaderText:{message:"This is a beta version. Please report bugs $1",description:"$1 represents the word 'here' in a hyperlink"},betaMetamaskInstitutionalVersion:{message:"MetaMask Institutional Beta Version"},betaMetamaskVersion:{message:"MetaMask Beta Version"},betaTerms:{message:"Beta Terms of use"},betaWalletCreationSuccessReminder1:{message:"MetaMask Beta can’t recover your Secret Recovery Phrase."},betaWalletCreationSuccessReminder2:{message:"MetaMask Beta will never ask you for your Secret Recovery Phrase."},blockExplorerAccountAction:{message:"Account",description:"This is used with viewOnEtherscan and viewInExplorer e.g View Account in Explorer"},blockExplorerAssetAction:{message:"Asset",description:"This is used with viewOnEtherscan and viewInExplorer e.g View Asset in Explorer"},blockExplorerSwapAction:{message:"Swap",description:"This is used with viewOnEtherscan e.g View Swap on Etherscan"},blockExplorerUrl:{message:"Block explorer URL"},blockExplorerUrlDefinition:{message:"The URL used as the block explorer for this network."},blockExplorerView:{message:"View account at $1",description:"$1 replaced by URL for custom block explorer"},blockaid:{message:"Blockaid"},blockaidDescriptionApproveFarming:{message:"If you approve this request, a third party known for scams might take all your assets."},blockaidDescriptionBlurFarming:{message:"If you approve this request, someone can steal your assets listed on Blur."},blockaidDescriptionFailed:{message:"Because of an error, this request was not verified by the security provider. Proceed with caution."},blockaidDescriptionMaliciousDomain:{message:"You're interacting with a malicious domain. If you approve this request, you might lose your assets."},blockaidDescriptionMightLoseAssets:{message:"If you approve this request, you might lose your assets."},blockaidDescriptionSeaportFarming:{message:"If you approve this request, someone can steal your assets listed on OpenSea."},blockaidDescriptionTransferFarming:{message:"If you approve this request, a third party known for scams will take all your assets."},blockaidMessage:{message:"Privacy preserving - no data is shared with third parties. Available on Ethereum Mainnet."},blockaidTitleDeceptive:{message:"This is a deceptive request"},blockaidTitleMayNotBeSafe:{message:"Request may not be safe"},blockaidTitleSuspicious:{message:"This is a suspicious request"},blockies:{message:"Blockies"},bridge:{message:"Bridge"},bridgeDescription:{message:"Transfer tokens from different networks"},bridgeDisabled:{message:"Bridge is not available in this network"},browserNotSupported:{message:"Your browser is not supported..."},buildContactList:{message:"Build your contact list"},builtAroundTheWorld:{message:"MetaMask is designed and built around the world."},busy:{message:"Busy"},buy:{message:"Buy"},buyAndSell:{message:"Buy & Sell"},buyAndSellDescription:{message:"Buy crypto or sell your crypto for cash"},buyAndSellDisabled:{message:"Buy & Sell is not available in this network"},buyAsset:{message:"Buy $1",description:"$1 is the ticker symbol of a an asset the user is being prompted to purchase"},buyMoreAsset:{message:"Buy more $1",description:"$1 is the ticker symbol of a an asset the user is being prompted to purchase"},buyNow:{message:"Buy Now"},bytes:{message:"Bytes"},canToggleInSettings:{message:"You can re-enable this notification in Settings > Alerts."},cancel:{message:"Cancel"},cancelEdit:{message:"Cancel edit"},cancelPopoverTitle:{message:"Cancel transaction"},cancelSpeedUp:{message:"cancel or speed up a transaction."},cancelSpeedUpLabel:{message:"This gas fee will $1 the original.",description:"$1 is text 'replace' in bold"},cancelSpeedUpTransactionTooltip:{message:"To $1 a transaction the gas fee must be increased by at least 10% for it to be recognized by the network.",description:"$1 is string 'cancel' or 'speed up'"},cancelled:{message:"Cancelled"},chainId:{message:"Chain ID"},chainIdDefinition:{message:"The chain ID used to sign transactions for this network."},chainIdExistsErrorMsg:{message:"This Chain ID is currently used by the $1 network."},chainListReturnedDifferentTickerSymbol:{message:"The network with chain ID $1 may use a different currency symbol ($2) than the one you have entered. Please verify before continuing.",description:"$1 is the chain id currently entered in the network form and $2 is the return value of nativeCurrency.symbol from chainlist.network"},chooseYourNetwork:{message:"Choose your network"},chooseYourNetworkDescription:{message:"We use Infura as our remote procedure call (RPC) provider to offer the most reliable and private access to Ethereum data we can. You can choose your own RPC, but remember that any RPC will receive your IP address and Ethereum wallet to make transactions. Read our $1 to learn more about how Infura handles data.",description:"$1 is a link to the privacy policy"},chromeRequiredForHardwareWallets:{message:"You need to use MetaMask on Google Chrome in order to connect to your Hardware Wallet."},clear:{message:"Clear"},clearActivity:{message:"Clear activity and nonce data"},clearActivityButton:{message:"Clear activity tab data"},clearActivityDescription:{message:"This resets the account's nonce and erases data from the activity tab in your wallet. Only the current account and network will be affected. Your balances and incoming transactions won't change."},click:{message:"Click"},clickToConnectLedgerViaWebHID:{message:"Click here to connect your Ledger via WebHID",description:"Text that can be clicked to open a browser popup for connecting the ledger device via webhid"},clickToManuallyAdd:{message:"Click here to manually add the tokens."},close:{message:"Close"},coingecko:{message:"CoinGecko"},comboNoOptions:{message:"No options found",description:"Default text shown in the combo field dropdown if no options."},configureSnapPopupDescription:{message:"You're now leaving MetaMask to configure this snap."},configureSnapPopupInstallDescription:{message:"You're now leaving MetaMask to install this snap."},configureSnapPopupInstallTitle:{message:"Install snap"},configureSnapPopupLink:{message:"Click this link to continue:"},configureSnapPopupTitle:{message:"Configure snap"},confirm:{message:"Confirm"},confirmConnectCustodianRedirect:{message:"We will redirect you to $1 upon clicking continue."},confirmConnectCustodianText:{message:"To connect your accounts log into your $1 account and click on the 'connect to MMI' button."},confirmConnectionTitle:{message:"Confirm connection to $1"},confirmPassword:{message:"Confirm password"},confirmRecoveryPhrase:{message:"Confirm Secret Recovery Phrase"},confirmed:{message:"Confirmed"},confusableUnicode:{message:"'$1' is similar to '$2'."},confusableZeroWidthUnicode:{message:"Zero-width character found."},confusingEnsDomain:{message:"We have detected a confusable character in the ENS name. Check the ENS name to avoid a potential scam."},connect:{message:"Connect"},connectAccountOrCreate:{message:"Connect account or create new"},connectCustodialAccountMenu:{message:"Connect Custodial Account"},connectCustodialAccountMsg:{message:"Please choose the custodian you want to connect in order to add or refresh a token."},connectCustodialAccountTitle:{message:"Custodial Accounts"},connectCustodianAccounts:{message:"Connect $1 accounts"},connectManually:{message:"Manually connect to current site"},connectSnap:{message:"Connect $1",description:"$1 is the snap for which a connection is being requested."},connectTo:{message:"Connect to $1",description:"$1 is the name/origin of a web3 site/application that the user can connect to metamask"},connectToAll:{message:"Connect to all your $1",description:"$1 will be replaced by the translation of connectToAllAccounts"},connectToAllAccounts:{message:"accounts",description:"will replace $1 in connectToAll, completing the sentence 'connect to all of your accounts', will be text that shows list of accounts on hover"},connectToMultiple:{message:"Connect to $1",description:"$1 will be replaced by the translation of connectToMultipleNumberOfAccounts"},connectToMultipleNumberOfAccounts:{message:"$1 accounts",description:"$1 is the number of accounts to which the web3 site/application is asking to connect; this will substitute $1 in connectToMultiple"},connectWithMetaMask:{message:"Connect with MetaMask"},connectedAccountsDescriptionPlural:{message:"You have $1 accounts connected to this site.",description:"$1 is the number of accounts"},connectedAccountsDescriptionSingular:{message:"You have 1 account connected to this site."},connectedAccountsEmptyDescription:{message:"MetaMask is not connected to this site. To connect to a web3 site, find and click the connect button."},connectedSites:{message:"Connected sites"},connectedSitesDescription:{message:"$1 is connected to these sites. They can view your account address.",description:"$1 is the account name"},connectedSitesEmptyDescription:{message:"$1 is not connected to any sites.",description:"$1 is the account name"},connectedSnapAndNoAccountDescription:{message:"MetaMask is connected to this site, but no accounts are connected yet"},connecting:{message:"Connecting..."},connectingTo:{message:"Connecting to $1"},connectingToGoerli:{message:"Connecting to Goerli test network"},connectingToLineaGoerli:{message:"Connecting to Linea Goerli test network"},connectingToLineaMainnet:{message:"Connecting to Linea Mainnet"},connectingToMainnet:{message:"Connecting to Ethereum Mainnet"},connectingToSepolia:{message:"Connecting to Sepolia test network"},connectionFailed:{message:"Connection failed"},connectionFailedDescription:{message:"Fetching of $1 failed, check your network and try again.",description:"$1 is the name of the snap being fetched."},connectionRequest:{message:"Connection request"},connections:{message:"Connections"},contactUs:{message:"Contact us"},contacts:{message:"Contacts"},contentFromSnap:{message:"Content from $1",description:"$1 represents the name of the snap"},continue:{message:"Continue"},continueMmiOnboarding:{message:"Continue MetaMask Institutional onboarding"},contract:{message:"Contract"},contractAddress:{message:"Contract address"},contractAddressError:{message:"You are sending tokens to the token's contract address. This may result in the loss of these tokens."},contractDeployment:{message:"Contract deployment"},contractDescription:{message:"To protect yourself against scammers, take a moment to verify third-party details."},contractInteraction:{message:"Contract interaction"},contractNFT:{message:"NFT contract"},contractRequestingAccess:{message:"Third party requesting access"},contractRequestingSignature:{message:"Third party requesting signature"},contractRequestingSpendingCap:{message:"Third party requesting spending cap"},contractTitle:{message:"Third-party details"},contractToken:{message:"Token contract"},convertTokenToNFTDescription:{message:"We've detected that this asset is an NFT. MetaMask now has full native support for NFTs. Would you like to remove it from your token list and add it as an NFT?"},convertTokenToNFTExistDescription:{message:"We’ve detected that this asset has been added as an NFT. Would you like to remove it from your token list?"},coolWallet:{message:"CoolWallet"},copiedExclamation:{message:"Copied."},copyAddress:{message:"Copy address to clipboard"},copyRawTransactionData:{message:"Copy raw transaction data"},copyToClipboard:{message:"Copy to clipboard"},copyTransactionId:{message:"Copy transaction ID"},create:{message:"Create"},createNewWallet:{message:"Create a new wallet"},createPassword:{message:"Create password"},createSnapAccountDescription:{message:"$1 wants to add a new Snap account to your wallet"},createSnapAccountTitle:{message:"Create Snap account"},cryptoCompare:{message:"CryptoCompare"},currencyConversion:{message:"Currency conversion"},currencyRateCheckToggle:{message:"Show balance and token price checker"},currencyRateCheckToggleDescription:{message:"We use $1 and $2 APIs to display your balance and token price. $3",description:"$1 represents Coingecko, $2 represents CryptoCompare and $3 represents Privacy Policy"},currencySymbol:{message:"Currency symbol"},currencySymbolDefinition:{message:"The ticker symbol displayed for this network’s currency."},currentAccountNotConnected:{message:"Your current account is not connected"},currentExtension:{message:"Current extension page"},currentLanguage:{message:"Current language"},currentRpcUrlDeprecated:{message:"The current rpc url for this network has been deprecated."},currentTitle:{message:"Current:"},currentlyUnavailable:{message:"Unavailable on this network"},curveHighGasEstimate:{message:"Aggressive gas estimate graph"},curveLowGasEstimate:{message:"Low gas estimate graph"},curveMediumGasEstimate:{message:"Market gas estimate graph"},custodian:{message:"Custodian"},custodianAccountAddedDesc:{message:"You can now use your accounts in MetaMask Institutional."},custodianAccountAddedTitle:{message:"Selected $1 accounts have been added."},custodianReplaceRefreshTokenChangedFailed:{message:"Please go to $1 and click the 'Connect to MMI' button within their user interface to connect your accounts to MMI again."},custodianReplaceRefreshTokenChangedSubtitle:{message:"You can now use your custodian accounts in MetaMask Institutional."},custodianReplaceRefreshTokenChangedTitle:{message:"Your custodian token has been refreshed"},custodianReplaceRefreshTokenSubtitle:{message:"This is will replace the custodian token for the following address:"},custodianReplaceRefreshTokenTitle:{message:"Replace custodian token"},custodyApiUrl:{message:"$1 API URL"},custodyDeeplinkDescription:{message:"Approve the transaction in the $1 app. Once all required custody approvals have been performed the transaction will complete. Check your $1 app for status."},custodyRefreshTokenModalDescription:{message:"Please go to $1 and click the 'Connect to MMI' button within their user interface to connect your accounts to MMI again."},custodyRefreshTokenModalDescription1:{message:"Your custodian issues a token that authenticates the MetaMask Institutional extension, allowing you to connect your accounts."},custodyRefreshTokenModalDescription2:{message:"This token expires after a certain period for security reasons. This requires you to reconnect to MMI."},custodyRefreshTokenModalSubtitle:{message:"Why am I seeing this?"},custodyRefreshTokenModalTitle:{message:"Your custodian session has expired"},custodySessionExpired:{message:"Custodian session expired."},custodyWrongChain:{message:"This account is not set up for use with $1"},custom:{message:"Advanced"},customContentSearch:{message:"Search for a previously added network"},customGasSettingToolTipMessage:{message:"Use $1 to customize the gas price. This can be confusing if you aren’t familiar. Interact at your own risk.",description:"$1 is key 'advanced' (text: 'Advanced') separated here so that it can be passed in with bold font-weight"},customSpendLimit:{message:"Custom spend limit"},customSpendingCap:{message:"Custom spending cap"},customToken:{message:"Custom token"},customTokenWarningInNonTokenDetectionNetwork:{message:"Token detection is not available on this network yet. Please import token manually and make sure you trust it. Learn about $1"},customTokenWarningInTokenDetectionNetwork:{message:"Before manually importing a token, make sure you trust it. Learn about $1"},customTokenWarningInTokenDetectionNetworkWithTDOFF:{message:"Make sure you trust a token before you import it. Learn how to avoid $1. You can also enable token detection $2."},customerSupport:{message:"customer support"},dappRequestedSpendingCap:{message:"Site requested spending cap"},dappSuggested:{message:"Site suggested"},dappSuggestedGasSettingToolTipMessage:{message:"$1 has suggested this price.",description:"$1 is url for the dapp that has suggested gas settings"},dappSuggestedHigh:{message:"Site suggested"},dappSuggestedHighShortLabel:{message:"Site (high)"},dappSuggestedShortLabel:{message:"Site"},dappSuggestedTooltip:{message:"$1 has recommended this price.",description:"$1 represents the Dapp's origin"},darkTheme:{message:"Dark"},data:{message:"Data"},dataBackupSeemsCorrupt:{message:"Can not restore your data. The file appears to be corrupt."},dataHex:{message:"Hex"},dcent:{message:"D'Cent"},decimal:{message:"Token decimal"},decimalsMustZerotoTen:{message:"Decimals must be at least 0, and not over 36."},decrypt:{message:"Decrypt"},decryptCopy:{message:"Copy encrypted message"},decryptInlineError:{message:"This message cannot be decrypted due to error: $1",description:"$1 is error message"},decryptMessageNotice:{message:"$1 would like to read this message to complete your action",description:"$1 is the web3 site name"},decryptMetamask:{message:"Decrypt message"},decryptRequest:{message:"Decrypt request"},delete:{message:"Delete"},deleteContact:{message:"Delete contact"},deleteNetwork:{message:"Delete network?"},deleteNetworkIntro:{message:"If you delete this network, you will need to add it again to view your assets in this network"},deleteNetworkTitle:{message:"Delete $1 network?",description:"$1 represents the name of the network"},deposit:{message:"Deposit"},deprecatedTestNetworksLink:{message:"Learn more"},deprecatedTestNetworksMsg:{message:"Due to the protocol changes of Ethereum: Rinkeby, Ropsten and Kovan test networks may not work as reliably and will be deprecated soon."},description:{message:"Description"},descriptionFromSnap:{message:"Description from $1",description:"$1 represents the name of the snap"},desktopApp:{message:"Desktop App"},desktopConnectionCriticalErrorDescription:{message:"This error could be intermittent, so try restarting the extension or disable MetaMask Desktop."},desktopConnectionCriticalErrorTitle:{message:"MetaMask had trouble starting"},desktopConnectionLostErrorDescription:{message:"Please make sure you have the desktop app up and running or disable MetaMask Desktop."},desktopConnectionLostErrorTitle:{message:"MetaMask Desktop connection was lost"},desktopDisableButton:{message:"Disable Desktop App"},desktopDisableErrorCTA:{message:"Disable MetaMask Desktop"},desktopEnableButton:{message:"Enable Desktop App"},desktopEnableButtonDescription:{message:"Click to run all background processes in the desktop app."},desktopErrorNavigateSettingsCTA:{message:"Return to Settings Page"},desktopErrorRestartMMCTA:{message:"Restart MetaMask"},desktopNotFoundErrorCTA:{message:"Download MetaMask Desktop"},desktopNotFoundErrorDescription1:{message:"Please make sure you have the desktop app up and running."},desktopNotFoundErrorDescription2:{message:"If you have no desktop app installed, please download it on the MetaMask website."},desktopNotFoundErrorTitle:{message:"MetaMask Desktop was not found"},desktopOpenOrDownloadCTA:{message:"Open MetaMask Desktop"},desktopOutdatedErrorCTA:{message:"Update MetaMask Desktop"},desktopOutdatedErrorDescription:{message:"Your MetaMask desktop app needs to be upgraded."},desktopOutdatedErrorTitle:{message:"MetaMask Desktop is outdated"},desktopOutdatedExtensionErrorCTA:{message:"Update MetaMask Extension"},desktopOutdatedExtensionErrorDescription:{message:"Your MetaMask extension needs to be upgraded."},desktopOutdatedExtensionErrorTitle:{message:"MetaMask Extension is outdated"},desktopPageDescription:{message:"If the pairing is successful, extension will restart and you'll have to re-enter your password."},desktopPageSubTitle:{message:"Open your MetaMask Desktop and type this code"},desktopPageTitle:{message:"Pair with Desktop"},desktopPairedWarningDeepLink:{message:"Go to Settings in MetaMask Desktop"},desktopPairedWarningDescription:{message:"If you want to start a new pairing, please remove the current connection."},desktopPairedWarningTitle:{message:"MM Desktop is already paired"},desktopPairingExpireMessage:{message:"Code expires in $1 seconds"},desktopRouteNotFoundErrorDescription:{message:"desktopRouteNotFoundErrorDescription"},desktopRouteNotFoundErrorTitle:{message:"desktopRouteNotFoundErrorTitle"},desktopUnexpectedErrorCTA:{message:"Return MetaMask Home"},desktopUnexpectedErrorDescription:{message:"Check your MetaMask Desktop to restore connection"},desktopUnexpectedErrorTitle:{message:"Something went wrong..."},details:{message:"Details"},disabledGasOptionToolTipMessage:{message:"“$1” is disabled because it does not meet the minimum of a 10% increase from the original gas fee.",description:"$1 is gas estimate type which can be market or aggressive"},disconnect:{message:"Disconnect"},disconnectAllAccounts:{message:"Disconnect all accounts"},disconnectAllAccountsConfirmationDescription:{message:"Are you sure you want to disconnect? You may lose site functionality."},disconnectPrompt:{message:"Disconnect $1"},disconnectThisAccount:{message:"Disconnect this account"},discoverSnaps:{message:"Discover Snaps",description:"Text that links to the Snaps website. Displayed in a banner on Snaps list page in settings."},dismiss:{message:"Dismiss"},dismissReminderDescriptionField:{message:"Turn this on to dismiss the Secret Recovery Phrase backup reminder message. We highly recommend that you back up your Secret Recovery Phrase to avoid loss of funds"},dismissReminderField:{message:"Dismiss Secret Recovery Phrase backup reminder"},domain:{message:"Domain"},done:{message:"Done"},dontShowThisAgain:{message:"Don't show this again"},downArrow:{message:"down arrow"},downloadGoogleChrome:{message:"Download Google Chrome"},downloadNow:{message:"Download Now"},downloadStateLogs:{message:"Download state logs"},dropped:{message:"Dropped"},edit:{message:"Edit"},editANickname:{message:"Edit nickname"},editAddressNickname:{message:"Edit address nickname"},editCancellationGasFeeModalTitle:{message:"Edit cancellation gas fee"},editContact:{message:"Edit contact"},editGasFeeModalTitle:{message:"Edit gas fee"},editGasLimitOutOfBounds:{message:"Gas limit must be at least $1"},editGasLimitOutOfBoundsV2:{message:"Gas limit must be greater than $1 and less than $2",description:"$1 is the minimum limit for gas and $2 is the maximum limit"},editGasLimitTooltip:{message:"Gas limit is the maximum units of gas you are willing to use. Units of gas are a multiplier to “Max priority fee” and “Max fee”."},editGasMaxBaseFeeGWEIImbalance:{message:"Max base fee cannot be lower than priority fee"},editGasMaxBaseFeeHigh:{message:"Max base fee is higher than necessary"},editGasMaxBaseFeeLow:{message:"Max base fee is low for current network conditions"},editGasMaxFeeHigh:{message:"Max fee is higher than necessary"},editGasMaxFeeLow:{message:"Max fee too low for network conditions"},editGasMaxFeePriorityImbalance:{message:"Max fee cannot be lower than max priority fee"},editGasMaxPriorityFeeBelowMinimum:{message:"Max priority fee must be greater than 0 GWEI"},editGasMaxPriorityFeeBelowMinimumV2:{message:"Priority fee must be greater than 0."},editGasMaxPriorityFeeHigh:{message:"Max priority fee is higher than necessary. You may pay more than needed."},editGasMaxPriorityFeeHighV2:{message:"Priority fee is higher than necessary. You may pay more than needed"},editGasMaxPriorityFeeLow:{message:"Max priority fee is low for current network conditions"},editGasMaxPriorityFeeLowV2:{message:"Priority fee is low for current network conditions"},editGasPriceTooLow:{message:"Gas price must be greater than 0"},editGasPriceTooltip:{message:"This network requires a “Gas price” field when submitting a transaction. Gas price is the amount you will pay pay per unit of gas."},editGasSubTextAmountLabel:{message:"Max amount:",description:"This is meant to be used as the $1 substitution editGasSubTextAmount"},editGasSubTextFeeLabel:{message:"Max fee:"},editGasTitle:{message:"Edit priority"},editGasTooLow:{message:"Unknown processing time"},editNonceField:{message:"Edit nonce"},editNonceMessage:{message:"This is an advanced feature, use cautiously."},editPermission:{message:"Edit permission"},editSpeedUpEditGasFeeModalTitle:{message:"Edit speed up gas fee"},enableAutoDetect:{message:" Enable autodetect"},enableFromSettings:{message:" Enable it from Settings."},enableOpenSeaAPI:{message:"Enable OpenSea API"},enableOpenSeaAPIDescription:{message:"Use OpenSea's API to fetch NFT data. NFT auto-detection relies on OpenSea's API, and will not be available when this is turned off."},enableSmartSwaps:{message:"Enable smart swaps"},enableSnap:{message:"Enable"},enableToken:{message:"enable $1",description:"$1 is a token symbol, e.g. ETH"},enabled:{message:"Enabled"},encryptionPublicKeyNotice:{message:"$1 would like your public encryption key. By consenting, this site will be able to compose encrypted messages to you.",description:"$1 is the web3 site name"},encryptionPublicKeyRequest:{message:"Request encryption public key"},endpointReturnedDifferentChainId:{message:"The RPC URL you have entered returned a different chain ID ($1). Please update the Chain ID to match the RPC URL of the network you are trying to add.",description:"$1 is the return value of eth_chainId from an RPC endpoint"},enhancedTokenDetectionAlertMessage:{message:"Enhanced token detection is currently available on $1. $2"},ensDomainsSettingDescriptionIntroduction:{message:"MetaMask lets you see ENS domains right in your browser's address bar. Here's how it works:"},ensDomainsSettingDescriptionOutroduction:{message:"Keep in mind that using this feature exposes your IP address to IPFS third-party services."},ensDomainsSettingDescriptionPart1:{message:"MetaMask checks with Ethereum's ENS contract to find the code connected to the ENS name."},ensDomainsSettingDescriptionPart2:{message:"If the code links to IPFS, you can see the content associated with it (usually a website)."},ensDomainsSettingTitle:{message:"Show ENS domains in address bar"},ensIllegalCharacter:{message:"Illegal character for ENS."},ensNotFoundOnCurrentNetwork:{message:"ENS name not found on the current network. Try switching to Ethereum Mainnet."},ensNotSupportedOnNetwork:{message:"Network does not support ENS"},ensRegistrationError:{message:"Error in ENS name registration"},ensUnknownError:{message:"ENS lookup failed."},enterANumber:{message:"Enter a number"},enterCustodianToken:{message:"Enter your $1 token or add a new token"},enterMaxSpendLimit:{message:"Enter max spend limit"},enterOptionalPassword:{message:"Enter optional password"},enterPasswordContinue:{message:"Enter password to continue"},enterTokenNameOrAddress:{message:"Enter token name or paste address"},enterYourPassword:{message:"Enter your password"},errorCode:{message:"Code: $1",description:"Displayed error code for debugging purposes. $1 is the error code"},errorDetails:{message:"Error details",description:"Title for collapsible section that displays error details for debugging purposes"},errorMessage:{message:"Message: $1",description:"Displayed error message for debugging purposes. $1 is the error message"},errorName:{message:"Code: $1",description:"Displayed error name for debugging purposes. $1 is the error name"},errorPageMessage:{message:"Try again by reloading the page, or contact support $1.",description:"Message displayed on generic error page in the fullscreen or notification UI, $1 is a clickable link with text defined by the 'here' key. The link will open to a form where users can file support tickets."},errorPagePopupMessage:{message:"Try again by closing and reopening the popup, or contact support $1.",description:"Message displayed on generic error page in the popup UI, $1 is a clickable link with text defined by the 'here' key. The link will open to a form where users can file support tickets."},errorPageTitle:{message:"MetaMask encountered an error",description:"Title of generic error page"},errorStack:{message:"Stack:",description:"Title for error stack, which is displayed for debugging purposes"},errorWhileConnectingToRPC:{message:"Error while connecting to the custom network."},errorWithSnap:{message:"Error with $1",description:"$1 represents the name of the snap"},ethGasPriceFetchWarning:{message:"Backup gas price is provided as the main gas estimation service is unavailable right now."},ethereumProviderAccess:{message:"Grant Ethereum provider access to $1",description:"The parameter is the name of the requesting origin"},ethereumPublicAddress:{message:"Ethereum public address"},etherscan:{message:"Etherscan"},etherscanView:{message:"View account on Etherscan"},etherscanViewOn:{message:"View on Etherscan"},expandView:{message:"Expand view"},experimental:{message:"Experimental"},extendWalletWithSnaps:{message:"Explore community-built Snaps to customize your web3 experience",description:"Banner description displayed on Snaps list page in Settings when less than 6 Snaps is installed."},extensionInsallCompleteDescription:{message:"Return to the MetaMask Institutional product onboarding to connect your custodial or self-custodial accounts."},extensionInsallCompleteTitle:{message:"Extension install complete"},externalExtension:{message:"External extension"},externalNameSourcesSetting:{message:"Suggest address names"},externalNameSourcesSettingDescription:{message:"We pull data from third parties like Etherscan, Infura, and Lens Protocol, to suggest names for addresses on signatures requests. Turning on name suggestions exposes your IP address to these third parties."},failed:{message:"Failed"},failedToFetchChainId:{message:"Could not fetch chain ID. Is your RPC URL correct?"},failedToFetchTickerSymbolData:{message:"Ticker symbol verification data is currently unavailable, make sure that the symbol you have entered is correct. It will impact the conversion rates that you see for this network"},failureMessage:{message:"Something went wrong, and we were unable to complete the action"},fast:{message:"Fast"},feeAssociatedRequest:{message:"A fee is associated with this request."},fiat:{message:"Fiat",description:"Exchange type"},fileImportFail:{message:"File import not working? Click here!",description:"Helps user import their account from a JSON file"},flaskWelcomeUninstall:{message:"you should uninstall this extension",description:"This request is shown on the Flask Welcome screen. It is intended for non-developers, and will be bolded."},flaskWelcomeWarning1:{message:"Flask is for developers to experiment with new unstable APIs. Unless you are a developer or beta tester, $1.",description:"This is a warning shown on the Flask Welcome screen, intended to encourage non-developers not to proceed any further. $1 is the bolded message 'flaskWelcomeUninstall'"},flaskWelcomeWarning2:{message:"We do not guarantee the safety or stability of this extension. The new APIs offered by Flask are not hardened against phishing attacks, meaning that any site or snap that requires Flask might be a malicious attempt to steal your assets.",description:"This explains the risks of using MetaMask Flask"},flaskWelcomeWarning3:{message:"All Flask APIs are experimental. They may be changed or removed without notice, or they might stay on Flask indefinitely without ever being migrated to stable MetaMask. Use them at your own risk.",description:"This message warns developers about unstable Flask APIs"},flaskWelcomeWarning4:{message:"Make sure to disable your regular MetaMask extension when using Flask.",description:"This message calls to pay attention about multiple versions of MetaMask running on the same site (Flask + Prod)"},flaskWelcomeWarningAcceptButton:{message:"I accept the risks",description:"this text is shown on a button, which the user presses to confirm they understand the risks of using Flask"},followUsOnTwitter:{message:"Follow us on Twitter"},forbiddenIpfsGateway:{message:"Forbidden IPFS Gateway: Please specify a CID gateway"},forgetDevice:{message:"Forget this device"},forgotPassword:{message:"Forgot password?"},from:{message:"From"},fromAddress:{message:"From: $1",description:"$1 is the address to include in the From label. It is typically shortened first using shortenAddress"},fromTokenLists:{message:"From token lists: $1"},functionApprove:{message:"Function: Approve"},functionSetApprovalForAll:{message:"Function: SetApprovalForAll"},functionType:{message:"Function type"},gas:{message:"Gas"},gasDisplayAcknowledgeDappButtonText:{message:"Edit suggested gas fee"},gasDisplayDappWarning:{message:"This gas fee has been suggested by $1. Overriding this may cause a problem with your transaction. Please reach out to $1 if you have questions.",description:"$1 represents the Dapp's origin"},gasLimit:{message:"Gas limit"},gasLimitInfoTooltipContent:{message:"Gas limit is the maximum amount of units of gas you are willing to spend."},gasLimitRecommended:{message:"Recommended gas limit is $1. If the gas limit is less than that, it may fail."},gasLimitTooLow:{message:"Gas limit must be at least 21000"},gasLimitTooLowWithDynamicFee:{message:"Gas limit must be at least $1",description:"$1 is the custom gas limit, in decimal."},gasLimitV2:{message:"Gas limit"},gasOption:{message:"Gas option"},gasPrice:{message:"Gas price (GWEI)"},gasPriceExcessive:{message:"Your gas fee is set unnecessarily high. Consider lowering the amount."},gasPriceExcessiveInput:{message:"Gas price is excessive"},gasPriceExtremelyLow:{message:"Gas price extremely low"},gasPriceFetchFailed:{message:"Gas price estimation failed due to network error."},gasPriceInfoTooltipContent:{message:"Gas price specifies the amount of Ether you are willing to pay for each unit of gas."},gasTimingHoursShort:{message:"$1 hrs",description:"$1 represents a number of hours"},gasTimingMinutes:{message:"$1 minutes",description:"$1 represents a number of minutes"},gasTimingMinutesShort:{message:"$1 min",description:"$1 represents a number of minutes"},gasTimingNegative:{message:"Maybe in $1",description:"$1 represents an amount of time"},gasTimingPositive:{message:"Likely in < $1",description:"$1 represents an amount of time"},gasTimingSeconds:{message:"$1 seconds",description:"$1 represents a number of seconds"},gasTimingSecondsShort:{message:"$1 sec",description:"$1 represents a number of seconds"},gasTimingVeryPositive:{message:"Very likely in < $1",description:"$1 represents an amount of time"},gasUsed:{message:"Gas used"},general:{message:"General"},getStarted:{message:"Get started"},globalTitle:{message:"Global menu"},globalTourDescription:{message:"See your portfolio, connected sites, settings, and more"},goBack:{message:"Go back"},goToSite:{message:"Go to site"},goerli:{message:"Goerli test network"},gotIt:{message:"Got it!"},grantedToWithColon:{message:"Granted to:"},gwei:{message:"GWEI"},hardware:{message:"Hardware"},hardwareWalletConnected:{message:"Hardware wallet connected"},hardwareWalletLegacyDescription:{message:"(legacy)",description:"Text representing the MEW path"},hardwareWalletSupportLinkConversion:{message:"click here"},hardwareWallets:{message:"Connect a hardware wallet"},hardwareWalletsInfo:{message:"Hardware wallet integrations use API calls to external servers, which can see your IP address and the smart contract addresses you interact with."},hardwareWalletsMsg:{message:"Select a hardware wallet you would like to use with MetaMask."},here:{message:"here",description:"as in -click here- for more information (goes with troubleTokenBalances)"},hexData:{message:"Hex data"},hide:{message:"Hide"},hideFullTransactionDetails:{message:"Hide full transaction details"},hideSeedPhrase:{message:"Hide seed phrase"},hideToken:{message:"Hide token"},hideTokenPrompt:{message:"Hide token?"},hideTokenSymbol:{message:"Hide $1",description:"$1 is the symbol for a token (e.g. 'DAI')"},hideZeroBalanceTokens:{message:"Hide tokens without balance"},high:{message:"Aggressive"},highGasSettingToolTipMessage:{message:"High probability, even in volatile markets. Use $1 to cover surges in network traffic due to things like popular NFT drops.",description:"$1 is key 'high' (text: 'Aggressive') separated here so that it can be passed in with bold font-weight"},highLowercase:{message:"high"},history:{message:"History"},holdToRevealContent1:{message:"Your Secret Recovery Phrase provides $1",description:"$1 is a bolded text with the message from 'holdToRevealContent2'"},holdToRevealContent2:{message:"full access to your wallet and funds.",description:"Is the bolded text in 'holdToRevealContent1'"},holdToRevealContent3:{message:"Do not share this with anyone. $1 $2",description:"$1 is a message from 'holdToRevealContent4' and $2 is a text link with the message from 'holdToRevealContent5'"},holdToRevealContent4:{message:"MetaMask Support will not request this,",description:"Part of 'holdToRevealContent3'"},holdToRevealContent5:{message:"but phishers might.",description:"The text link in 'holdToRevealContent3'"},holdToRevealContentPrivateKey1:{message:"Your Private Key provides $1",description:"$1 is a bolded text with the message from 'holdToRevealContentPrivateKey2'"},holdToRevealContentPrivateKey2:{message:"full access to your wallet and funds.",description:"Is the bolded text in 'holdToRevealContentPrivateKey2'"},holdToRevealLockedLabel:{message:"hold to reveal circle locked"},holdToRevealPrivateKey:{message:"Hold to reveal Private Key"},holdToRevealPrivateKeyTitle:{message:"Keep your private key safe"},holdToRevealSRP:{message:"Hold to reveal SRP"},holdToRevealSRPTitle:{message:"Keep your SRP safe"},holdToRevealUnlockedLabel:{message:"hold to reveal circle unlocked"},id:{message:"Id"},ignoreAll:{message:"Ignore all"},ignoreTokenWarning:{message:"If you hide tokens, they will not be shown in your wallet. However, you can still add them by searching for them."},import:{message:"Import",description:"Button to import an account from a selected file"},importAccount:{message:"Import account"},importAccountError:{message:"Error importing account."},importAccountErrorIsSRP:{message:"You have entered a Secret Recovery Phrase (or mnemonic). To import an account here, you have to enter a private key, which is a hexadecimal string of length 64."},importAccountErrorNotAValidPrivateKey:{message:"This is not a valid private key. You have entered a hexadecimal string, but it must be 64 characters long."},importAccountErrorNotHexadecimal:{message:"This is not a valid private key. You must enter a hexadecimal string of length 64."},importAccountJsonLoading1:{message:"Expect this JSON import to take a few minutes and freeze MetaMask."},importAccountJsonLoading2:{message:"We apologize, and we will make it faster in the future."},importAccountMsg:{message:"Imported accounts won’t be associated with your MetaMask Secret Recovery Phrase. Learn more about imported accounts"},importMyWallet:{message:"Import my wallet"},importNFT:{message:"Import NFT"},importNFTAddressToolTip:{message:"On OpenSea, for example, on the NFT's page under Details, there is a blue hyperlinked value labeled 'Contract Address'. If you click on this, it will take you to the contract's address on Etherscan; at the top-left of that page, there should be an icon labeled 'Contract', and to the right, a long string of letters and numbers. This is the address of the contract that created your NFT. Click on the 'copy' icon to the right of the address, and you'll have it on your clipboard."},importNFTPage:{message:"Import NFT page"},importNFTTokenIdToolTip:{message:"An NFT's ID is a unique identifier since no two NFTs are alike. Again, on OpenSea this number is under 'Details'. Make a note of it, or copy it onto your clipboard."},importSelectedTokens:{message:"Import selected tokens?"},importSelectedTokensDescription:{message:"Only the tokens you've selected will appear in your wallet. You can always import hidden tokens later by searching for them."},importTokenQuestion:{message:"Import token?"},importTokenWarning:{message:"Anyone can create a token with any name, including fake versions of existing tokens. Add and trade at your own risk!"},importTokensCamelCase:{message:"Import tokens"},importWithCount:{message:"Import $1",description:"$1 will the number of detected tokens that are selected for importing, if all of them are selected then $1 will be all"},imported:{message:"Imported",description:"status showing that an account has been fully loaded into the keyring"},inYourSettings:{message:"in your Settings"},infuraBlockedNotification:{message:"MetaMask is unable to connect to the blockchain host. Review possible reasons $1.",description:"$1 is a clickable link with with text defined by the 'here' key"},initialTransactionConfirmed:{message:"Your initial transaction was confirmed by the network. Click OK to go back."},inputLogicEmptyState:{message:"Only enter a number that you're comfortable with the third party spending now or in the future. You can always increase the spending cap later."},inputLogicEqualOrSmallerNumber:{message:"This allows the third party to spend $1 from your current balance.",description:"$1 is the current token balance in the account and the name of the current token"},inputLogicHigherNumber:{message:"This allows the third party to spend all your token balance until it reaches the cap or you revoke the spending cap. If this is not intended, consider setting a lower spending cap."},insightsFromSnap:{message:"Insights from $1",description:"$1 represents the name of the snap"},install:{message:"Install"},installExtension:{message:"Install extension"},installExtensionDescription:{message:"The institution-compliant version of the world's leading web3 wallet, MetaMask."},installOrigin:{message:"Install origin"},installRequest:{message:"Installation request"},installedOn:{message:"Installed on $1",description:"$1 is the date when the snap has been installed"},insufficientBalance:{message:"Insufficient balance."},insufficientCurrencyBuyOrDeposit:{message:"You do not have enough $1 in your account to pay for transaction fees on $2 network. $3 or deposit from another account.",description:"$1 is the native currency of the network, $2 is the name of the current network, $3 is the key 'buy' + the ticker symbol of the native currency of the chain wrapped in a button"},insufficientCurrencyBuyOrReceive:{message:"You do not have enough $1 in your account to pay for transaction fees on $2 network. $3 or $4 from another account.",description:"$1 is the native currency of the network, $2 is the name of the current network, $3 is the key 'buy' + the ticker symbol of the native currency of the chain wrapped in a button, $4 is the key 'deposit' button"},insufficientCurrencyDeposit:{message:"You do not have enough $1 in your account to pay for transaction fees on $2 network. Deposit $1 from another account.",description:"$1 is the native currency of the network, $2 is the name of the current network"},insufficientFunds:{message:"Insufficient funds."},insufficientFundsForGas:{message:"Insufficient funds for gas"},insufficientTokens:{message:"Insufficient tokens."},invalidAddress:{message:"Invalid address"},invalidAddressRecipient:{message:"Recipient address is invalid"},invalidAddressRecipientNotEthNetwork:{message:"Not ETH network, set to lowercase"},invalidAssetType:{message:"This asset is an NFT and needs to be re-added on the Import NFTs page found under the NFTs tab"},invalidBlockExplorerURL:{message:"Invalid block explorer URL"},invalidChainIdTooBig:{message:"Invalid chain ID. The chain ID is too big."},invalidCustomNetworkAlertContent1:{message:"The chain ID for custom network '$1' has to be re-entered.",description:"$1 is the name/identifier of the network."},invalidCustomNetworkAlertContent2:{message:"To protect you from malicious or faulty network providers, chain IDs are now required for all custom networks."},invalidCustomNetworkAlertContent3:{message:"Go to Settings > Network and enter the chain ID. You can find the chain IDs of most popular networks on $1.",description:"$1 is a link to https://chainid.network"},invalidCustomNetworkAlertTitle:{message:"Invalid custom network"},invalidHexNumber:{message:"Invalid hexadecimal number."},invalidHexNumberLeadingZeros:{message:"Invalid hexadecimal number. Remove any leading zeros."},invalidIpfsGateway:{message:"Invalid IPFS Gateway: The value must be a valid URL"},invalidNumber:{message:"Invalid number. Enter a decimal or '0x'-prefixed hexadecimal number."},invalidNumberLeadingZeros:{message:"Invalid number. Remove any leading zeros."},invalidRPC:{message:"Invalid RPC URL"},invalidSeedPhrase:{message:"Invalid Secret Recovery Phrase"},invalidSeedPhraseCaseSensitive:{message:"Invalid input! Secret Recovery Phrase is case sensitive."},ipfsGateway:{message:"IPFS gateway"},ipfsGatewayDescription:{message:"MetaMask uses third-party services to show images of your NFTs stored on IPFS, display information related to ENS addresses entered in your browser's address bar, and fetch icons for different tokens. Your IP address may be exposed to these services when you’re using them."},ipfsToggleModalDescriptionOne:{message:"We use third-party services to show images of your NFTs stored on IPFS, display information related to ENS addresses entered in your browser's address bar, and fetch icons for different tokens. Your IP address may be exposed to these services when you’re using them."},ipfsToggleModalDescriptionTwo:{message:"Selecting Confirm turns on IPFS resolution. You can turn it off in $1 at any time.",description:"$1 is the method to turn off ipfs"},ipfsToggleModalSettings:{message:"Settings > Security and privacy"},jazzAndBlockies:{message:"Jazzicons and Blockies are two different styles of unique icons that help you identify an account at a glance."},jazzicons:{message:"Jazzicons"},jsDeliver:{message:"jsDeliver"},jsonFile:{message:"JSON File",description:"format for importing an account"},keyringAccountName:{message:"Account name"},keyringAccountPublicAddress:{message:"Public Address"},keyringSnapRemovalResult1:{message:"$1 $2removed",description:"Displays the result after removal of a keyring snap. $1 is the snap name, $2 is whether it is successful or not"},keyringSnapRemovalResultNotSuccessful:{message:"not ",description:"Displays the `not` word in $2."},keyringSnapRemoveConfirmation:{message:"Type $1 to confirm you want to remove this snap:",description:"Asks user to input the name nap prior to deleting the snap. $1 is the snap name"},keystone:{message:"Keystone"},knownAddressRecipient:{message:"Known contract address."},knownTokenWarning:{message:"This action will edit tokens that are already listed in your wallet, which can be used to phish you. Only approve if you are certain that you mean to change what these tokens represent. Learn more about $1"},lastConnected:{message:"Last connected"},lastPriceSold:{message:"Last price sold"},lastSold:{message:"Last sold"},layer1Fees:{message:"Layer 1 fees"},learnCancelSpeeedup:{message:"Learn how to $1",description:"$1 is link to cancel or speed up transactions"},learnMore:{message:"learn more"},learnMoreAboutGas:{message:"Want to $1 about gas?",description:"$1 will be replaced by the learnMore translation key"},learnMoreKeystone:{message:"Learn More"},learnMoreUpperCase:{message:"Learn more"},learnScamRisk:{message:"scams and security risks."},ledgerAccountRestriction:{message:"You need to make use your last account before you can add a new one."},ledgerConnectionInstructionCloseOtherApps:{message:"Close any other software connected to your device and then click here to refresh."},ledgerConnectionInstructionHeader:{message:"Prior to clicking confirm:"},ledgerConnectionInstructionStepFour:{message:'Enable "smart contract data" or "blind signing" on your Ledger device.'},ledgerConnectionInstructionStepOne:{message:"Enable Use Ledger Live under Settings > Advanced."},ledgerConnectionInstructionStepThree:{message:"Be sure your Ledger is plugged in and to select the Ethereum app."},ledgerConnectionInstructionStepTwo:{message:"Open and unlock Ledger Live App."},ledgerConnectionPreferenceDescription:{message:"Customize how you connect your Ledger to MetaMask. $1 is recommended, but other options are available. Read more here: $2",description:"A description that appears above a dropdown where users can select between up to three options - Ledger Live, U2F or WebHID - depending on what is supported in their browser. $1 is the recommended browser option, it will be either WebHID or U2f. $2 is a link to an article where users can learn more, but will be the translation of the learnMore message."},ledgerDeviceOpenFailureMessage:{message:"The Ledger device failed to open. Your Ledger might be connected to other software. Please close Ledger Live or other applications connected to your Ledger device, and try to connect again."},ledgerLive:{message:"Ledger Live",description:"The name of a desktop app that can be used with your ledger device. We can also use it to connect a users Ledger device to MetaMask."},ledgerLiveApp:{message:"Ledger Live App"},ledgerLocked:{message:"Cannot connect to Ledger device. Please make sure your device is unlocked and Ethereum app is opened."},ledgerTimeout:{message:"Ledger Live is taking too long to respond or connection timeout. Make sure Ledger Live app is opened and your device is unlocked."},ledgerTransportChangeWarning:{message:"If your Ledger Live app is open, please disconnect any open Ledger Live connection and close the Ledger Live app."},ledgerWebHIDNotConnectedErrorMessage:{message:"The ledger device was not connected. If you wish to connect your Ledger, please click 'Continue' again and approve HID connection",description:"An error message shown to the user during the hardware connect flow."},levelArrow:{message:"level arrow"},lightTheme:{message:"Light"},likeToImportTokens:{message:"Would you like to import these tokens?"},lineaGoerli:{message:"Linea Goerli test network"},lineaMainnet:{message:"Linea Mainnet"},link:{message:"Link"},links:{message:"Links"},loadMore:{message:"Load more"},loading:{message:"Loading..."},loadingNFTs:{message:"Loading NFTs..."},loadingScreenHardwareWalletMessage:{message:"Please complete the transaction on the hardware wallet."},loadingScreenSnapMessage:{message:"Please complete the transaction on the Snap."},loadingTokens:{message:"Loading tokens..."},localhost:{message:"Localhost 8545"},lock:{message:"Lock"},lockMetaMask:{message:"Lock MetaMask"},lockTimeInvalid:{message:"Lock time must be a number between 0 and 10080"},logo:{message:"$1 logo",description:"$1 is the name of the ticker"},low:{message:"Low"},lowGasSettingToolTipMessage:{message:"Use $1 to wait for a cheaper price. Time estimates are much less accurate as prices are somewhat unpredictable.",description:"$1 is key 'low' separated here so that it can be passed in with bold font-weight"},lowLowercase:{message:"low"},lowPriorityMessage:{message:"Future transactions will queue after this one."},mainnet:{message:"Ethereum Mainnet"},mainnetToken:{message:"This address matches a known Ethereum Mainnet token address. Recheck the contract address and network for the token you are trying to add."},makeAnotherSwap:{message:"Create a new swap"},makeSureNoOneWatching:{message:"Make sure nobody is looking",description:"Warning to users to be care while creating and saving their new Secret Recovery Phrase"},malformedData:{message:"Malformed data"},max:{message:"Max"},maxBaseFee:{message:"Max base fee"},maxFee:{message:"Max fee"},maxPriorityFee:{message:"Max priority fee"},medium:{message:"Market"},mediumGasSettingToolTipMessage:{message:"Use $1 for fast processing at current market price.",description:"$1 is key 'medium' (text: 'Market') separated here so that it can be passed in with bold font-weight"},memo:{message:"memo"},message:{message:"Message"},metaMaskConnectStatusParagraphOne:{message:"You now have more control over your account connections in MetaMask."},metaMaskConnectStatusParagraphThree:{message:"Click it to manage your connected accounts."},metaMaskConnectStatusParagraphTwo:{message:"The connection status button shows if the website you’re visiting is connected to your currently selected account."},metamaskInstitutionalVersion:{message:"MetaMask Institutional Version"},metamaskSwapsOfflineDescription:{message:"MetaMask Swaps is undergoing maintenance. Please check back later."},metamaskVersion:{message:"MetaMask Version"},metrics:{message:"Metrics"},mismatchAccount:{message:"Your selected account ($1) is different than the account trying to sign ($2)"},mismatchedChainLinkText:{message:"verify the network details",description:"Serves as link text for the 'mismatchedChain' key. This text will be embedded inside the translation for that key."},mismatchedChainRecommendation:{message:"We recommend that you $1 before proceeding.",description:"$1 is a clickable link with text defined by the 'mismatchedChainLinkText' key. The link will open to instructions for users to validate custom network details."},mismatchedNetworkName:{message:"According to our record the network name may not correctly match this chain ID."},mismatchedNetworkSymbol:{message:"The submitted currency symbol does not match what we expect for this chain ID."},mismatchedRpcChainId:{message:"Chain ID returned by the custom network does not match the submitted chain ID."},mismatchedRpcUrl:{message:"According to our records the submitted RPC URL value does not match a known provider for this chain ID."},missingSetting:{message:"Can't find a setting?"},missingSettingRequest:{message:"Request here"},mmiBuiltAroundTheWorld:{message:"MetaMask Institutional is designed and built around the world."},mmiNewNFTDetectedInNFTsTabMessage:{message:"Let MetaMask Institutional automatically detect and display NFTs in your wallet."},mmiPasswordSetupDetails:{message:"This password will unlock your MetaMask Institutional extension only."},more:{message:"more"},multipleSnapConnectionWarning:{message:"$1 wants to connect with $2 snaps. Only proceed if you trust this website.",description:"$1 is the dapp and $2 is the number of snaps it wants to connect to."},mustSelectOne:{message:"Must select at least 1 token."},name:{message:"Name"},nameAddressLabel:{message:"Address",description:"Label above address field in name component modal."},nameInstructionsNew:{message:"You are interacting with an unknown contract address. If you trust this author, set a personal display name to identify it going forward.",description:"Instruction text in name component modal when value is not recognised."},nameInstructionsSaved:{message:"Interactions with this address will always be identified using this personal display name.",description:"Instruction text in name component modal when value is saved."},nameLabel:{message:"Display name",description:"Label above name input field in name component modal."},nameModalTitleNew:{message:"Unknown address",description:"Title of the modal created by the name component when value is not recognised."},nameModalTitleSaved:{message:"Saved address",description:"Title of the modal created by the name component when value is saved."},nameNoProposedNames:{message:"No proposed names found",description:"Text shown in the proposed name dropdown if none found."},nameSetPlaceholder:{message:"Set a personal display name...",description:"Placeholder text for name input field in name component modal."},nativeToken:{message:"The native token on this network is $1. It is the token used for gas fees.",description:"$1 represents the name of the native token on the current network"},needHelp:{message:"Need help? Contact $1",description:"$1 represents `needHelpLinkText`, the text which goes in the help link"},needHelpFeedback:{message:"Share your feedback"},needHelpLinkText:{message:"MetaMask support"},needHelpSubmitTicket:{message:"Submit a ticket"},needImportFile:{message:"You must select a file to import.",description:"User is important an account and needs to add a file to continue"},negativeETH:{message:"Can not send negative amounts of ETH."},network:{message:"Network:"},networkAddedSuccessfully:{message:"Network added successfully!"},networkDetails:{message:"Network details"},networkIsBusy:{message:"Network is busy. Gas prices are high and estimates are less accurate."},networkMenu:{message:"Network Menu"},networkMenuHeading:{message:"Select a network"},networkName:{message:"Network name"},networkNameArbitrum:{message:"Arbitrum"},networkNameAvalanche:{message:"Avalanche"},networkNameBSC:{message:"BSC"},networkNameDefinition:{message:"The name associated with this network."},networkNameEthereum:{message:"Ethereum"},networkNameGoerli:{message:"Goerli"},networkNameLinea:{message:"Linea"},networkNameOpMainnet:{message:"OP Mainnet"},networkNamePolygon:{message:"Polygon"},networkNameTestnet:{message:"Testnet"},networkNameZkSyncEra:{message:"zkSync Era"},networkProvider:{message:"Network provider"},networkSettingsChainIdDescription:{message:"The chain ID is used for signing transactions. It must match the chain ID returned by the network. You can enter a decimal or '0x'-prefixed hexadecimal number, but we will display the number in decimal."},networkStatus:{message:"Network status"},networkStatusBaseFeeTooltip:{message:"The base fee is set by the network and changes every 13-14 seconds. Our $1 and $2 options account for sudden increases.",description:"$1 and $2 are bold text for Medium and Aggressive respectively."},networkStatusPriorityFeeTooltip:{message:"Range of priority fees (aka “miner tip”). This goes to miners and incentivizes them to prioritize your transaction."},networkStatusStabilityFeeTooltip:{message:"Gas fees are $1 relative to the past 72 hours.",description:"$1 is networks stability value - stable, low, high"},networkSwitchConnectionError:{message:"We can't connect to $1",description:"$1 represents the network name"},networkURL:{message:"Network URL"},networkURLDefinition:{message:"The URL used to access this network."},networks:{message:"Networks"},nevermind:{message:"Nevermind"},new:{message:"New!"},newAccount:{message:"New account"},newAccountNumberName:{message:"Account $1",description:"Default name of next account to be created on create account screen"},newContact:{message:"New contact"},newContract:{message:"New contract"},newNFTDetectedInImportNFTsMessage:{message:"To use Opensea see your NFT, turn on 'Enable OpenSea API' in $1.",description:"$1 is used for newNFTDetectedInImportNFTsMessageStrongText"},newNFTDetectedInImportNFTsMessageStrongText:{message:"Settings > Security and privacy"},newNFTDetectedInNFTsTabMessage:{message:"Let MetaMask automatically detect and display NFTs in your wallet."},newNFTsAutodetected:{message:"NFT autodetection"},newNetworkAdded:{message:"“$1” was successfully added!"},newNftAddedMessage:{message:"NFT was successfully added!"},newPassword:{message:"New password (8 characters min)"},newTokensImportedMessage:{message:"You’ve successfully imported $1.",description:"$1 is the string of symbols of all the tokens imported"},newTokensImportedTitle:{message:"Token imported"},next:{message:"Next"},nextNonceWarning:{message:"Nonce is higher than suggested nonce of $1",description:"The next nonce according to MetaMask's internal logic"},nftAddFailedMessage:{message:"NFT can’t be added as the ownership details do not match. Make sure you have entered correct information."},nftAddressError:{message:"This token is an NFT. Add on the $1",description:"$1 is a clickable link with text defined by the 'importNFTPage' key"},nftAlreadyAdded:{message:"NFT has already been added."},nftDisclaimer:{message:"Disclaimer: MetaMask pulls the media file from the source url. This url sometimes is changed by the marketplace the NFT was minted on."},nftLearnMore:{message:"Learn more about NFTs"},nftOptions:{message:"NFT Options"},nftTokenIdPlaceholder:{message:"Enter the token id"},nftWarningContent:{message:"You're granting access to $1, including any you might own in the future. The party on the other end can transfer these NFTs from your wallet at any time without asking you until you revoke this approval. $2",description:"$1 is nftWarningContentBold bold part, $2 is Learn more link"},nftWarningContentBold:{message:"all your $1 NFTs",description:"$1 is name of the collection"},nftWarningContentGrey:{message:"Proceed with caution."},nfts:{message:"NFTs"},nftsPreviouslyOwned:{message:"Previously Owned"},nickname:{message:"Nickname"},noAccountsFound:{message:"No accounts found for the given search query"},noAddressForName:{message:"No address has been set for this name."},noConversionDateAvailable:{message:"No currency conversion date available"},noConversionRateAvailable:{message:"No conversion rate available"},noNFTs:{message:"No NFTs yet"},noNetworksFound:{message:"No networks found for the given search query"},noSnaps:{message:"You don't have any snaps installed."},noThanksVariant2:{message:"No, thanks."},noTransactions:{message:"You have no transactions"},noWebcamFound:{message:"Your computer's webcam was not found. Please try again."},noWebcamFoundTitle:{message:"Webcam not found"},nonce:{message:"Nonce"},nonceField:{message:"Customize transaction nonce"},nonceFieldDescription:{message:"Turn this on to change the nonce (transaction number) on confirmation screens. This is an advanced feature, use cautiously."},nonceFieldHeading:{message:"Custom nonce"},notBusy:{message:"Not busy"},notCurrentAccount:{message:"Is this the correct account? It's different from the currently selected account in your wallet"},notEnoughBalance:{message:"Insufficient balance"},notEnoughGas:{message:"Not enough gas"},note:{message:"Note"},notePlaceholder:{message:"The approver will see this note when approving the transaction at the custodian."},notificationTransactionFailedMessage:{message:"Transaction $1 failed! $2",description:"Content of the browser notification that appears when a transaction fails"},notificationTransactionFailedMessageMMI:{message:"Transaction failed! $1",description:"Content of the browser notification that appears when a transaction fails in MMI"},notificationTransactionFailedTitle:{message:"Failed transaction",description:"Title of the browser notification that appears when a transaction fails"},notificationTransactionSuccessMessage:{message:"Transaction $1 confirmed!",description:"Content of the browser notification that appears when a transaction is confirmed"},notificationTransactionSuccessTitle:{message:"Confirmed transaction",description:"Title of the browser notification that appears when a transaction is confirmed"},notificationTransactionSuccessView:{message:"View on $1",description:"Additional content in browser notification that appears when a transaction is confirmed and has a block explorer URL"},notifications:{message:"Notifications"},notifications10ActionText:{message:"Visit in Settings",description:"The 'call to action' on the button, or link, of the 'Visit in Settings' notification. Upon clicking, users will be taken to Settings page."},notifications10DescriptionOne:{message:"Improved token detection is currently available on Ethereum Mainnet, Polygon, BSC, and Avalanche networks. More to come!"},notifications10DescriptionThree:{message:"Token detection feature is currently OFF by default. You can enable it from Settings."},notifications10DescriptionTwo:{message:"We source tokens from third party tokens lists. Tokens listed on more than two token lists will be automatically detected."},notifications10Title:{message:"Improved token detection is here"},notifications11Description:{message:"Tokens can be created by anyone and can have duplicate names. If you see a token appear that you don’t trust or haven’t interacted with - it’s safer to not trust it."},notifications11Title:{message:"Scam and security risks"},notifications12ActionText:{message:"Enable dark mode"},notifications12Description:{message:"Dark mode on Extension is finally here! To turn it on, go to Settings > Experimental and select one of the display options: Light, Dark, System."},notifications12Title:{message:"Wen dark mode? Now dark mode! 🕶️🦊"},notifications13ActionText:{message:"Show custom network list"},notifications13Description:{message:'You can now add the following popular custom networks easily: Arbitrum, Avalanche, Binance Smart Chain, Fantom, Harmony, Optimism, Palm and Polygon! To enable this feature, go to Settings > Experimental and turn "Show custom network list" on!',description:"Description of a notification in the 'See What's New' popup. Describes popular network feature."},notifications13Title:{message:"Add Popular Networks"},notifications14ActionText:{message:"Show backup settings"},notifications14Description:{message:'We\'re deprecating our 3Box data feature in early October. To backup and restore your wallet manually, use the "Backup now" button in Advanced Settings.',description:"Description of a notification in the 'See What's New' popup. Describes 3box deprecation."},notifications14Title:{message:"3Box Deprecation"},notifications15Description:{message:"There's no action required from you, so keep using your wallet as usual. Be aware of potential scams around the Merge.",description:"Description of a notification in the 'See What's New' popup. Advises users about the ethereum merge (https://ethereum.org/en/upgrades/merge/#main-content) and potential scams."},notifications15Title:{message:"The Ethereum Merge is here!"},notifications18ActionText:{message:"Enable security alerts"},notifications18DescriptionOne:{message:"Get alerts from third parties when you may have received a malicious request.",description:"Description of a notification in the 'See What's New' popup. Describes Opensea Security Provider feature."},notifications18DescriptionThree:{message:"Always be sure to do your own due diligence before approving any requests.",description:"Description of a notification in the 'See What's New' popup. Describes Opensea Security Provider feature."},notifications18DescriptionTwo:{message:"OpenSea is the first provider for this feature. More providers coming soon!",description:"Description of a notification in the 'See What's New' popup. Describes Opensea Security Provider feature."},notifications18Title:{message:"Stay safe with security alerts"},notifications19ActionText:{message:"Enable NFT autodetection"},notifications19DescriptionOne:{message:"Two ways you can get started:",description:"Description of a notification in the 'See What's New' popup. Describes NFT autodetection feature."},notifications19DescriptionThree:{message:"We only support ERC-721 at the moment.",description:"Description of a notification in the 'See What's New' popup. Describes NFT autodetection feature."},notifications19DescriptionTwo:{message:"Manually add your NFTs, or turn on NFT autodetection in Settings > Experimental.",description:"Description of a notification in the 'See What's New' popup. Describes NFT autodetection feature."},notifications19Title:{message:"See your NFTs like never before"},notifications1Description:{message:"MetaMask Mobile users can now swap tokens inside their mobile wallet. Scan the QR code to get the mobile app and start swapping.",description:"Description of a notification in the 'See What's New' popup. Describes the swapping on mobile feature."},notifications1Title:{message:"Swapping on mobile is here!",description:"Title for a notification in the 'See What's New' popup. Tells users that they can now use MetaMask Swaps on Mobile."},notifications20ActionText:{message:"Learn more",description:"The 'call to action' on the button, or link, of the 'Stay secure' notification. Upon clicking, users will be taken to a ledger page to resolve the U2F connection issue."},notifications20Description:{message:"If you're on the latest version of Firefox, you might be experiencing an issue related to Firefox dropping U2F support.",description:"Description of a notification in the 'See What's New' popup. Describes the U2F support being dropped by firefox and that it affects ledger users."},notifications20Title:{message:"Ledger and Firefox Users Experiencing Connection Issues",description:"Title for a notification in the 'See What's New' popup. Tells users that latest firefox users using U2F may experience connection issues."},notifications21ActionText:{message:"Try it out"},notifications21Description:{message:"We've updated Swaps in the MetaMask extension to be easier and faster to use.",description:"Description of a notification in the 'See What's New' popup. Describes NFT autodetection feature."},notifications21Title:{message:"Introducing new and refreshed Swaps!"},notifications22ActionText:{message:"Got it"},notifications22Description:{message:"💡 Just click the global menu or account menu to find them!"},notifications22Title:{message:"Looking for your account details or the block explorer URL?"},notifications23ActionText:{message:"Enable security alerts"},notifications23DescriptionOne:{message:"Steer clear of known scams while still preserving your privacy with security alerts powered by Blockaid on Ethereum Mainnet."},notifications23DescriptionTwo:{message:"Always do your own due diligence before approving requests."},notifications23Title:{message:"Stay safe with security alerts"},notifications24ActionText:{message:"Got it"},notifications24Description:{message:"Advanced gas fee settings are now remembered based on the network you're using. This means you can set specific advanced gas fees for each network and avoid overpaying for gas or stuck transactions."},notifications24Title:{message:"Advanced gas fees by network"},notifications3ActionText:{message:"Read more",description:"The 'call to action' on the button, or link, of the 'Stay secure' notification. Upon clicking, users will be taken to a page about security on the metamask support website."},notifications3Description:{message:"Stay up to date on MetaMask security best practices and get the latest security tips from official MetaMask support.",description:"Description of a notification in the 'See What's New' popup. Describes the information they can get on security from the linked support page."},notifications3Title:{message:"Stay secure",description:"Title for a notification in the 'See What's New' popup. Encourages users to consider security."},notifications4ActionText:{message:"Start swapping",description:"The 'call to action' on the button, or link, of the 'Swap on Binance Smart Chain!' notification. Upon clicking, users will be taken to a page where then can swap tokens on Binance Smart Chain."},notifications4Description:{message:"Get the best prices on token swaps right inside your wallet. MetaMask now connects you to multiple decentralized exchange aggregators and professional market makers on Binance Smart Chain.",description:"Description of a notification in the 'See What's New' popup."},notifications4Title:{message:"Swap on Binance Smart Chain",description:"Title for a notification in the 'See What's New' popup. Encourages users to do swaps on Binance Smart Chain."},notifications5Description:{message:'Your "Seed Phrase" is now called your "Secret Recovery Phrase."',description:"Description of a notification in the 'See What's New' popup. Describes the seed phrase wording update."},notifications6DescriptionOne:{message:"As of Chrome version 91, the API that enabled our Ledger support (U2F) no longer supports hardware wallets. MetaMask has implemented a new Ledger Live support that allows you to continue to connect to your Ledger device via the Ledger Live desktop app.",description:"Description of a notification in the 'See What's New' popup. Describes the Ledger support update."},notifications6DescriptionThree:{message:"When interacting with your Ledger account in MetaMask, a new tab will open and you will be asked to open the Ledger Live app.  Once the app opens, you'll be asked to allow a WebSocket connection to your MetaMask account.  That's all!",description:"Description of a notification in the 'See What's New' popup. Describes the Ledger support update."},notifications6DescriptionTwo:{message:"You can enable Ledger Live support by clicking Settings > Advanced > Use Ledger Live.",description:"Description of a notification in the 'See What's New' popup. Describes the Ledger support update."},notifications6Title:{message:"Ledger support update for Chrome users",description:"Title for a notification in the 'See What's New' popup. Lets users know about the Ledger support update"},notifications7DescriptionOne:{message:"MetaMask v10.1.0 included new support for EIP-1559 transactions when using Ledger devices.",description:"Description of a notification in the 'See What's New' popup. Describes changes for ledger and EIP1559 in v10.1.0"},notifications7DescriptionTwo:{message:"To complete transactions on Ethereum Mainnet, make sure your Ledger device has the latest firmware.",description:"Description of a notification in the 'See What's New' popup. Describes the need to update ledger firmware."},notifications7Title:{message:"Ledger firmware update",description:"Title for a notification in the 'See What's New' popup. Notifies ledger users of the need to update firmware."},notifications8ActionText:{message:"Go to Settings > Advanced",description:"Description on an action button that appears in the What's New popup. Tells the user that if they click it, they will go to our Advanced settings page."},notifications8DescriptionOne:{message:"As of MetaMask v10.4.0, you no longer need Ledger Live to connect your Ledger device to MetaMask.",description:"Description of a notification in the 'See What's New' popup. Describes changes for how Ledger Live is no longer needed to connect the device."},notifications8DescriptionTwo:{message:"For an easier and more stable ledger experience, go to Settings > Advanced and switch the 'Preferred Ledger Connection Type' to 'WebHID'.",description:"Description of a notification in the 'See What's New' popup. Describes how the user can turn off the Ledger Live setting."},notifications8Title:{message:"Ledger connection improvement",description:"Title for a notification in the 'See What's New' popup. Notifies ledger users that there is an improvement in how they can connect their device."},notifications9DescriptionOne:{message:"We now provide you with more insights on the 'Data' tab when confirming smart contract transactions."},notifications9DescriptionTwo:{message:"You can now get a better understanding of your transaction’s details before confirming, and more easily add transaction addresses to your address book, helping you make safe and informed decisions."},notifications9Title:{message:"👓 We are making transactions easier to read."},notificationsBuySellActionText:{message:"Try it on MetaMask Portfolio"},notificationsBuySellDescription:{message:"Introducing the ‘Buy & Sell’ button, giving you easy access to our latest feature: Sell. When clicked, you’ll be redirected to MetaMask Portfolio, where you’ll be able to convert your crypto to cash in a flash. Initially available for ETH on mainnet in the US (state restrictions apply), UK, and parts of Europe."},notificationsBuySellTitle:{message:"Sell your crypto, get cash"},notificationsDropLedgerFirefoxDescription:{message:"Firefox no longer supports U2F, so Ledger won't work with MetaMask on Firefox. Try MetaMask on Google Chrome instead.",description:"Description of a notification in the 'See What's New' popup. Describes that ledger will not longer be supported for firefox users and they should use MetaMask on chrome for ledger support instead."},notificationsDropLedgerFirefoxTitle:{message:"Dropping Ledger Support for Firefox",description:"Title for a notification in the 'See What's New' popup. Tells firefox users that ledger support is being dropped."},notificationsEmptyText:{message:"This is where you can find notifications from your installed snaps."},notificationsHeader:{message:"Notifications"},notificationsInfos:{message:"$1 from $2",description:"$1 is the date at which the notification has been dispatched and $2 is the link to the snap that dispatched the notification."},notificationsMarkAllAsRead:{message:"Mark all as read"},notificationsOpenBetaSnapsActionText:{message:"Learn more"},notificationsOpenBetaSnapsDescriptionOne:{message:"🎉 We're excited to announce the Open Beta of MetaMask Snaps!"},notificationsOpenBetaSnapsDescriptionThree:{message:"Personalize your wallet with snaps built by the developer community!"},notificationsOpenBetaSnapsDescriptionTwo:{message:"Snaps help you do more with MetaMask — like connect to more networks, see transaction insights, and get custom notifications."},notificationsOpenBetaSnapsTitle:{message:"Introducing MetaMask Snaps"},numberOfNewTokensDetectedPlural:{message:"$1 new tokens found in this account",description:"$1 is the number of new tokens detected"},numberOfNewTokensDetectedSingular:{message:"1 new token found in this account"},ofTextNofM:{message:"of"},off:{message:"Off"},offlineForMaintenance:{message:"Offline for maintenance"},ok:{message:"Ok"},on:{message:"On"},onboardingAdvancedPrivacyIPFSDescription:{message:"The IPFS gateway makes it possible to access and view data hosted by third parties. You can add a custom IPFS gateway or continue using the default."},onboardingAdvancedPrivacyIPFSInvalid:{message:"Please enter a valid URL"},onboardingAdvancedPrivacyIPFSTitle:{message:"Add custom IPFS Gateway"},onboardingAdvancedPrivacyIPFSValid:{message:"IPFS gateway URL is valid"},onboardingAdvancedPrivacyNetworkButton:{message:"Add custom network"},onboardingAdvancedPrivacyNetworkDescription:{message:"We use Infura as our remote procedure call (RPC) provider to offer the most reliable and private access to Ethereum data we can. You can choose your own RPC, but remember that any RPC will receive your IP address and Ethereum wallet to make transactions. Read our $1 to learn more about how Infura handles data."},onboardingAdvancedPrivacyNetworkTitle:{message:"Choose your network"},onboardingCreateWallet:{message:"Create a new wallet"},onboardingImportWallet:{message:"Import an existing wallet"},onboardingMetametricsAgree:{message:"I agree"},onboardingMetametricsAllowOptOut:{message:"Always allow you to opt-out via Settings"},onboardingMetametricsDataTerms:{message:"This data is aggregated and is therefore anonymous for the purposes of General Data Protection Regulation (EU) 2016/679."},onboardingMetametricsDescription:{message:"MetaMask would like to gather usage data to better understand how our users interact with MetaMask. This data will be used to provide the service, which includes improving the service based on your use."},onboardingMetametricsDescription2:{message:"MetaMask will..."},onboardingMetametricsDisagree:{message:"No thanks"},onboardingMetametricsInfuraTerms:{message:"* When you use Infura as your default RPC provider in MetaMask, Infura will collect your IP address and your Ethereum wallet address when you send a transaction. We don’t store this information in a way that allows our systems to associate those two pieces of data. For more information on how MetaMask and Infura interact from a data collection perspective, see our update $1. For more information on our privacy practices in general, see our $2.",description:"$1 represents `onboardingMetametricsInfuraTermsPolicyLink`, $2 represents `onboardingMetametricsInfuraTermsPolicy`"},onboardingMetametricsInfuraTermsPolicy:{message:"Privacy Policy here"},onboardingMetametricsInfuraTermsPolicyLink:{message:"here"},onboardingMetametricsModalTitle:{message:"Add custom network"},onboardingMetametricsNeverCollect:{message:"$1 collect information we don’t need to provide the service (such as keys, addresses, transaction hashes, or balances)",description:"$1 represents `onboardingMetametricsNeverEmphasis`"},onboardingMetametricsNeverCollectIP:{message:"$1 collect your full IP address*",description:"$1 represents `onboardingMetametricsNeverEmphasis`"},onboardingMetametricsNeverEmphasis:{message:"Never"},onboardingMetametricsNeverSellData:{message:"$1 sell data.  Ever!",description:"$1 represents `onboardingMetametricsNeverEmphasis`"},onboardingMetametricsSendAnonymize:{message:"Send anonymized click and pageview events"},onboardingMetametricsTitle:{message:"Help us improve MetaMask"},onboardingPinExtensionBillboardAccess:{message:"Full access"},onboardingPinExtensionBillboardDescription:{message:"These extensions can see and change information"},onboardingPinExtensionBillboardDescription2:{message:"on this site."},onboardingPinExtensionBillboardTitle:{message:"Extensions"},onboardingPinExtensionChrome:{message:"Click the browser extension icon"},onboardingPinExtensionDescription:{message:"Pin MetaMask on your browser so it's accessible and easy to view transaction confirmations."},onboardingPinExtensionDescription2:{message:"You can open MetaMask by clicking on the extension and access your wallet with 1 click."},onboardingPinExtensionDescription3:{message:"Click browser extension icon to access it instantly"},onboardingPinExtensionLabel:{message:"Pin MetaMask"},onboardingPinExtensionStep1:{message:"1"},onboardingPinExtensionStep2:{message:"2"},onboardingPinExtensionTitle:{message:"Your MetaMask install is complete!"},onboardingPinMmiExtensionLabel:{message:"Pin MetaMask Institutional"},onboardingUsePhishingDetectionDescription:{message:"Phishing detection alerts rely on communication with $1. jsDeliver will have access to your IP address. View $2.",description:"The $1 is the word 'jsDeliver', from key 'jsDeliver' and $2 is the words Privacy Policy from key 'privacyMsg', both separated here so that it can be wrapped as a link"},onlyAddTrustedNetworks:{message:"A malicious network provider can lie about the state of the blockchain and record your network activity. Only add custom networks you trust."},onlyConnectTrust:{message:"Only connect with sites you trust."},openCustodianApp:{message:"Open $1 app",description:"The $1 is the name of the Custodian that will be open"},openFullScreenForLedgerWebHid:{message:"Go to full screen to connect your Ledger.",description:"Shown to the user on the confirm screen when they are viewing MetaMask in a popup window but need to connect their ledger via webhid."},openInBlockExplorer:{message:"Open in block explorer"},openSeaLabel:{message:"OpenSea + Blockaid"},openSeaMessage:{message:"Data is shared with third parties. Security providers will receive your unsigned transactions and signature requests. $1",description:"$1 is the link to OpenSea's terms of use"},openSeaNew:{message:"OpenSea"},operationFailed:{message:"Operation Failed"},optional:{message:"Optional"},optionalWithParanthesis:{message:"(Optional)"},options:{message:"Options"},or:{message:"or"},origin:{message:"Origin"},osTheme:{message:"System"},otherSnaps:{message:"other snaps",description:"Used in the 'permission_rpc' message."},outdatedBrowserNotification:{message:"Your browser is out of date. If you don't update your browser, you won't be able to get security patches and new features from MetaMask."},padlock:{message:"Padlock"},parameters:{message:"Parameters"},participateInMetaMetrics:{message:"Participate in MetaMetrics"},participateInMetaMetricsDescription:{message:"Participate in MetaMetrics to help us make MetaMask better"},password:{message:"Password"},passwordMmiTermsWarning:{message:"I understand that MetaMask Institutional cannot recover this password for me. $1"},passwordNotLongEnough:{message:"Password not long enough"},passwordSetupDetails:{message:"This password will unlock your MetaMask wallet only on this device. MetaMask can not recover this password."},passwordStrength:{message:"Password strength: $1",description:"Return password strength to the user when user wants to create password."},passwordStrengthDescription:{message:"A strong password can improve the security of your wallet should your device be stolen or compromised."},passwordTermsWarning:{message:"I understand that MetaMask cannot recover this password for me. $1"},passwordsDontMatch:{message:"Passwords don't match"},pasteJWTToken:{message:"Paste or drop your token here:"},pastePrivateKey:{message:"Enter your private key string here:",description:"For importing an account from a private key"},pending:{message:"Pending"},pendingTransactionInfo:{message:"This transaction will not process until that one is complete."},pendingTransactionMultiple:{message:"You have ($1) pending transactions."},pendingTransactionSingle:{message:"You have (1) pending transaction.",description:"$1 is count of pending transactions"},permissionRequest:{message:"Permission request"},permissionRequestCapitalized:{message:"Permission request"},permissionRequested:{message:"Requested now"},permissionRevoked:{message:"Revoked in this update"},permission_accessNamedSnap:{message:"Connect to $1.",description:"The description for the `wallet_snap` permission. $1 is the human-readable name of the snap."},permission_accessNetwork:{message:"Access the internet.",description:"The description of the `endowment:network-access` permission."},permission_accessNetworkDescription:{message:"Allow the snap to access the internet. This can be used to both send and receive data with third-party servers.",description:"An extended description of the `endowment:network-access` permission."},permission_accessSnap:{message:"Connect to the $1 snap.",description:"The description for the `wallet_snap` permission. $1 is the name of the snap."},permission_accessSnapDescription:{message:"Allow the website or snap to interact with $1.",description:"The description for the `wallet_snap_*` permission. $1 is the name of the Snap."},permission_cronjob:{message:"Schedule and execute periodic actions.",description:"The description for the `snap_cronjob` permission"},permission_cronjobDescription:{message:"Allow the snap to perform actions that run periodically at fixed times, dates, or intervals. This can be used to trigger time-sensitive interactions or notifications.",description:"An extended description for the `snap_cronjob` permission"},permission_dialog:{message:"Display dialog windows in MetaMask.",description:"The description for the `snap_dialog` permission"},permission_dialogDescription:{message:"Allow the snap to display MetaMask popups with custom text, input field, and buttons to approve or reject an action.\nCan be used to create e.g. alerts, confirmations, and opt-in flows for a snap.",description:"An extended description for the `snap_dialog` permission"},permission_ethereumAccounts:{message:"See address, account balance, activity and suggest transactions to approve",description:"The description for the `eth_accounts` permission"},permission_ethereumProvider:{message:"Access the Ethereum provider.",description:"The description for the `endowment:ethereum-provider` permission"},permission_ethereumProviderDescription:{message:"Allow the snap to communicate with MetaMask directly, in order for it to read data from the blockchain and suggest messages and transactions.",description:"An extended description for the `endowment:ethereum-provider` permission"},permission_getEntropy:{message:"Derive arbitrary keys unique to this snap.",description:"The description for the `snap_getEntropy` permission"},permission_getEntropyDescription:{message:"Allow the snap to derive arbitrary keys unique to this snap, without exposing them. These keys are separate from your MetaMask account(s) and not related to your private keys or Secret Recovery Phrase. Other snaps cannot access this information.",description:"An extended description for the `snap_getEntropy` permission"},permission_getLocale:{message:"View your preferred language.",description:"The description for the `snap_getLocale` permission"},permission_getLocaleDescription:{message:"Let this Snap access your preferred language from your MetaMask settings. This can be used to localize and display the Snap's content using your language.",description:"An extended description for the `snap_getLocale` permission"},permission_keyring:{message:"Allow requests for adding and controlling Ethereum accounts",description:"The description for the `endowment:keyring` permission"},permission_keyringDescription:{message:"Let this Snap receive requests to add or remove accounts, plus sign and transact on behalf of these accounts.",description:"An extended description for the `endowment:keyring` permission"},permission_lifecycleHooks:{message:"Use lifecycle hooks.",description:"The description for the `endowment:lifecycle-hooks` permission"},permission_lifecycleHooksDescription:{message:"Allow the snap to use lifecycle hooks to run code at specific times during its lifecycle.",description:"An extended description for the `endowment:lifecycle-hooks` permission"},permission_manageAccounts:{message:"Add and control Ethereum accounts",description:"The description for `snap_manageAccounts` permission"},permission_manageAccountsDescription:{message:"Allow this Snap to add or remove Ethereum accounts, then transact and sign with these accounts.",description:"An extended description for the `snap_manageAccounts` permission"},permission_manageBip32Keys:{message:"Control your accounts and assets under $1 ($2).",description:"The description for the `snap_getBip32Entropy` permission. $1 is a derivation path, e.g. 'm/44'/0'/0''. $2 is the elliptic curve name, e.g. 'secp256k1'."},permission_manageBip32KeysDescription:{message:"Allow the snap to derive BIP-32 key pairs based on your Secret Recovery Phrase without exposing it. This grants full access to all accounts and assets on $1.\nWith the power to manage keys, the snap can support a variety of blockchain protocols beyond Ethereum (EVMs).",description:"An extended description for the `snap_getBip32Entropy` permission. $1 is a derivation path (name)"},permission_manageBip44Keys:{message:"Control your $1 accounts and assets.",description:"The description for the `snap_getBip44Entropy` permission. $1 is the name of a protocol, e.g. 'Filecoin'."},permission_manageBip44KeysDescription:{message:"Allow the snap to derive BIP-44 key pairs based on your Secret Recovery Phrase without exposing it. This grants full access to all accounts and assets on $1.\nWith the power to manage keys, the snap can support a variety of blockchain protocols beyond Ethereum (EVMs).",description:"An extended description for the `snap_getBip44Entropy` permission. $1 is the name of a protocol, e.g., 'Filecoin'."},permission_manageNamedBip32Keys:{message:"Control your $1 accounts and assets.",description:"The description for the `snap_getBip32Entropy` permission. $1 is a name for the derivation path, e.g., 'Ethereum accounts'. $2 is the plain derivation path, e.g. 'm/44'/0'/0''."},permission_manageState:{message:"Store and manage its data on your device.",description:"The description for the `snap_manageState` permission"},permission_manageStateDescription:{message:"Allow the snap to store, update, and retrieve data securely with encryption. Other snaps cannot access this information.",description:"An extended description for the `snap_manageState` permission"},permission_notifications:{message:"Show notifications.",description:"The description for the `snap_notify` permission"},permission_notificationsDescription:{message:"Allow the snap to display notifications within MetaMask. A short notification text can be triggered by a snap for actionable or time-sensitive information.",description:"An extended description for the `snap_notify` permission"},permission_rpc:{message:"Allow $1 to communicate directly with this snap.",description:"The description for the `endowment:rpc` permission. $1 is 'other snaps' or 'websites'."},permission_rpcDescription:{message:"Allow $1 to send messages to the snap and receive a response from the snap.",description:"An extended description for the `endowment:rpc` permission. $1 is 'other snaps' or 'websites'."},permission_transactionInsight:{message:"Fetch and display transaction insights.",description:"The description for the `endowment:transaction-insight` permission"},permission_transactionInsightDescription:{message:"Allow the snap to decode transactions and show insights within the MetaMask UI. This can be used for anti-phishing and security solutions.",description:"An extended description for the `endowment:transaction-insight` permission"},permission_transactionInsightOrigin:{message:"See the origins of websites that suggest transactions",description:"The description for the `transactionOrigin` caveat, to be used with the `endowment:transaction-insight` permission"},permission_transactionInsightOriginDescription:{message:"Allow the snap to see the origin (URI) of websites that suggest transactions. This can be used for anti-phishing and security solutions.",description:"An extended description for the `transactionOrigin` caveat, to be used with the `endowment:transaction-insight` permission"},permission_unknown:{message:"Unknown permission: $1",description:"$1 is the name of a requested permission that is not recognized."},permission_viewBip32PublicKeys:{message:"View your public key for $1 ($2).",description:"The description for the `snap_getBip32PublicKey` permission. $1 is a derivation path, e.g. 'm/44'/0'/0''. $2 is the elliptic curve name, e.g. 'secp256k1'."},permission_viewBip32PublicKeysDescription:{message:"Allow the snap to view your public keys (and addresses) for $1. This does not grant any control of accounts or assets.",description:"An extended description for the `snap_getBip32PublicKey` permission. $1 is a derivation path (name)"},permission_viewNamedBip32PublicKeys:{message:"View your public key for $1.",description:"The description for the `snap_getBip32PublicKey` permission. $1 is a name for the derivation path, e.g., 'Ethereum accounts'."},permission_webAssembly:{message:"Support for WebAssembly.",description:"The description of the `endowment:webassembly` permission."},permission_webAssemblyDescription:{message:"Allow the snap to access low-level execution environments via WebAssembly.",description:"An extended description of the `endowment:webassembly` permission."},permissions:{message:"Permissions"},permissionsTitle:{message:"Permissions"},permissionsTourDescription:{message:"Find your connected accounts and manage permissions here"},personalAddressDetected:{message:"Personal address detected. Input the token contract address."},pinExtensionDescription:{message:"Navigate to the extension menu and pin MetaMask Institutional for seamless access."},pinExtensionTitle:{message:"Pin extension"},pleaseConfirm:{message:"Please confirm"},plusXMore:{message:"+ $1 more",description:"$1 is a number of additional but unshown items in a list- this message will be shown in place of those items"},popularCustomNetworks:{message:"Popular custom networks"},portfolio:{message:"Portfolio"},portfolioDashboard:{message:"Portfolio Dashboard"},preferredLedgerConnectionType:{message:"Preferred Ledger connection type",description:"A header for a dropdown in Settings > Advanced. Appears above the ledgerConnectionPreferenceDescription message"},preferredProvider:{message:"Select your preferred provider"},preparingSwap:{message:"Preparing swap..."},prev:{message:"Prev"},primaryCurrencySetting:{message:"Primary currency"},primaryCurrencySettingDescription:{message:"Select native to prioritize displaying values in the native currency of the chain (e.g. ETH). Select Fiat to prioritize displaying values in your selected fiat currency."},priorityFee:{message:"Priority fee"},priorityFeeProperCase:{message:"Priority Fee"},privacy:{message:"Privacy"},privacyMsg:{message:"Privacy policy"},privateKey:{message:"Private Key",description:"select this type of file to use to import an account"},privateKeyCopyWarning:{message:"Private key for $1",description:"$1 represents the account name"},privateKeyWarning:{message:"Warning: Never disclose this key. Anyone with your private keys can steal any assets held in your account."},privateNetwork:{message:"Private network"},proceedWithTransaction:{message:"I want to proceed anyway"},proposedApprovalLimit:{message:"Proposed approval limit"},provide:{message:"Provide"},publicAddress:{message:"Public address"},queued:{message:"Queued"},quoteRate:{message:"Quote rate"},reAddAccounts:{message:"re-add any other accounts"},reAdded:{message:"re-added"},readdToken:{message:"You can add this token back in the future by going to “Import token” in your accounts options menu."},receive:{message:"Receive"},recipientAddressPlaceholder:{message:"Enter public address (0x) or ENS name"},recommendedGasLabel:{message:"Recommended"},recoveryPhraseReminderBackupStart:{message:"Start here"},recoveryPhraseReminderConfirm:{message:"Got it"},recoveryPhraseReminderHasBackedUp:{message:"Always keep your Secret Recovery Phrase in a secure and secret place"},recoveryPhraseReminderHasNotBackedUp:{message:"Need to backup your Secret Recovery Phrase again?"},recoveryPhraseReminderItemOne:{message:"Never share your Secret Recovery Phrase with anyone"},recoveryPhraseReminderItemTwo:{message:"The MetaMask team will never ask for your Secret Recovery Phrase"},recoveryPhraseReminderSubText:{message:"Your Secret Recovery Phrase controls all of your accounts."},recoveryPhraseReminderTitle:{message:"Protect your funds"},refreshList:{message:"Refresh list"},reject:{message:"Reject"},rejectAll:{message:"Reject all"},rejectRequestsDescription:{message:"You are about to batch reject $1 requests."},rejectRequestsN:{message:"Reject $1 requests"},rejectTxsDescription:{message:"You are about to batch reject $1 transactions."},rejectTxsN:{message:"Reject $1 transactions"},rejected:{message:"Rejected"},remember:{message:"Remember:"},remove:{message:"Remove"},removeAccount:{message:"Remove account"},removeAccountDescription:{message:"This account will be removed from your wallet. Please make sure you have the original Secret Recovery Phrase or private key for this imported account before continuing. You can import or create accounts again from the account drop-down. "},removeJWT:{message:"Remove custodian token"},removeJWTDescription:{message:"Are you sure you want to remove this token? All accounts assigned to this token will be removed from extension as well: "},removeKeyringSnap:{message:"Removing this Snap removes these accounts from MetaMask:"},removeKeyringSnapToolTip:{message:"The snap controls the accounts, and by removing it, the accounts will be removed from MetaMask, too, but they will remain in the blockchain."},removeNFT:{message:"Remove NFT"},removeNftMessage:{message:"NFT was successfully removed!"},removeSnap:{message:"Remove Snap"},removeSnapAccountBannerDescription:{message:"Be sure you can access this account on your own before removing it"},removeSnapAccountDescription:{message:"$1 wants to remove this account from MetaMask:"},removeSnapAccountTitle:{message:"Remove account"},removeSnapConfirmation:{message:"Are you sure you want to remove $1?",description:"$1 represents the name of the snap"},removeSnapDescription:{message:"This action will delete the snap, its data and revoke your given permissions."},replace:{message:"replace"},requestFlaggedAsMaliciousFallbackCopyReason:{message:"The security provider has not shared additional details"},requestFlaggedAsMaliciousFallbackCopyReasonTitle:{message:"Request flagged as malicious"},requestMayNotBeSafe:{message:"Request may not be safe"},requestMayNotBeSafeError:{message:"The security provider didn't detect any known malicious activity, but it still may not be safe to continue."},requestNotVerified:{message:"Request not verified"},requestNotVerifiedError:{message:"Because of an error, this request was not verified by the security provider. Proceed with caution."},requestsAwaitingAcknowledgement:{message:"requests waiting to be acknowledged"},required:{message:"Required"},reset:{message:"Reset"},resetWallet:{message:"Reset wallet"},resetWalletSubHeader:{message:"MetaMask does not keep a copy of your password. If you’re having trouble unlocking your account, you will need to reset your wallet. You can do this by providing the Secret Recovery Phrase you used when you set up your wallet."},resetWalletUsingSRP:{message:"This action will delete your current wallet and Secret Recovery Phrase from this device, along with the list of accounts you’ve curated. After resetting with a Secret Recovery Phrase, you’ll see a list of accounts based on the Secret Recovery Phrase you use to reset. This new list will automatically include accounts that have a balance. You’ll also be able to $1 created previously. Custom accounts that you’ve imported will need to be $2, and any custom tokens you’ve added to an account will need to be $3 as well."},resetWalletWarning:{message:"Make sure you’re using the correct Secret Recovery Phrase before proceeding. You will not be able to undo this."},restartMetamask:{message:"Restart MetaMask"},restore:{message:"Restore"},restoreFailed:{message:"Can not restore your data from the file provided"},restoreSuccessful:{message:"Your data has been restored successfully"},restoreUserData:{message:"Restore user data"},restoreUserDataDescription:{message:"You can restore user settings containing preferences and account addresses from a previously backed up JSON file."},resultPageError:{message:"Error"},resultPageErrorDefaultMessage:{message:"The operation failed."},resultPageSuccess:{message:"Success"},resultPageSuccessDefaultMessage:{message:"The operation completed successfully."},retryTransaction:{message:"Retry transaction"},reusedTokenNameWarning:{message:"A token here reuses a symbol from another token you watch, this can be confusing or deceptive."},revealSeedWords:{message:"Reveal Secret Recovery Phrase"},revealSeedWordsDescription1:{message:"The $1 provides $2",description:"This is a sentence consisting of link using 'revealSeedWordsSRPName' as $1 and bolded text using 'revealSeedWordsDescription3' as $2."},revealSeedWordsDescription2:{message:"MetaMask is a $1. That means you're the owner of your SRP.",description:"$1 is text link with the message from 'revealSeedWordsNonCustodialWallet'"},revealSeedWordsDescription3:{message:"full access to your wallet and funds.\n"},revealSeedWordsNonCustodialWallet:{message:"non-custodial wallet"},revealSeedWordsQR:{message:"QR"},revealSeedWordsSRPName:{message:"Secret Recovery Phrase (SRP)"},revealSeedWordsText:{message:"Text"},revealSeedWordsWarning:{message:"Make sure no one is looking at your screen. $1",description:"$1 is bolded text using the message from 'revealSeedWordsWarning2'"},revealSeedWordsWarning2:{message:"MetaMask Support will never request this.",description:"The bolded texted in the second part of 'revealSeedWordsWarning'"},revealTheSeedPhrase:{message:"Reveal seed phrase"},revokeAllTokensTitle:{message:"Revoke permission to access and transfer all of your $1?",description:"$1 is the symbol of the token for which the user is revoking approval"},revokeAllTokensTitleWithoutSymbol:{message:"Revoke permission to access and transfer all of your NFTs from $1?",description:"$1 is a link to contract on the block explorer when we're not able to retrieve a erc721 or erc1155 name"},revokeApproveForAllDescription:{message:"This revokes the permission for a third party to access and transfer all of your $1 without further notice.",description:"$1 is either a string or link of a given token symbol or name"},revokeApproveForAllDescriptionWithoutSymbol:{message:"This revokes the permission for a third party to access and transfer all of your NFTs from $1 without further notice.",description:"$1 is a link to contract on the block explorer when we're not able to retrieve a erc721 or erc1155 name"},revokePermission:{message:"Revoke permission"},revokeSpendingCap:{message:"Revoke spending cap for your $1",description:"$1 is a token symbol"},revokeSpendingCapTooltipText:{message:"This third party will be unable to spend any more of your current or future tokens."},rpcUrl:{message:"New RPC URL"},safeTransferFrom:{message:"Safe transfer from"},save:{message:"Save"},scanInstructions:{message:"Place the QR code in front of your camera"},scanQrCode:{message:"Scan QR code"},scrollDown:{message:"Scroll down"},search:{message:"Search"},searchAccounts:{message:"Search accounts"},searchResults:{message:"Search results"},secretRecoveryPhrase:{message:"Secret Recovery Phrase"},secureWallet:{message:"Secure wallet"},security:{message:"Security"},securityAlert:{message:"Security alert from $1 and $2"},securityAlerts:{message:"Security alerts"},securityAlertsDescription:{message:"This feature alerts you to malicious activity by actively reviewing transaction and signature requests. Always do your own due diligence before approving any requests. There's no guarantee that this feature will detect all malicious activity. By enabling this feature you agree to the provider's terms of use."},securityAndPrivacy:{message:"Security & privacy"},securityProviderPoweredBy:{message:"Powered by $1",description:"The security provider that is providing data"},seeDetails:{message:"See details"},seedPhraseConfirm:{message:"Confirm Secret Recovery Phrase"},seedPhraseEnterMissingWords:{message:"Confirm Secret Recovery Phrase"},seedPhraseIntroNotRecommendedButtonCopy:{message:"Remind me later (not recommended)"},seedPhraseIntroRecommendedButtonCopy:{message:"Secure my wallet (recommended)"},seedPhraseIntroSidebarBulletFour:{message:"Write down and store in multiple secret places"},seedPhraseIntroSidebarBulletOne:{message:"Save in a password manager"},seedPhraseIntroSidebarBulletThree:{message:"Store in a safe deposit box"},seedPhraseIntroSidebarCopyOne:{message:"Your Secret Recovery Phrase is a 12-word phrase that is the “master key” to your wallet and your funds"},seedPhraseIntroSidebarCopyThree:{message:"If someone asks for your recovery phrase they are likely trying to scam you and steal your wallet funds."},seedPhraseIntroSidebarCopyTwo:{message:"Never, ever share your Secret Recovery Phrase, not even with MetaMask!"},seedPhraseIntroSidebarTitleOne:{message:"What is a Secret Recovery Phrase?"},seedPhraseIntroSidebarTitleThree:{message:"Should I share my Secret Recovery Phrase?"},seedPhraseIntroSidebarTitleTwo:{message:"How do I save my Secret Recovery Phrase?"},seedPhraseIntroTitle:{message:"Secure your wallet"},seedPhraseIntroTitleCopy:{message:"Before getting started, watch this short video to learn about your Secret Recovery Phrase and how to keep your wallet safe."},seedPhraseReq:{message:"Secret Recovery Phrases contain 12, 15, 18, 21, or 24 words"},seedPhraseWriteDownDetails:{message:"Write down this 12-word Secret Recovery Phrase and save it in a place that you trust and only you can access."},seedPhraseWriteDownHeader:{message:"Write down your Secret Recovery Phrase"},select:{message:"Select"},selectAccounts:{message:"Select the account(s) to use on this site"},selectAccountsForSnap:{message:"Select the account(s) to use with this snap"},selectAll:{message:"Select all"},selectAllAccounts:{message:"Select all accounts"},selectAnAccount:{message:"Select an account"},selectAnAccountAlreadyConnected:{message:"This account has already been connected to MetaMask"},selectAnAccountHelp:{message:"Select the custodian accounts to use in MetaMask Institutional."},selectAnAction:{message:"Select an action"},selectEnableOpenseaAPIPrivacyPreference:{message:"Turn on Enable Opensea API"},selectHdPath:{message:"Select HD path"},selectJWT:{message:"Select token"},selectNFTPrivacyPreference:{message:"Turn on NFT detection in Settings"},selectPathHelp:{message:"If you don't see the accounts you expect, try switching the HD path."},selectType:{message:"Select Type"},selectingAllWillAllow:{message:"Selecting all will allow this site to view all of your current accounts. Make sure you trust this site."},send:{message:"Send"},sendAToken:{message:"Send a token"},sendBugReport:{message:"Send us a bug report."},sendDescription:{message:"Send crypto to any account"},sendSpecifiedTokens:{message:"Send $1",description:"Symbol of the specified token"},sendTo:{message:"Send to"},sendTokens:{message:"Send tokens"},sendingDisabled:{message:"Sending of ERC-1155 NFT assets is not yet supported."},sendingNativeAsset:{message:"Sending $1",description:"$1 represents the native currency symbol for the current network (e.g. ETH or BNB)"},sendingToTokenContractWarning:{message:"Warning: you are about to send to a token contract which could result in a loss of funds. $1",description:"$1 is a clickable link with text defined by the 'learnMoreUpperCase' key. The link will open to a support article regarding the known contract address warning"},sendingZeroAmount:{message:"You are sending 0 $1."},sepolia:{message:"Sepolia test network"},setAdvancedPrivacySettingsDetails:{message:"MetaMask uses these trusted third-party services to enhance product usability and safety."},setApprovalForAll:{message:"Set approval for all"},setApprovalForAllTitle:{message:"Approve $1 with no spend limit",description:"The token symbol that is being approved"},settingAddSnapAccount:{message:"Add account Snap"},settings:{message:"Settings"},settingsSearchMatchingNotFound:{message:"No matching results found."},settingsSubHeadingSignatures:{message:"Signature requests"},show:{message:"Show"},showFiatConversionInTestnets:{message:"Show conversion on test networks"},showFiatConversionInTestnetsDescription:{message:"Select this to show fiat conversion on test networks"},showHexData:{message:"Show hex data"},showHexDataDescription:{message:"Select this to show the hex data field on the send screen"},showIncomingTransactions:{message:"Show incoming transactions"},showIncomingTransactionsDescription:{message:"This relies on $1 which will have access to your Ethereum address and your IP address. $2",description:"$1 is the link to etherscan url and $2 is the link to the privacy policy of consensys APIs"},showIncomingTransactionsExplainer:{message:"This relies on different third-party APIs for each network, which expose your Ethereum address and your IP address."},showMore:{message:"Show more"},showNft:{message:"Show NFT"},showPermissions:{message:"Show permissions"},showPrivateKey:{message:"Show private key"},showTestnetNetworks:{message:"Show test networks"},showTestnetNetworksDescription:{message:"Select this to show test networks in network list"},sigRequest:{message:"Signature request"},sign:{message:"Sign"},signatureRequest:{message:"Signature request"},signatureRequestGuidance:{message:"Only sign this message if you fully understand the content and trust the requesting site."},signatureRequestWarning:{message:"Signing this message could be dangerous. You may be giving total control of your account and assets to the party on the other end of this message. That means they could drain your account at any time. Proceed with caution. $1."},signed:{message:"Signed"},signin:{message:"Sign-In"},simulationErrorMessageV2:{message:"We were not able to estimate gas. There might be an error in the contract and this transaction may fail."},skip:{message:"Skip"},skipAccountSecurity:{message:"Skip account security?"},skipAccountSecurityDetails:{message:"I understand that until I back up my Secret Recovery Phrase, I may lose my accounts and all of their assets."},smartContracts:{message:"Smart contracts"},smartSwap:{message:"Smart swap"},smartSwapsAreHere:{message:"Smart Swaps are here!"},smartSwapsDescription:{message:"MetaMask Swaps just got a whole lot smarter! Enabling Smart Swaps will allow MetaMask to programmatically optimize your Swap to help:"},smartSwapsErrorNotEnoughFunds:{message:"Not enough funds for a smart swap."},smartSwapsErrorUnavailable:{message:"Smart Swaps are temporarily unavailable."},smartSwapsSubDescription:{message:"* Smart Swaps will attempt to submit your transaction privately, multiple times. If all attempts fail, the transaction will be broadcast publicly to ensure your Swap successfully goes through."},snapAccountCreated:{message:"Your account is ready!"},snapAccountLegalDisclaimerExperime