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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"expect\"] = factory();\n\telse\n\t\troot[\"expect\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/expect/src/index.ts\");\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, {}, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} | `;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line, markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isIdentifierStart = isIdentifierStart;\nexports.isIdentifierChar = isIdentifierChar;\nexports.isIdentifierName = isIdentifierName;\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nfunction isIdentifierName(name) {\n  let isFirst = true;\n\n  for (let _i = 0, _Array$from = Array.from(name); _i < _Array$from.length; _i++) {\n    const char = _Array$from[_i];\n    const cp = char.codePointAt(0);\n\n    if (isFirst) {\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n\n      isFirst = false;\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n\n  return !isFirst;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isIdentifierName\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierName;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierChar\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierChar;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierStart\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierStart;\n  }\n});\nObject.defineProperty(exports, \"isReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindOnlyReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindOnlyReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isKeyword;\n  }\n});\n\nvar _identifier = require(\"./identifier\");\n\nvar _keyword = require(\"./keyword\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isReservedWord = isReservedWord;\nexports.isStrictReservedWord = isStrictReservedWord;\nexports.isStrictBindOnlyReservedWord = isStrictBindOnlyReservedWord;\nexports.isStrictBindReservedWord = isStrictBindReservedWord;\nexports.isKeyword = isKeyword;\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\n\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\n\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\n\nfunction isKeyword(word) {\n  return keywords.has(word);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = _interopRequireWildcard(require(\"js-tokens\"));\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsx_tag: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst JSX_TAG = /^[a-z][\\w-]*$/i;\nconst BRACKET = /^[()[\\]{}]$/;\n\nfunction getTokenType(match) {\n  const [offset, text] = match.slice(-2);\n  const token = (0, _jsTokens.matchToToken)(match);\n\n  if (token.type === \"name\") {\n    if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isReservedWord)(token.value)) {\n      return \"keyword\";\n    }\n\n    if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n      return \"jsx_tag\";\n    }\n\n    if (token.value[0] !== token.value[0].toLowerCase()) {\n      return \"capitalized\";\n    }\n  }\n\n  if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n    return \"bracket\";\n  }\n\n  if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n    return \"punctuator\";\n  }\n\n  return token.type;\n}\n\nfunction highlightTokens(defs, text) {\n  return text.replace(_jsTokens.default, function (...args) {\n    const type = getTokenType(args);\n    const colorize = defs[type];\n\n    if (colorize) {\n      return args[0].split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      return args[0];\n    }\n  });\n}\n\nfunction shouldHighlight(options) {\n  return _chalk.default.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  let chalk = _chalk.default;\n\n  if (options.forceColor) {\n    chalk = new _chalk.default.constructor({\n      enabled: true,\n      level: 1\n    });\n  }\n\n  return chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","'use strict';\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n","'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\n\nconst stringify = require('./lib/stringify');\nconst compile = require('./lib/compile');\nconst expand = require('./lib/expand');\nconst parse = require('./lib/parse');\n\n/**\n * Expand the given pattern or create a regex-compatible string.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\nconst braces = (input, options = {}) => {\n  let output = [];\n\n  if (Array.isArray(input)) {\n    for (let pattern of input) {\n      let result = braces.create(pattern, options);\n      if (Array.isArray(result)) {\n        output.push(...result);\n      } else {\n        output.push(result);\n      }\n    }\n  } else {\n    output = [].concat(braces.create(input, options));\n  }\n\n  if (options && options.expand === true && options.nodupes === true) {\n    output = [...new Set(output)];\n  }\n  return output;\n};\n\n/**\n * Parse the given `str` with the given `options`.\n *\n * ```js\n * // braces.parse(pattern, [, options]);\n * const ast = braces.parse('a/{b,c}/d');\n * console.log(ast);\n * ```\n * @param {String} pattern Brace pattern to parse\n * @param {Object} options\n * @return {Object} Returns an AST\n * @api public\n */\n\nbraces.parse = (input, options = {}) => parse(input, options);\n\n/**\n * Creates a braces string from an AST, or an AST node.\n *\n * ```js\n * const braces = require('braces');\n * let ast = braces.parse('foo/{a,b}/bar');\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.stringify = (input, options = {}) => {\n  if (typeof input === 'string') {\n    return stringify(braces.parse(input, options), options);\n  }\n  return stringify(input, options);\n};\n\n/**\n * Compiles a brace pattern into a regex-compatible, optimized string.\n * This method is called by the main [braces](#braces) function by default.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.compile('a/{b,c}/d'));\n * //=> ['a/(b|c)/d']\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.compile = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n  return compile(input, options);\n};\n\n/**\n * Expands a brace pattern into an array. This method is called by the\n * main [braces](#braces) function when `options.expand` is true. Before\n * using this method it's recommended that you read the [performance notes](#performance))\n * and advantages of using [.compile](#compile) instead.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.expand('a/{b,c}/d'));\n * //=> ['a/b/d', 'a/c/d'];\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.expand = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n\n  let result = expand(input, options);\n\n  // filter out empty strings if specified\n  if (options.noempty === true) {\n    result = result.filter(Boolean);\n  }\n\n  // filter out duplicates if specified\n  if (options.nodupes === true) {\n    result = [...new Set(result)];\n  }\n\n  return result;\n};\n\n/**\n * Processes a brace pattern and returns either an expanded array\n * (if `options.expand` is true), a highly optimized regex-compatible string.\n * This method is called by the main [braces](#braces) function.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.create = (input, options = {}) => {\n  if (input === '' || input.length < 3) {\n    return [input];\n  }\n\n return options.expand !== true\n    ? braces.compile(input, options)\n    : braces.expand(input, options);\n};\n\n/**\n * Expose \"braces\"\n */\n\nmodule.exports = braces;\n","'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  let walk = (node, parent = {}) => {\n    let invalidBlock = utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? (prefix + node.value) : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? (prefix + node.value) : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      let range = fill(...args, { ...options, wrap: false, toRegex: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n","'use strict';\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n\n  // Digits\n  CHAR_0: '0', /* 0 */\n  CHAR_9: '9', /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 'A', /* A */\n  CHAR_LOWERCASE_A: 'a', /* a */\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\n  CHAR_LOWERCASE_Z: 'z', /* z */\n\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\n\n  CHAR_ASTERISK: '*', /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: '&', /* & */\n  CHAR_AT: '@', /* @ */\n  CHAR_BACKSLASH: '\\\\', /* \\ */\n  CHAR_BACKTICK: '`', /* ` */\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\n  CHAR_COLON: ':', /* : */\n  CHAR_COMMA: ',', /* , */\n  CHAR_DOLLAR: '$', /* . */\n  CHAR_DOT: '.', /* . */\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\n  CHAR_EQUAL: '=', /* = */\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\n  CHAR_FORM_FEED: '\\f', /* \\f */\n  CHAR_FORWARD_SLASH: '/', /* / */\n  CHAR_HASH: '#', /* # */\n  CHAR_HYPHEN_MINUS: '-', /* - */\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\n  CHAR_LINE_FEED: '\\n', /* \\n */\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\n  CHAR_PERCENT: '%', /* % */\n  CHAR_PLUS: '+', /* + */\n  CHAR_QUESTION_MARK: '?', /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\n  CHAR_SEMICOLON: ';', /* ; */\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\n  CHAR_SPACE: ' ', /*   */\n  CHAR_TAB: '\\t', /* \\t */\n  CHAR_UNDERSCORE: '_', /* _ */\n  CHAR_VERTICAL_LINE: '|', /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\n};\n","'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\nconst append = (queue = '', stash = '', enclose = false) => {\n  let result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (let item of queue) {\n    if (Array.isArray(item)) {\n      for (let value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : (item + ele));\n      }\n    }\n  }\n  return utils.flatten(result);\n};\n\nconst expand = (ast, options = {}) => {\n  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;\n\n  let walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    let enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils.flatten(walk(ast));\n};\n\nmodule.exports = expand;\n","'use strict';\n\nconst stringify = require('./stringify');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  CHAR_BACKSLASH, /* \\ */\n  CHAR_BACKTICK, /* ` */\n  CHAR_COMMA, /* , */\n  CHAR_DOT, /* . */\n  CHAR_LEFT_PARENTHESES, /* ( */\n  CHAR_RIGHT_PARENTHESES, /* ) */\n  CHAR_LEFT_CURLY_BRACE, /* { */\n  CHAR_RIGHT_CURLY_BRACE, /* } */\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\n  CHAR_DOUBLE_QUOTE, /* \" */\n  CHAR_SINGLE_QUOTE, /* ' */\n  CHAR_NO_BREAK_SPACE,\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\n} = require('./constants');\n\n/**\n * parse\n */\n\nconst parse = (input, options = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  let opts = options || {};\n  let max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  if (input.length > max) {\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\n  }\n\n  let ast = { type: 'root', input, nodes: [] };\n  let stack = [ast];\n  let block = ast;\n  let prev = ast;\n  let brackets = 0;\n  let length = input.length;\n  let index = 0;\n  let depth = 0;\n  let value;\n  let memo = {};\n\n  /**\n   * Helpers\n   */\n\n  const advance = () => input[index++];\n  const push = node => {\n    if (node.type === 'text' && prev.type === 'dot') {\n      prev.type = 'text';\n    }\n\n    if (prev && prev.type === 'text' && node.type === 'text') {\n      prev.value += node.value;\n      return;\n    }\n\n    block.nodes.push(node);\n    node.parent = block;\n    node.prev = prev;\n    prev = node;\n    return node;\n  };\n\n  push({ type: 'bos' });\n\n  while (index < length) {\n    block = stack[stack.length - 1];\n    value = advance();\n\n    /**\n     * Invalid chars\n     */\n\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\n      continue;\n    }\n\n    /**\n     * Escaped chars\n     */\n\n    if (value === CHAR_BACKSLASH) {\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\n      continue;\n    }\n\n    /**\n     * Right square bracket (literal): ']'\n     */\n\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\n      push({ type: 'text', value: '\\\\' + value });\n      continue;\n    }\n\n    /**\n     * Left square bracket: '['\n     */\n\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\n      brackets++;\n\n      let closed = true;\n      let next;\n\n      while (index < length && (next = advance())) {\n        value += next;\n\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\n          brackets++;\n          continue;\n        }\n\n        if (next === CHAR_BACKSLASH) {\n          value += advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          brackets--;\n\n          if (brackets === 0) {\n            break;\n          }\n        }\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === CHAR_LEFT_PARENTHESES) {\n      block = push({ type: 'paren', nodes: [] });\n      stack.push(block);\n      push({ type: 'text', value });\n      continue;\n    }\n\n    if (value === CHAR_RIGHT_PARENTHESES) {\n      if (block.type !== 'paren') {\n        push({ type: 'text', value });\n        continue;\n      }\n      block = stack.pop();\n      push({ type: 'text', value });\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Quotes: '|\"|`\n     */\n\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\n      let open = value;\n      let next;\n\n      if (options.keepQuotes !== true) {\n        value = '';\n      }\n\n      while (index < length && (next = advance())) {\n        if (next === CHAR_BACKSLASH) {\n          value += next + advance();\n          continue;\n        }\n\n        if (next === open) {\n          if (options.keepQuotes === true) value += next;\n          break;\n        }\n\n        value += next;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Left curly brace: '{'\n     */\n\n    if (value === CHAR_LEFT_CURLY_BRACE) {\n      depth++;\n\n      let dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\n      let brace = {\n        type: 'brace',\n        open: true,\n        close: false,\n        dollar,\n        depth,\n        commas: 0,\n        ranges: 0,\n        nodes: []\n      };\n\n      block = push(brace);\n      stack.push(block);\n      push({ type: 'open', value });\n      continue;\n    }\n\n    /**\n     * Right curly brace: '}'\n     */\n\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\n      if (block.type !== 'brace') {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      let type = 'close';\n      block = stack.pop();\n      block.close = true;\n\n      push({ type, value });\n      depth--;\n\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Comma: ','\n     */\n\n    if (value === CHAR_COMMA && depth > 0) {\n      if (block.ranges > 0) {\n        block.ranges = 0;\n        let open = block.nodes.shift();\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\n      }\n\n      push({ type: 'comma', value });\n      block.commas++;\n      continue;\n    }\n\n    /**\n     * Dot: '.'\n     */\n\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\n      let siblings = block.nodes;\n\n      if (depth === 0 || siblings.length === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      if (prev.type === 'dot') {\n        block.range = [];\n        prev.value += value;\n        prev.type = 'range';\n\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\n          block.invalid = true;\n          block.ranges = 0;\n          prev.type = 'text';\n          continue;\n        }\n\n        block.ranges++;\n        block.args = [];\n        continue;\n      }\n\n      if (prev.type === 'range') {\n        siblings.pop();\n\n        let before = siblings[siblings.length - 1];\n        before.value += prev.value + value;\n        prev = before;\n        block.ranges--;\n        continue;\n      }\n\n      push({ type: 'dot', value });\n      continue;\n    }\n\n    /**\n     * Text\n     */\n\n    push({ type: 'text', value });\n  }\n\n  // Mark imbalanced braces and brackets as invalid\n  do {\n    block = stack.pop();\n\n    if (block.type !== 'root') {\n      block.nodes.forEach(node => {\n        if (!node.nodes) {\n          if (node.type === 'open') node.isOpen = true;\n          if (node.type === 'close') node.isClose = true;\n          if (!node.nodes) node.type = 'text';\n          node.invalid = true;\n        }\n      });\n\n      // get the location of the block on parent.nodes (block's siblings)\n      let parent = stack[stack.length - 1];\n      let index = parent.nodes.indexOf(block);\n      // replace the (invalid) block with it's nodes\n      parent.nodes.splice(index, 1, ...block.nodes);\n    }\n  } while (stack.length > 0);\n\n  push({ type: 'eos' });\n  return ast;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst utils = require('./utils');\n\nmodule.exports = (ast, options = {}) => {\n  let stringify = (node, parent = {}) => {\n    let invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n","'use strict';\n\nexports.isInteger = num => {\n  if (typeof num === 'number') {\n    return Number.isInteger(num);\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isInteger(Number(num));\n  }\n  return false;\n};\n\n/**\n * Find a node of the given type\n */\n\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\n\n/**\n * Find a node of the given type\n */\n\nexports.exceedsLimit = (min, max, step = 1, limit) => {\n  if (limit === false) return false;\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\n};\n\n/**\n * Escape the given node with '\\\\' before node.value\n */\n\nexports.escapeNode = (block, n = 0, type) => {\n  let node = block.nodes[n];\n  if (!node) return;\n\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\n    if (node.escaped !== true) {\n      node.value = '\\\\' + node.value;\n      node.escaped = true;\n    }\n  }\n};\n\n/**\n * Returns true if the given brace node should be enclosed in literal braces\n */\n\nexports.encloseBrace = node => {\n  if (node.type !== 'brace') return false;\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\n    node.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a brace node is invalid.\n */\n\nexports.isInvalidBrace = block => {\n  if (block.type !== 'brace') return false;\n  if (block.invalid === true || block.dollar) return true;\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\n    block.invalid = true;\n    return true;\n  }\n  if (block.open !== true || block.close !== true) {\n    block.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a node is an open or close node\n */\n\nexports.isOpenOrClose = node => {\n  if (node.type === 'open' || node.type === 'close') {\n    return true;\n  }\n  return node.open === true || node.close === true;\n};\n\n/**\n * Reduce an array of text nodes.\n */\n\nexports.reduce = nodes => nodes.reduce((acc, node) => {\n  if (node.type === 'text') acc.push(node.value);\n  if (node.type === 'range') node.type = 'text';\n  return acc;\n}, []);\n\n/**\n * Flatten an array\n */\n\nexports.flatten = (...args) => {\n  const result = [];\n  const flat = arr => {\n    for (let i = 0; i < arr.length; i++) {\n      let ele = arr[i];\n      Array.isArray(ele) ? flat(ele, result) : ele !== void 0 && result.push(ele);\n    }\n    return result;\n  };\n  flat(args);\n  return result;\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst toRegexRange = require('to-regex-range');\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst transform = toNumber => {\n  return value => toNumber === true ? Number(value) : String(value);\n};\n\nconst isValidValue = value => {\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\n};\n\nconst isNumber = num => Number.isInteger(+num);\n\nconst zeros = input => {\n  let value = `${input}`;\n  let index = -1;\n  if (value[0] === '-') value = value.slice(1);\n  if (value === '0') return false;\n  while (value[++index] === '0');\n  return index > 0;\n};\n\nconst stringify = (start, end, options) => {\n  if (typeof start === 'string' || typeof end === 'string') {\n    return true;\n  }\n  return options.stringify === true;\n};\n\nconst pad = (input, maxLength, toNumber) => {\n  if (maxLength > 0) {\n    let dash = input[0] === '-' ? '-' : '';\n    if (dash) input = input.slice(1);\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\n  }\n  if (toNumber === false) {\n    return String(input);\n  }\n  return input;\n};\n\nconst toMaxLen = (input, maxLength) => {\n  let negative = input[0] === '-' ? '-' : '';\n  if (negative) {\n    input = input.slice(1);\n    maxLength--;\n  }\n  while (input.length < maxLength) input = '0' + input;\n  return negative ? ('-' + input) : input;\n};\n\nconst toSequence = (parts, options) => {\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n\n  let prefix = options.capture ? '' : '?:';\n  let positives = '';\n  let negatives = '';\n  let result;\n\n  if (parts.positives.length) {\n    positives = parts.positives.join('|');\n  }\n\n  if (parts.negatives.length) {\n    negatives = `-(${prefix}${parts.negatives.join('|')})`;\n  }\n\n  if (positives && negatives) {\n    result = `${positives}|${negatives}`;\n  } else {\n    result = positives || negatives;\n  }\n\n  if (options.wrap) {\n    return `(${prefix}${result})`;\n  }\n\n  return result;\n};\n\nconst toRange = (a, b, isNumbers, options) => {\n  if (isNumbers) {\n    return toRegexRange(a, b, { wrap: false, ...options });\n  }\n\n  let start = String.fromCharCode(a);\n  if (a === b) return start;\n\n  let stop = String.fromCharCode(b);\n  return `[${start}-${stop}]`;\n};\n\nconst toRegex = (start, end, options) => {\n  if (Array.isArray(start)) {\n    let wrap = options.wrap === true;\n    let prefix = options.capture ? '' : '?:';\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\n  }\n  return toRegexRange(start, end, options);\n};\n\nconst rangeError = (...args) => {\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\n};\n\nconst invalidRange = (start, end, options) => {\n  if (options.strictRanges === true) throw rangeError([start, end]);\n  return [];\n};\n\nconst invalidStep = (step, options) => {\n  if (options.strictRanges === true) {\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\n  }\n  return [];\n};\n\nconst fillNumbers = (start, end, step = 1, options = {}) => {\n  let a = Number(start);\n  let b = Number(end);\n\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\n    if (options.strictRanges === true) throw rangeError([start, end]);\n    return [];\n  }\n\n  // fix negative zero\n  if (a === 0) a = 0;\n  if (b === 0) b = 0;\n\n  let descending = a > b;\n  let startString = String(start);\n  let endString = String(end);\n  let stepString = String(step);\n  step = Math.max(Math.abs(step), 1);\n\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\n  let toNumber = padded === false && stringify(start, end, options) === false;\n  let format = options.transform || transform(toNumber);\n\n  if (options.toRegex && step === 1) {\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\n  }\n\n  let parts = { negatives: [], positives: [] };\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    if (options.toRegex === true && step > 1) {\n      push(a);\n    } else {\n      range.push(pad(format(a, index), maxLen, toNumber));\n    }\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return step > 1\n      ? toSequence(parts, options)\n      : toRegex(range, null, { wrap: false, ...options });\n  }\n\n  return range;\n};\n\nconst fillLetters = (start, end, step = 1, options = {}) => {\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\n    return invalidRange(start, end, options);\n  }\n\n\n  let format = options.transform || (val => String.fromCharCode(val));\n  let a = `${start}`.charCodeAt(0);\n  let b = `${end}`.charCodeAt(0);\n\n  let descending = a > b;\n  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n\n  if (options.toRegex && step === 1) {\n    return toRange(min, max, false, options);\n  }\n\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    range.push(format(a, index));\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return toRegex(range, null, { wrap: false, options });\n  }\n\n  return range;\n};\n\nconst fill = (start, end, step, options = {}) => {\n  if (end == null && isValidValue(start)) {\n    return [start];\n  }\n\n  if (!isValidValue(start) || !isValidValue(end)) {\n    return invalidRange(start, end, options);\n  }\n\n  if (typeof step === 'function') {\n    return fill(start, end, 1, { transform: step });\n  }\n\n  if (isObject(step)) {\n    return fill(start, end, 0, step);\n  }\n\n  let opts = { ...options };\n  if (opts.capture === true) opts.wrap = true;\n  step = step || opts.step || 1;\n\n  if (!isNumber(step)) {\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\n    return fill(start, end, 1, step);\n  }\n\n  if (isNumber(start) && isNumber(end)) {\n    return fillNumbers(start, end, step, opts);\n  }\n\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\n};\n\nmodule.exports = fill;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// Copyright 2014, 2015, 2016, 2017, 2018 Simon Lydell\n// License: MIT. (See LICENSE.)\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n})\n\n// This regex comes from regex.coffee, and is inserted here by generate-index.js\n// (run `npm run build`).\nexports.default = /((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g\n\nexports.matchToToken = function(match) {\n  var token = {type: \"invalid\", value: match[0], closed: undefined}\n       if (match[ 1]) token.type = \"string\" , token.closed = !!(match[3] || match[4])\n  else if (match[ 5]) token.type = \"comment\"\n  else if (match[ 6]) token.type = \"comment\", token.closed = !!match[7]\n  else if (match[ 8]) token.type = \"regex\"\n  else if (match[ 9]) token.type = \"number\"\n  else if (match[10]) token.type = \"name\"\n  else if (match[11]) token.type = \"punctuator\"\n  else if (match[12]) token.type = \"whitespace\"\n  return token\n}\n","'use strict';\n\nconst util = require('util');\nconst braces = require('braces');\nconst picomatch = require('picomatch');\nconst utils = require('picomatch/lib/utils');\nconst isEmptyString = val => typeof val === 'string' && (val === '' || val === './');\n\n/**\n * Returns an array of strings that match one or more glob patterns.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm(list, patterns[, options]);\n *\n * console.log(mm(['a.js', 'a.txt'], ['*.js']));\n * //=> [ 'a.js' ]\n * ```\n * @param {String|Array<string>} list List of strings to match.\n * @param {String|Array<string>} patterns One or more glob patterns to use for matching.\n * @param {Object} options See available [options](#options)\n * @return {Array} Returns an array of matches\n * @summary false\n * @api public\n */\n\nconst micromatch = (list, patterns, options) => {\n  patterns = [].concat(patterns);\n  list = [].concat(list);\n\n  let omit = new Set();\n  let keep = new Set();\n  let items = new Set();\n  let negatives = 0;\n\n  let onResult = state => {\n    items.add(state.output);\n    if (options && options.onResult) {\n      options.onResult(state);\n    }\n  };\n\n  for (let i = 0; i < patterns.length; i++) {\n    let isMatch = picomatch(String(patterns[i]), { ...options, onResult }, true);\n    let negated = isMatch.state.negated || isMatch.state.negatedExtglob;\n    if (negated) negatives++;\n\n    for (let item of list) {\n      let matched = isMatch(item, true);\n\n      let match = negated ? !matched.isMatch : matched.isMatch;\n      if (!match) continue;\n\n      if (negated) {\n        omit.add(matched.output);\n      } else {\n        omit.delete(matched.output);\n        keep.add(matched.output);\n      }\n    }\n  }\n\n  let result = negatives === patterns.length ? [...items] : [...keep];\n  let matches = result.filter(item => !omit.has(item));\n\n  if (options && matches.length === 0) {\n    if (options.failglob === true) {\n      throw new Error(`No matches found for \"${patterns.join(', ')}\"`);\n    }\n\n    if (options.nonull === true || options.nullglob === true) {\n      return options.unescape ? patterns.map(p => p.replace(/\\\\/g, '')) : patterns;\n    }\n  }\n\n  return matches;\n};\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.match = micromatch;\n\n/**\n * Returns a matcher function from the given glob `pattern` and `options`.\n * The returned function takes a string to match as its only argument and returns\n * true if the string is a match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matcher(pattern[, options]);\n *\n * const isMatch = mm.matcher('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @param {String} `pattern` Glob pattern\n * @param {Object} `options`\n * @return {Function} Returns a matcher function.\n * @api public\n */\n\nmicromatch.matcher = (pattern, options) => picomatch(pattern, options);\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.isMatch(string, patterns[, options]);\n *\n * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(mm.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.any = micromatch.isMatch;\n\n/**\n * Returns a list of strings that _**do not match any**_ of the given `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.not(list, patterns[, options]);\n *\n * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n * //=> ['b.b', 'c.c']\n * ```\n * @param {Array} `list` Array of strings to match.\n * @param {String|Array} `patterns` One or more glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array} Returns an array of strings that **do not match** the given patterns.\n * @api public\n */\n\nmicromatch.not = (list, patterns, options = {}) => {\n  patterns = [].concat(patterns).map(String);\n  let result = new Set();\n  let items = [];\n\n  let onResult = state => {\n    if (options.onResult) options.onResult(state);\n    items.push(state.output);\n  };\n\n  let matches = micromatch(list, patterns, { ...options, onResult });\n\n  for (let item of items) {\n    if (!matches.includes(item)) {\n      result.add(item);\n    }\n  }\n  return [...result];\n};\n\n/**\n * Returns true if the given `string` contains the given pattern. Similar\n * to [.isMatch](#isMatch) but the pattern can match any part of the string.\n *\n * ```js\n * var mm = require('micromatch');\n * // mm.contains(string, pattern[, options]);\n *\n * console.log(mm.contains('aa/bb/cc', '*b'));\n * //=> true\n * console.log(mm.contains('aa/bb/cc', '*d'));\n * //=> false\n * ```\n * @param {String} `str` The string to match.\n * @param {String|Array} `patterns` Glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if the patter matches any part of `str`.\n * @api public\n */\n\nmicromatch.contains = (str, pattern, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  if (Array.isArray(pattern)) {\n    return pattern.some(p => micromatch.contains(str, p, options));\n  }\n\n  if (typeof pattern === 'string') {\n    if (isEmptyString(str) || isEmptyString(pattern)) {\n      return false;\n    }\n\n    if (str.includes(pattern) || (str.startsWith('./') && str.slice(2).includes(pattern))) {\n      return true;\n    }\n  }\n\n  return micromatch.isMatch(str, pattern, { ...options, contains: true });\n};\n\n/**\n * Filter the keys of the given object with the given `glob` pattern\n * and `options`. Does not attempt to match nested keys. If you need this feature,\n * use [glob-object][] instead.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matchKeys(object, patterns[, options]);\n *\n * const obj = { aa: 'a', ab: 'b', ac: 'c' };\n * console.log(mm.matchKeys(obj, '*b'));\n * //=> { ab: 'b' }\n * ```\n * @param {Object} `object` The object with keys to filter.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Object} Returns an object with only keys that match the given patterns.\n * @api public\n */\n\nmicromatch.matchKeys = (obj, patterns, options) => {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('Expected the first argument to be an object');\n  }\n  let keys = micromatch(Object.keys(obj), patterns, options);\n  let res = {};\n  for (let key of keys) res[key] = obj[key];\n  return res;\n};\n\n/**\n * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.some(list, patterns[, options]);\n *\n * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // true\n * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.some = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (items.some(item => isMatch(item))) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns true if every string in the given `list` matches\n * any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.every(list, patterns[, options]);\n *\n * console.log(mm.every('foo.js', ['foo.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // false\n * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.every = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (!items.every(item => isMatch(item))) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Returns true if **all** of the given `patterns` match\n * the specified string.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.all(string, patterns[, options]);\n *\n * console.log(mm.all('foo.js', ['foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', '!foo.js']));\n * // false\n *\n * console.log(mm.all('foo.js', ['*.js', 'foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n * // true\n * ```\n * @param {String|Array} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.all = (str, patterns, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  return [].concat(patterns).every(p => picomatch(p, options)(str));\n};\n\n/**\n * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.capture(pattern, string[, options]);\n *\n * console.log(mm.capture('test/*.js', 'test/foo.js'));\n * //=> ['foo']\n * console.log(mm.capture('test/*.js', 'foo/bar.css'));\n * //=> null\n * ```\n * @param {String} `glob` Glob pattern to use for matching.\n * @param {String} `input` String to match\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns an array of captures if the input matches the glob pattern, otherwise `null`.\n * @api public\n */\n\nmicromatch.capture = (glob, input, options) => {\n  let posix = utils.isWindows(options);\n  let regex = picomatch.makeRe(String(glob), { ...options, capture: true });\n  let match = regex.exec(posix ? utils.toPosixSlashes(input) : input);\n\n  if (match) {\n    return match.slice(1).map(v => v === void 0 ? '' : v);\n  }\n};\n\n/**\n * Create a regular expression from the given glob `pattern`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.makeRe(pattern[, options]);\n *\n * console.log(mm.makeRe('*.js'));\n * //=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n * ```\n * @param {String} `pattern` A glob pattern to convert to regex.\n * @param {Object} `options`\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\nmicromatch.makeRe = (...args) => picomatch.makeRe(...args);\n\n/**\n * Scan a glob pattern to separate the pattern into segments. Used\n * by the [split](#split) method.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.scan(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\nmicromatch.scan = (...args) => picomatch.scan(...args);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm(pattern[, options]);\n * ```\n * @param {String} `glob`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as regex source string.\n * @api public\n */\n\nmicromatch.parse = (patterns, options) => {\n  let res = [];\n  for (let pattern of [].concat(patterns || [])) {\n    for (let str of braces(String(pattern), options)) {\n      res.push(picomatch.parse(str, options));\n    }\n  }\n  return res;\n};\n\n/**\n * Process the given brace `pattern`.\n *\n * ```js\n * const { braces } = require('micromatch');\n * console.log(braces('foo/{a,b,c}/bar'));\n * //=> [ 'foo/(a|b|c)/bar' ]\n *\n * console.log(braces('foo/{a,b,c}/bar', { expand: true }));\n * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\n * ```\n * @param {String} `pattern` String with brace pattern to process.\n * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.\n * @return {Array}\n * @api public\n */\n\nmicromatch.braces = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  if ((options && options.nobrace === true) || !/\\{.*\\}/.test(pattern)) {\n    return [pattern];\n  }\n  return braces(pattern, options);\n};\n\n/**\n * Expand braces\n */\n\nmicromatch.braceExpand = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  return micromatch.braces(pattern, { ...options, expand: true });\n};\n\n/**\n * Expose micromatch\n */\n\nmodule.exports = micromatch;\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","'use strict';\n\nmodule.exports = require('./lib/picomatch');\n","'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = (opts) => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index];\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren' && !EXTGLOB_CHARS[tok.value]) {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.prev.type === 'bos' && eos()) {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance() || '';\n      } else {\n        value += advance() || '';\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n    